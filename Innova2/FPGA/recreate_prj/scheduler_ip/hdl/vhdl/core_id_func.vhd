-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity core_id_func is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    msg_i : IN STD_LOGIC_VECTOR (31 downto 0);
    msg_core_id : IN STD_LOGIC_VECTOR (31 downto 0);
    msg_old_features_V : IN STD_LOGIC_VECTOR (511 downto 0);
    msg_new_features_V : IN STD_LOGIC_VECTOR (511 downto 0);
    CORE_NUM : IN STD_LOGIC_VECTOR (31 downto 0);
    bit_clusters_V_21 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_0 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_1 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_2 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_3 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_4 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_5 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_6 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_7 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_8 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_9 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_10 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_11 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_12 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_13 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_14 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_15 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_16 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_17 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_18 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_19 : IN STD_LOGIC_VECTOR (511 downto 0);
    bit_clusters_V_20 : IN STD_LOGIC_VECTOR (511 downto 0);
    merge_weights_V_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_0_ce0 : OUT STD_LOGIC;
    merge_weights_V_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_1_ce0 : OUT STD_LOGIC;
    merge_weights_V_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_2_ce0 : OUT STD_LOGIC;
    merge_weights_V_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_3_ce0 : OUT STD_LOGIC;
    merge_weights_V_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_4_ce0 : OUT STD_LOGIC;
    merge_weights_V_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_5_ce0 : OUT STD_LOGIC;
    merge_weights_V_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_6_ce0 : OUT STD_LOGIC;
    merge_weights_V_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_7_ce0 : OUT STD_LOGIC;
    merge_weights_V_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_8_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_8_ce0 : OUT STD_LOGIC;
    merge_weights_V_8_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_9_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_9_ce0 : OUT STD_LOGIC;
    merge_weights_V_9_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_10_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_10_ce0 : OUT STD_LOGIC;
    merge_weights_V_10_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_11_ce0 : OUT STD_LOGIC;
    merge_weights_V_11_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_12_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_12_ce0 : OUT STD_LOGIC;
    merge_weights_V_12_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_13_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_13_ce0 : OUT STD_LOGIC;
    merge_weights_V_13_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_14_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_14_ce0 : OUT STD_LOGIC;
    merge_weights_V_14_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_15_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_15_ce0 : OUT STD_LOGIC;
    merge_weights_V_15_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_16_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_16_ce0 : OUT STD_LOGIC;
    merge_weights_V_16_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_17_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_17_ce0 : OUT STD_LOGIC;
    merge_weights_V_17_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_18_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_18_ce0 : OUT STD_LOGIC;
    merge_weights_V_18_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_19_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_19_ce0 : OUT STD_LOGIC;
    merge_weights_V_19_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_20_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_20_ce0 : OUT STD_LOGIC;
    merge_weights_V_20_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_21_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_21_ce0 : OUT STD_LOGIC;
    merge_weights_V_21_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_22_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_22_ce0 : OUT STD_LOGIC;
    merge_weights_V_22_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_23_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_23_ce0 : OUT STD_LOGIC;
    merge_weights_V_23_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_24_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_24_ce0 : OUT STD_LOGIC;
    merge_weights_V_24_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_25_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_25_ce0 : OUT STD_LOGIC;
    merge_weights_V_25_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_26_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_26_ce0 : OUT STD_LOGIC;
    merge_weights_V_26_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_27_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_27_ce0 : OUT STD_LOGIC;
    merge_weights_V_27_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_28_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_28_ce0 : OUT STD_LOGIC;
    merge_weights_V_28_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_29_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_29_ce0 : OUT STD_LOGIC;
    merge_weights_V_29_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_30_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_30_ce0 : OUT STD_LOGIC;
    merge_weights_V_30_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_31_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_31_ce0 : OUT STD_LOGIC;
    merge_weights_V_31_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_32_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_32_ce0 : OUT STD_LOGIC;
    merge_weights_V_32_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_33_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_33_ce0 : OUT STD_LOGIC;
    merge_weights_V_33_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_34_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_34_ce0 : OUT STD_LOGIC;
    merge_weights_V_34_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_35_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_35_ce0 : OUT STD_LOGIC;
    merge_weights_V_35_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_36_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_36_ce0 : OUT STD_LOGIC;
    merge_weights_V_36_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_37_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_37_ce0 : OUT STD_LOGIC;
    merge_weights_V_37_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_38_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_38_ce0 : OUT STD_LOGIC;
    merge_weights_V_38_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_39_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_39_ce0 : OUT STD_LOGIC;
    merge_weights_V_39_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_40_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_40_ce0 : OUT STD_LOGIC;
    merge_weights_V_40_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_41_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_41_ce0 : OUT STD_LOGIC;
    merge_weights_V_41_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_42_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_42_ce0 : OUT STD_LOGIC;
    merge_weights_V_42_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_43_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_43_ce0 : OUT STD_LOGIC;
    merge_weights_V_43_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_44_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_44_ce0 : OUT STD_LOGIC;
    merge_weights_V_44_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_45_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_45_ce0 : OUT STD_LOGIC;
    merge_weights_V_45_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_46_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_46_ce0 : OUT STD_LOGIC;
    merge_weights_V_46_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_47_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_47_ce0 : OUT STD_LOGIC;
    merge_weights_V_47_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_48_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_48_ce0 : OUT STD_LOGIC;
    merge_weights_V_48_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_49_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_49_ce0 : OUT STD_LOGIC;
    merge_weights_V_49_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_50_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_50_ce0 : OUT STD_LOGIC;
    merge_weights_V_50_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_51_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_51_ce0 : OUT STD_LOGIC;
    merge_weights_V_51_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_52_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_52_ce0 : OUT STD_LOGIC;
    merge_weights_V_52_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_53_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_53_ce0 : OUT STD_LOGIC;
    merge_weights_V_53_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_54_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_54_ce0 : OUT STD_LOGIC;
    merge_weights_V_54_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_55_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_55_ce0 : OUT STD_LOGIC;
    merge_weights_V_55_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_56_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_56_ce0 : OUT STD_LOGIC;
    merge_weights_V_56_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_57_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_57_ce0 : OUT STD_LOGIC;
    merge_weights_V_57_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_58_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_58_ce0 : OUT STD_LOGIC;
    merge_weights_V_58_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_59_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_59_ce0 : OUT STD_LOGIC;
    merge_weights_V_59_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_60_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_60_ce0 : OUT STD_LOGIC;
    merge_weights_V_60_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_61_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_61_ce0 : OUT STD_LOGIC;
    merge_weights_V_61_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_62_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_62_ce0 : OUT STD_LOGIC;
    merge_weights_V_62_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_63_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_weights_V_63_ce0 : OUT STD_LOGIC;
    merge_weights_V_63_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    compute_core_id_out_s_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    compute_core_id_out_s_1_full_n : IN STD_LOGIC;
    compute_core_id_out_s_1_write : OUT STD_LOGIC;
    compute_core_id_out_1_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    compute_core_id_out_1_0_full_n : IN STD_LOGIC;
    compute_core_id_out_1_0_write : OUT STD_LOGIC;
    update_cluster_in_V_s_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    update_cluster_in_V_s_full_n : IN STD_LOGIC;
    update_cluster_in_V_s_write : OUT STD_LOGIC;
    update_cluster_in_V_4_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    update_cluster_in_V_4_full_n : IN STD_LOGIC;
    update_cluster_in_V_4_write : OUT STD_LOGIC;
    update_cluster_in_V_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    update_cluster_in_V_3_full_n : IN STD_LOGIC;
    update_cluster_in_V_3_write : OUT STD_LOGIC;
    update_cluster_in_V_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    update_cluster_in_V_1_full_n : IN STD_LOGIC;
    update_cluster_in_V_1_write : OUT STD_LOGIC );
end;


architecture behav of core_id_func is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110111";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000111";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010111";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100111";
    constant ap_const_lv32_E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_F7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110111";
    constant ap_const_lv32_F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_107 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000111";
    constant ap_const_lv32_108 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001000";
    constant ap_const_lv32_10F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001111";
    constant ap_const_lv32_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010000";
    constant ap_const_lv32_117 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010111";
    constant ap_const_lv32_118 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_127 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100111";
    constant ap_const_lv32_128 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101000";
    constant ap_const_lv32_12F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_137 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110111";
    constant ap_const_lv32_138 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_147 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000111";
    constant ap_const_lv32_148 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_157 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010111";
    constant ap_const_lv32_158 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_167 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100111";
    constant ap_const_lv32_168 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101000";
    constant ap_const_lv32_16F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101111";
    constant ap_const_lv32_170 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110000";
    constant ap_const_lv32_177 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110111";
    constant ap_const_lv32_178 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_187 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000111";
    constant ap_const_lv32_188 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001000";
    constant ap_const_lv32_18F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001111";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_197 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010111";
    constant ap_const_lv32_198 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100111";
    constant ap_const_lv32_1A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101000";
    constant ap_const_lv32_1AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101111";
    constant ap_const_lv32_1B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110110000";
    constant ap_const_lv32_1B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110110111";
    constant ap_const_lv32_1B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000111";
    constant ap_const_lv32_1C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001000";
    constant ap_const_lv32_1CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001111";
    constant ap_const_lv32_1D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111010000";
    constant ap_const_lv32_1D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111010111";
    constant ap_const_lv32_1D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100111";
    constant ap_const_lv32_1E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101000";
    constant ap_const_lv32_1EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101111";
    constant ap_const_lv32_1F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110000";
    constant ap_const_lv32_1F7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110111";
    constant ap_const_lv32_1F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal compute_core_id_out_s_1_blk_n : STD_LOGIC;
    signal compute_core_id_out_1_0_blk_n : STD_LOGIC;
    signal update_cluster_in_V_s_blk_n : STD_LOGIC;
    signal update_cluster_in_V_4_blk_n : STD_LOGIC;
    signal update_cluster_in_V_3_blk_n : STD_LOGIC;
    signal update_cluster_in_V_1_blk_n : STD_LOGIC;
    signal membership_ans_V_i_reg_1418 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal tmp_core_id_reg_1430 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal membership_index_reg_1442 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_i_fu_1595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_3531 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_i_reg_3531_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_i_reg_3531_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_i_reg_3531_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_i_reg_3531_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_i_reg_3531_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal c_fu_1601_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_reg_3535 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal membership_index_2_c_fu_1607_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal membership_index_2_c_reg_3540 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal membership_index_2_c_reg_3540_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal membership_index_2_c_reg_3540_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal membership_index_2_c_reg_3540_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal membership_index_2_c_reg_3540_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal membership_index_2_c_reg_3540_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal tmp_i_76_fu_1611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_76_reg_3545 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_i_76_reg_3545_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_i_76_reg_3545_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_i_76_reg_3545_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_i_76_reg_3545_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal tmp_i_76_reg_3545_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_Result_8_i_reg_3589 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_Result_16_i_reg_3629 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_Result_16_i_reg_3629_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_Result_i_reg_3709 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_Result_i_reg_3709_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ansmap_V_1_i_fu_2568_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ansmap_V_1_i_reg_3869 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp_fu_2582_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_reg_3874 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal merge_weights_V_4_lo_reg_3879 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal merge_weights_V_5_lo_reg_3884 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tmp3_fu_2596_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp3_reg_3889 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal merge_weights_V_13_l_reg_3899 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tmp6_fu_2630_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp6_reg_3904 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp6_reg_3904_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp8_fu_2636_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp8_reg_3909 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp10_fu_2642_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp10_reg_3914 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal merge_weights_V_29_l_reg_3919 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tmp14_fu_2704_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp14_reg_3924 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp14_reg_3924_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp16_fu_2710_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp16_reg_3929 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp17_fu_2716_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp17_reg_3934 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp20_fu_2722_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp20_reg_3939 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp21_fu_2728_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp21_reg_3944 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp23_fu_2734_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp23_reg_3949 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp25_fu_2740_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp25_reg_3954 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal merge_weights_V_61_l_reg_3959 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tmp30_fu_2866_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp30_reg_3964 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp30_reg_3964_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp30_reg_3964_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp32_fu_2872_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp32_reg_3969 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp33_fu_2878_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp33_reg_3974 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp36_fu_2884_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp36_reg_3979 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp37_fu_2890_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp37_reg_3984 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp39_fu_2896_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp39_reg_3989 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp40_fu_2902_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp40_reg_3994 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp44_fu_2908_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp44_reg_3999 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp45_fu_2914_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp45_reg_4004 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp47_fu_2920_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp47_reg_4009 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp48_fu_2926_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp48_reg_4014 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp51_fu_2932_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp51_reg_4019 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp52_fu_2938_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp52_reg_4024 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp54_fu_2944_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp54_reg_4029 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp56_fu_2950_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp56_reg_4034 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp5_fu_3014_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp5_reg_4039 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal tmp7_fu_3036_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp7_reg_4044 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal tmp15_fu_3055_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp15_reg_4054 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal tmp15_reg_4054_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal tmp18_fu_3103_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp18_reg_4059 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal tmp18_reg_4059_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal tmp31_fu_3122_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp31_reg_4069 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal tmp31_reg_4069_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal tmp34_fu_3160_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp34_reg_4074 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal tmp34_reg_4074_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal tmp34_reg_4074_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal tmp42_fu_3198_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp42_reg_4079 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal tmp49_fu_3246_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp49_reg_4084 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal tmp12_fu_3286_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp12_reg_4089 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    signal merge_weights_V_32_l_reg_4094 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tmp41_fu_3298_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp41_reg_4099 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    signal tmp41_reg_4099_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    signal tmp27_fu_3346_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp27_reg_4104 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal membership_ans_V_1_i_fu_3379_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal membership_index_1_fu_3387_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_predicate_tran2to9_state2 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_phi_mux_membership_index_phi_fu_1446_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_rhs_V_reg_1454 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter1_rhs_V_reg_1454 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal tmp_85_i_fu_1625_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_1_i_fu_1640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_2_i_fu_1655_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_3_i_fu_1670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_4_i_fu_1685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_5_i_fu_1700_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_6_i_fu_1715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_7_i_fu_1730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_9_i_fu_1755_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_i_77_fu_1770_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_10_i_fu_1785_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_11_i_fu_1800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_12_i_fu_1815_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_13_i_fu_1830_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_14_i_fu_1845_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_16_i_fu_1870_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_17_i_fu_1885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_18_i_fu_1900_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_19_i_fu_1915_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_20_i_fu_1930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_21_i_fu_1945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_22_i_fu_1960_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_23_i_fu_1975_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_24_i_fu_1990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_25_i_fu_2005_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_26_i_fu_2020_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_27_i_fu_2035_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_28_i_fu_2050_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_29_i_fu_2065_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_30_i_fu_2080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_32_i_fu_2105_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_33_i_fu_2120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_34_i_fu_2135_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_35_i_fu_2150_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_36_i_fu_2165_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_37_i_fu_2180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_38_i_fu_2195_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_39_i_fu_2210_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_40_i_fu_2225_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_41_i_fu_2240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_42_i_fu_2255_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_43_i_fu_2270_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_44_i_fu_2285_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_45_i_fu_2300_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_46_i_fu_2315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_47_i_fu_2330_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_48_i_fu_2345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_49_i_fu_2360_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_50_i_fu_2375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_51_i_fu_2390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_52_i_fu_2405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_53_i_fu_2420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_54_i_fu_2435_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_55_i_fu_2450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_56_i_fu_2465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_57_i_fu_2480_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_58_i_fu_2495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_59_i_fu_2510_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_60_i_fu_2525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_61_i_fu_2540_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_62_i_fu_2555_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_8_i_fu_2602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_15_i_fu_3042_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_31_i_fu_3109_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal compute_core_id_out_s_11_update : STD_LOGIC;
    signal compute_core_id_out_s_11_status : STD_LOGIC;
    signal update_cluster_in_V_s1_status : STD_LOGIC;
    signal ap_block_state9 : BOOLEAN;
    signal update_cluster_in_V_s1_update : STD_LOGIC;
    signal r_V_fu_1616_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_925_fu_1621_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_i_fu_1630_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_i_fu_1645_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_i_fu_1660_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_i_fu_1675_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_i_fu_1690_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_i_fu_1705_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_i_fu_1720_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_i_fu_1745_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_10_i_fu_1760_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_11_i_fu_1775_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_12_i_fu_1790_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_13_i_fu_1805_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_14_i_fu_1820_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_15_i_fu_1835_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_17_i_fu_1860_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_18_i_fu_1875_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_i_fu_1890_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_20_i_fu_1905_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_21_i_fu_1920_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_22_i_fu_1935_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_23_i_fu_1950_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_24_i_fu_1965_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_25_i_fu_1980_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_26_i_fu_1995_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_27_i_fu_2010_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_28_i_fu_2025_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_29_i_fu_2040_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_30_i_fu_2055_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_31_i_fu_2070_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_32_i_fu_2095_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_33_i_fu_2110_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_34_i_fu_2125_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_35_i_fu_2140_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_36_i_fu_2155_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_37_i_fu_2170_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_38_i_fu_2185_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_39_i_fu_2200_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_40_i_fu_2215_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_41_i_fu_2230_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_42_i_fu_2245_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_43_i_fu_2260_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_44_i_fu_2275_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_45_i_fu_2290_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_46_i_fu_2305_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_47_i_fu_2320_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_48_i_fu_2335_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_49_i_fu_2350_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_50_i_fu_2365_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_51_i_fu_2380_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_52_i_fu_2395_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_53_i_fu_2410_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_54_i_fu_2425_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_55_i_fu_2440_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_56_i_fu_2455_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_57_i_fu_2470_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_58_i_fu_2485_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_59_i_fu_2500_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_60_i_fu_2515_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_61_i_fu_2530_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_62_i_fu_2545_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_87_cast_cast_i_fu_2560_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_1_cast_cast_i_fu_2564_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_3_cast_cast_i_fu_2578_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_2_cast_cast_i_fu_2574_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_7_cast_cast_i_fu_2592_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_6_cast_cast_i_fu_2588_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd4246_i_cast_fu_2610_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd4243_i_cast_fu_2606_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd4252_i_cast_fu_2618_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd4249_i_cast_fu_2614_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd4261_i_cast_fu_2626_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd4258_i_cast_fu_2622_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_17_cast_i_cas_fu_2652_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_16_cast_i_cas_fu_2648_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_19_cast_i_cas_fu_2660_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_18_cast_i_cas_fu_2656_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_21_cast_i_cas_fu_2668_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_20_cast_i_cas_fu_2664_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_23_cast_i_cas_fu_2676_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_22_cast_i_cas_fu_2672_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_25_cast_i_cas_fu_2684_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_24_cast_i_cas_fu_2680_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_27_cast_i_cas_fu_2692_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_26_cast_i_cas_fu_2688_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_30_cast_i_cas_fu_2700_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_29_cast_i_cas_fu_2696_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_33_cast_i_cas_fu_2750_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_32_cast_i_cas_fu_2746_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_35_cast_i_cas_fu_2758_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_34_cast_i_cas_fu_2754_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_37_cast_i_cas_fu_2766_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_36_cast_i_cas_fu_2762_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_39_cast_i_cas_fu_2774_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_38_cast_i_cas_fu_2770_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_41_cast_i_cas_fu_2782_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_40_cast_i_cas_fu_2778_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_43_cast_i_cas_fu_2790_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_42_cast_i_cas_fu_2786_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_45_cast_i_cas_fu_2798_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_44_cast_i_cas_fu_2794_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_47_cast_i_cas_fu_2806_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_46_cast_i_cas_fu_2802_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_49_cast_i_cas_fu_2814_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_48_cast_i_cas_fu_2810_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_51_cast_i_cas_fu_2822_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_50_cast_i_cas_fu_2818_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_53_cast_i_cas_fu_2830_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_52_cast_i_cas_fu_2826_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_55_cast_i_cas_fu_2838_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_54_cast_i_cas_fu_2834_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_57_cast_i_cas_fu_2846_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_56_cast_i_cas_fu_2842_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_59_cast_i_cas_fu_2854_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_58_cast_i_cas_fu_2850_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_62_cast_i_cas_fu_2862_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_87_61_cast_i_cas_fu_2858_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ansmap_V_1_cast_cast_fu_2956_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_cast_fu_2959_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ansmap_V_3_i_fu_2962_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_87_4_cast_cast_i_fu_2972_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ansmap_V_3_cast_cast_fu_2968_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_87_5_cast_cast_i_fu_2975_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp3_cast_fu_2984_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp2_fu_2987_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp1_fu_2978_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp2_cast_fu_2993_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ansmap_V_7_i_fu_2997_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal extLd4240_i_fu_3007_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ansmap_V_7_cast_cast_fu_3003_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal extLd4255_i_cast_fu_3011_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp10_cast_fu_3023_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp9_fu_3026_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp8_cast_fu_3020_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp9_cast_fu_3032_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp16_cast_fu_3049_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp17_cast_fu_3052_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp20_cast_fu_3061_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp21_cast_fu_3064_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp19_fu_3067_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_87_28_cast_i_cas_fu_3046_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp25_cast_fu_3080_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp24_fu_3083_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp23_cast_fu_3077_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp24_cast_fu_3089_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp22_fu_3093_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp19_cast_fu_3073_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp22_cast_fu_3099_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp32_cast_fu_3116_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp33_cast_fu_3119_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp36_cast_fu_3128_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp37_cast_fu_3131_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp35_fu_3134_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp39_cast_fu_3144_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp40_cast_fu_3147_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp38_fu_3150_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp35_cast_fu_3140_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp38_cast_fu_3156_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp44_cast_fu_3166_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp45_cast_fu_3169_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp43_fu_3172_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp47_cast_fu_3182_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp48_cast_fu_3185_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp46_fu_3188_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp43_cast_fu_3178_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp46_cast_fu_3194_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp51_cast_fu_3204_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp52_cast_fu_3207_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp50_fu_3210_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_87_60_cast_i_cas_fu_3113_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp56_cast_fu_3223_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp55_fu_3226_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp54_cast_fu_3220_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp55_cast_fu_3232_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp53_fu_3236_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp50_cast_fu_3216_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp53_cast_fu_3242_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp6_cast_fu_3252_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp4_fu_3255_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp7_cast_fu_3260_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ansmap_V_14_i_fu_3263_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_87_15_cast_i_fu_3273_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ansmap_V_14_cast_i_fu_3269_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp13_fu_3277_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp14_cast_fu_3283_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp42_cast_fu_3292_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp49_cast_fu_3295_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp15_cast_fu_3304_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp11_fu_3307_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp18_cast_fu_3312_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ansmap_V_30_i_fu_3315_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_87_31_cast_i_fu_3325_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ansmap_V_30_cast_i_fu_3321_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp29_fu_3328_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp30_cast_fu_3334_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp28_fu_3337_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp31_cast_fu_3343_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp34_cast_fu_3352_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp26_fu_3355_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp41_cast_fu_3360_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ansmap_V_62_i_fu_3363_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ansmap_V_62_cast_i_fu_3369_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_i_fu_3373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_889 : BOOLEAN;
    signal ap_condition_893 : BOOLEAN;
    signal ap_condition_897 : BOOLEAN;
    signal ap_condition_901 : BOOLEAN;
    signal ap_condition_905 : BOOLEAN;
    signal ap_condition_909 : BOOLEAN;
    signal ap_condition_913 : BOOLEAN;
    signal ap_condition_917 : BOOLEAN;
    signal ap_condition_921 : BOOLEAN;
    signal ap_condition_925 : BOOLEAN;
    signal ap_condition_929 : BOOLEAN;
    signal ap_condition_933 : BOOLEAN;
    signal ap_condition_937 : BOOLEAN;
    signal ap_condition_941 : BOOLEAN;
    signal ap_condition_945 : BOOLEAN;
    signal ap_condition_949 : BOOLEAN;
    signal ap_condition_953 : BOOLEAN;
    signal ap_condition_957 : BOOLEAN;
    signal ap_condition_961 : BOOLEAN;
    signal ap_condition_965 : BOOLEAN;
    signal ap_condition_1009 : BOOLEAN;
    signal ap_condition_1012 : BOOLEAN;
    signal ap_condition_556 : BOOLEAN;


begin




    ansmap_V_1_i_reg_3869_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ansmap_V_1_i_reg_3869 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ansmap_V_1_i_reg_3869 <= ansmap_V_1_i_fu_2568_p2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_ST_fsm_state1 = ap_CS_fsm))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((ap_start = ap_const_logic_1) and (ap_ST_fsm_state1 = ap_CS_fsm))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_rhs_V_reg_1454_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= ap_const_lv512_lc_1;
            else
                if ((ap_const_boolean_1 = ap_condition_556)) then
                    if ((ap_const_boolean_1 = ap_condition_1012)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_0;
                    elsif ((ap_const_boolean_1 = ap_condition_1009)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_21;
                    elsif ((ap_const_boolean_1 = ap_condition_965)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_20;
                    elsif ((ap_const_boolean_1 = ap_condition_961)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_19;
                    elsif ((ap_const_boolean_1 = ap_condition_957)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_18;
                    elsif ((ap_const_boolean_1 = ap_condition_953)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_17;
                    elsif ((ap_const_boolean_1 = ap_condition_949)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_16;
                    elsif ((ap_const_boolean_1 = ap_condition_945)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_15;
                    elsif ((ap_const_boolean_1 = ap_condition_941)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_14;
                    elsif ((ap_const_boolean_1 = ap_condition_937)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_13;
                    elsif ((ap_const_boolean_1 = ap_condition_933)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_12;
                    elsif ((ap_const_boolean_1 = ap_condition_929)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_11;
                    elsif ((ap_const_boolean_1 = ap_condition_925)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_10;
                    elsif ((ap_const_boolean_1 = ap_condition_921)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_9;
                    elsif ((ap_const_boolean_1 = ap_condition_917)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_8;
                    elsif ((ap_const_boolean_1 = ap_condition_913)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_7;
                    elsif ((ap_const_boolean_1 = ap_condition_909)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_6;
                    elsif ((ap_const_boolean_1 = ap_condition_905)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_5;
                    elsif ((ap_const_boolean_1 = ap_condition_901)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_4;
                    elsif ((ap_const_boolean_1 = ap_condition_897)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_3;
                    elsif ((ap_const_boolean_1 = ap_condition_893)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_2;
                    elsif ((ap_const_boolean_1 = ap_condition_889)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= ap_phi_reg_pp0_iter0_rhs_V_reg_1454;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    c_reg_3535_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                c_reg_3535 <= ap_const_lv5_0;
            else
                if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    c_reg_3535 <= c_fu_1601_p2;
                end if; 
            end if;
        end if;
    end process;


    membership_ans_V_i_reg_1418_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                membership_ans_V_i_reg_1418 <= ap_const_lv16_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter5_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
                    membership_ans_V_i_reg_1418 <= membership_ans_V_1_i_fu_3379_p3;
                elsif (((ap_start = ap_const_logic_1) and (ap_ST_fsm_state1 = ap_CS_fsm))) then 
                    membership_ans_V_i_reg_1418 <= ap_const_lv16_0;
                end if; 
            end if;
        end if;
    end process;


    membership_index_2_c_reg_3540_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                membership_index_2_c_reg_3540(0) <= '0';
                membership_index_2_c_reg_3540(1) <= '0';
                membership_index_2_c_reg_3540(2) <= '0';
                membership_index_2_c_reg_3540(3) <= '0';
                membership_index_2_c_reg_3540(4) <= '0';
            else
                if (((tmp_i_fu_1595_p2 = ap_const_lv1_1) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                                        membership_index_2_c_reg_3540(4 downto 0) <= membership_index_2_c_fu_1607_p1(4 downto 0);
                end if; 
            end if;
        end if;
    end process;


    membership_index_2_c_reg_3540_pp0_iter1_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                membership_index_2_c_reg_3540_pp0_iter1_reg(0) <= '0';
                membership_index_2_c_reg_3540_pp0_iter1_reg(1) <= '0';
                membership_index_2_c_reg_3540_pp0_iter1_reg(2) <= '0';
                membership_index_2_c_reg_3540_pp0_iter1_reg(3) <= '0';
                membership_index_2_c_reg_3540_pp0_iter1_reg(4) <= '0';
            else
                if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                                        membership_index_2_c_reg_3540_pp0_iter1_reg(4 downto 0) <= membership_index_2_c_reg_3540(4 downto 0);
                end if; 
            end if;
        end if;
    end process;


    membership_index_2_c_reg_3540_pp0_iter2_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                membership_index_2_c_reg_3540_pp0_iter2_reg(0) <= '0';
                membership_index_2_c_reg_3540_pp0_iter2_reg(1) <= '0';
                membership_index_2_c_reg_3540_pp0_iter2_reg(2) <= '0';
                membership_index_2_c_reg_3540_pp0_iter2_reg(3) <= '0';
                membership_index_2_c_reg_3540_pp0_iter2_reg(4) <= '0';
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                                        membership_index_2_c_reg_3540_pp0_iter2_reg(4 downto 0) <= membership_index_2_c_reg_3540_pp0_iter1_reg(4 downto 0);
                end if; 
            end if;
        end if;
    end process;


    membership_index_2_c_reg_3540_pp0_iter3_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                membership_index_2_c_reg_3540_pp0_iter3_reg(0) <= '0';
                membership_index_2_c_reg_3540_pp0_iter3_reg(1) <= '0';
                membership_index_2_c_reg_3540_pp0_iter3_reg(2) <= '0';
                membership_index_2_c_reg_3540_pp0_iter3_reg(3) <= '0';
                membership_index_2_c_reg_3540_pp0_iter3_reg(4) <= '0';
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                                        membership_index_2_c_reg_3540_pp0_iter3_reg(4 downto 0) <= membership_index_2_c_reg_3540_pp0_iter2_reg(4 downto 0);
                end if; 
            end if;
        end if;
    end process;


    membership_index_2_c_reg_3540_pp0_iter4_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                membership_index_2_c_reg_3540_pp0_iter4_reg(0) <= '0';
                membership_index_2_c_reg_3540_pp0_iter4_reg(1) <= '0';
                membership_index_2_c_reg_3540_pp0_iter4_reg(2) <= '0';
                membership_index_2_c_reg_3540_pp0_iter4_reg(3) <= '0';
                membership_index_2_c_reg_3540_pp0_iter4_reg(4) <= '0';
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                                        membership_index_2_c_reg_3540_pp0_iter4_reg(4 downto 0) <= membership_index_2_c_reg_3540_pp0_iter3_reg(4 downto 0);
                end if; 
            end if;
        end if;
    end process;


    membership_index_2_c_reg_3540_pp0_iter5_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                membership_index_2_c_reg_3540_pp0_iter5_reg(0) <= '0';
                membership_index_2_c_reg_3540_pp0_iter5_reg(1) <= '0';
                membership_index_2_c_reg_3540_pp0_iter5_reg(2) <= '0';
                membership_index_2_c_reg_3540_pp0_iter5_reg(3) <= '0';
                membership_index_2_c_reg_3540_pp0_iter5_reg(4) <= '0';
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                                        membership_index_2_c_reg_3540_pp0_iter5_reg(4 downto 0) <= membership_index_2_c_reg_3540_pp0_iter4_reg(4 downto 0);
                end if; 
            end if;
        end if;
    end process;


    membership_index_reg_1442_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                membership_index_reg_1442 <= ap_const_lv5_0;
            else
                if (((tmp_i_76_reg_3545 = ap_const_lv1_1) and (tmp_i_reg_3531 = ap_const_lv1_1) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    membership_index_reg_1442 <= c_reg_3535;
                elsif (((ap_start = ap_const_logic_1) and (ap_ST_fsm_state1 = ap_CS_fsm))) then 
                    membership_index_reg_1442 <= ap_const_lv5_0;
                end if; 
            end if;
        end if;
    end process;


    merge_weights_V_13_l_reg_3899_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                merge_weights_V_13_l_reg_3899 <= ap_const_lv8_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    merge_weights_V_13_l_reg_3899 <= merge_weights_V_13_q0;
                end if; 
            end if;
        end if;
    end process;


    merge_weights_V_29_l_reg_3919_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                merge_weights_V_29_l_reg_3919 <= ap_const_lv8_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    merge_weights_V_29_l_reg_3919 <= merge_weights_V_29_q0;
                end if; 
            end if;
        end if;
    end process;


    merge_weights_V_32_l_reg_4094_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                merge_weights_V_32_l_reg_4094 <= ap_const_lv8_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter3_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    merge_weights_V_32_l_reg_4094 <= merge_weights_V_32_q0;
                end if; 
            end if;
        end if;
    end process;


    merge_weights_V_4_lo_reg_3879_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                merge_weights_V_4_lo_reg_3879 <= ap_const_lv8_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    merge_weights_V_4_lo_reg_3879 <= merge_weights_V_4_q0;
                end if; 
            end if;
        end if;
    end process;


    merge_weights_V_5_lo_reg_3884_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                merge_weights_V_5_lo_reg_3884 <= ap_const_lv8_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    merge_weights_V_5_lo_reg_3884 <= merge_weights_V_5_q0;
                end if; 
            end if;
        end if;
    end process;


    merge_weights_V_61_l_reg_3959_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                merge_weights_V_61_l_reg_3959 <= ap_const_lv8_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    merge_weights_V_61_l_reg_3959 <= merge_weights_V_61_q0;
                end if; 
            end if;
        end if;
    end process;


    p_Result_16_i_reg_3629_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_Result_16_i_reg_3629 <= ap_const_lv8_0;
            else
                if (((tmp_i_76_reg_3545 = ap_const_lv1_1) and (tmp_i_reg_3531 = ap_const_lv1_1) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    p_Result_16_i_reg_3629 <= r_V_fu_1616_p2(135 downto 128);
                end if; 
            end if;
        end if;
    end process;


    p_Result_16_i_reg_3629_pp0_iter2_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_Result_16_i_reg_3629_pp0_iter2_reg <= ap_const_lv8_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    p_Result_16_i_reg_3629_pp0_iter2_reg <= p_Result_16_i_reg_3629;
                end if; 
            end if;
        end if;
    end process;


    p_Result_8_i_reg_3589_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_Result_8_i_reg_3589 <= ap_const_lv8_0;
            else
                if (((tmp_i_76_reg_3545 = ap_const_lv1_1) and (tmp_i_reg_3531 = ap_const_lv1_1) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    p_Result_8_i_reg_3589 <= r_V_fu_1616_p2(71 downto 64);
                end if; 
            end if;
        end if;
    end process;


    p_Result_i_reg_3709_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_Result_i_reg_3709 <= ap_const_lv8_0;
            else
                if (((tmp_i_76_reg_3545 = ap_const_lv1_1) and (tmp_i_reg_3531 = ap_const_lv1_1) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    p_Result_i_reg_3709 <= r_V_fu_1616_p2(263 downto 256);
                end if; 
            end if;
        end if;
    end process;


    p_Result_i_reg_3709_pp0_iter2_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_Result_i_reg_3709_pp0_iter2_reg <= ap_const_lv8_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    p_Result_i_reg_3709_pp0_iter2_reg <= p_Result_i_reg_3709;
                end if; 
            end if;
        end if;
    end process;


    tmp10_reg_3914_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp10_reg_3914 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp10_reg_3914 <= tmp10_fu_2642_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp12_reg_4089_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp12_reg_4089 <= ap_const_lv13_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter3_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp12_reg_4089 <= tmp12_fu_3286_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp14_reg_3924_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp14_reg_3924 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp14_reg_3924 <= tmp14_fu_2704_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp14_reg_3924_pp0_iter3_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp14_reg_3924_pp0_iter3_reg <= ap_const_lv9_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp14_reg_3924_pp0_iter3_reg <= tmp14_reg_3924;
                end if; 
            end if;
        end if;
    end process;


    tmp15_reg_4054_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp15_reg_4054 <= ap_const_lv10_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter2_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp15_reg_4054 <= tmp15_fu_3055_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp15_reg_4054_pp0_iter4_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp15_reg_4054_pp0_iter4_reg <= ap_const_lv10_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp15_reg_4054_pp0_iter4_reg <= tmp15_reg_4054;
                end if; 
            end if;
        end if;
    end process;


    tmp16_reg_3929_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp16_reg_3929 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp16_reg_3929 <= tmp16_fu_2710_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp17_reg_3934_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp17_reg_3934 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp17_reg_3934 <= tmp17_fu_2716_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp18_reg_4059_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp18_reg_4059 <= ap_const_lv12_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter2_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp18_reg_4059 <= tmp18_fu_3103_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp18_reg_4059_pp0_iter4_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp18_reg_4059_pp0_iter4_reg <= ap_const_lv12_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp18_reg_4059_pp0_iter4_reg <= tmp18_reg_4059;
                end if; 
            end if;
        end if;
    end process;


    tmp20_reg_3939_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp20_reg_3939 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp20_reg_3939 <= tmp20_fu_2722_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp21_reg_3944_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp21_reg_3944 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp21_reg_3944 <= tmp21_fu_2728_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp23_reg_3949_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp23_reg_3949 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp23_reg_3949 <= tmp23_fu_2734_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp25_reg_3954_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp25_reg_3954 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp25_reg_3954 <= tmp25_fu_2740_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp27_reg_4104_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp27_reg_4104 <= ap_const_lv14_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter4_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp27_reg_4104 <= tmp27_fu_3346_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp30_reg_3964_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp30_reg_3964 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp30_reg_3964 <= tmp30_fu_2866_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp30_reg_3964_pp0_iter3_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp30_reg_3964_pp0_iter3_reg <= ap_const_lv9_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp30_reg_3964_pp0_iter3_reg <= tmp30_reg_3964;
                end if; 
            end if;
        end if;
    end process;


    tmp30_reg_3964_pp0_iter4_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp30_reg_3964_pp0_iter4_reg <= ap_const_lv9_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp30_reg_3964_pp0_iter4_reg <= tmp30_reg_3964_pp0_iter3_reg;
                end if; 
            end if;
        end if;
    end process;


    tmp31_reg_4069_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp31_reg_4069 <= ap_const_lv10_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter2_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp31_reg_4069 <= tmp31_fu_3122_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp31_reg_4069_pp0_iter4_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp31_reg_4069_pp0_iter4_reg <= ap_const_lv10_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp31_reg_4069_pp0_iter4_reg <= tmp31_reg_4069;
                end if; 
            end if;
        end if;
    end process;


    tmp32_reg_3969_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp32_reg_3969 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp32_reg_3969 <= tmp32_fu_2872_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp33_reg_3974_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp33_reg_3974 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp33_reg_3974 <= tmp33_fu_2878_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp34_reg_4074_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp34_reg_4074 <= ap_const_lv11_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter2_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp34_reg_4074 <= tmp34_fu_3160_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp34_reg_4074_pp0_iter4_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp34_reg_4074_pp0_iter4_reg <= ap_const_lv11_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp34_reg_4074_pp0_iter4_reg <= tmp34_reg_4074;
                end if; 
            end if;
        end if;
    end process;


    tmp34_reg_4074_pp0_iter5_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp34_reg_4074_pp0_iter5_reg <= ap_const_lv11_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp34_reg_4074_pp0_iter5_reg <= tmp34_reg_4074_pp0_iter4_reg;
                end if; 
            end if;
        end if;
    end process;


    tmp36_reg_3979_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp36_reg_3979 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp36_reg_3979 <= tmp36_fu_2884_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp37_reg_3984_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp37_reg_3984 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp37_reg_3984 <= tmp37_fu_2890_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp39_reg_3989_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp39_reg_3989 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp39_reg_3989 <= tmp39_fu_2896_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp3_reg_3889_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp3_reg_3889 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp3_reg_3889 <= tmp3_fu_2596_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp40_reg_3994_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp40_reg_3994 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp40_reg_3994 <= tmp40_fu_2902_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp41_reg_4099_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp41_reg_4099 <= ap_const_lv13_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter3_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp41_reg_4099 <= tmp41_fu_3298_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp41_reg_4099_pp0_iter5_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp41_reg_4099_pp0_iter5_reg <= ap_const_lv13_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp41_reg_4099_pp0_iter5_reg <= tmp41_reg_4099;
                end if; 
            end if;
        end if;
    end process;


    tmp42_reg_4079_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp42_reg_4079 <= ap_const_lv11_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter2_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp42_reg_4079 <= tmp42_fu_3198_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp44_reg_3999_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp44_reg_3999 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp44_reg_3999 <= tmp44_fu_2908_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp45_reg_4004_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp45_reg_4004 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp45_reg_4004 <= tmp45_fu_2914_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp47_reg_4009_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp47_reg_4009 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp47_reg_4009 <= tmp47_fu_2920_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp48_reg_4014_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp48_reg_4014 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp48_reg_4014 <= tmp48_fu_2926_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp49_reg_4084_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp49_reg_4084 <= ap_const_lv12_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter2_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp49_reg_4084 <= tmp49_fu_3246_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp51_reg_4019_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp51_reg_4019 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp51_reg_4019 <= tmp51_fu_2932_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp52_reg_4024_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp52_reg_4024 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp52_reg_4024 <= tmp52_fu_2938_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp54_reg_4029_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp54_reg_4029 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp54_reg_4029 <= tmp54_fu_2944_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp56_reg_4034_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp56_reg_4034 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp56_reg_4034 <= tmp56_fu_2950_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp5_reg_4039_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp5_reg_4039 <= ap_const_lv12_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter2_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp5_reg_4039 <= tmp5_fu_3014_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp6_reg_3904_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp6_reg_3904 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp6_reg_3904 <= tmp6_fu_2630_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp6_reg_3904_pp0_iter3_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp6_reg_3904_pp0_iter3_reg <= ap_const_lv9_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp6_reg_3904_pp0_iter3_reg <= tmp6_reg_3904;
                end if; 
            end if;
        end if;
    end process;


    tmp7_reg_4044_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp7_reg_4044 <= ap_const_lv11_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter2_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp7_reg_4044 <= tmp7_fu_3036_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp8_reg_3909_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp8_reg_3909 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp8_reg_3909 <= tmp8_fu_2636_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp_core_id_reg_1430_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_core_id_reg_1430 <= ap_const_lv32_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter5_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
                    tmp_core_id_reg_1430 <= membership_index_1_fu_3387_p3;
                elsif (((ap_start = ap_const_logic_1) and (ap_ST_fsm_state1 = ap_CS_fsm))) then 
                    tmp_core_id_reg_1430 <= msg_core_id;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_76_reg_3545_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_76_reg_3545 <= ap_const_lv1_0;
            else
                if (((tmp_i_fu_1595_p2 = ap_const_lv1_1) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp_i_76_reg_3545 <= tmp_i_76_fu_1611_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_76_reg_3545_pp0_iter1_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_76_reg_3545_pp0_iter1_reg <= ap_const_lv1_0;
            else
                if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp_i_76_reg_3545_pp0_iter1_reg <= tmp_i_76_reg_3545;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_76_reg_3545_pp0_iter2_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_76_reg_3545_pp0_iter2_reg <= ap_const_lv1_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp_i_76_reg_3545_pp0_iter2_reg <= tmp_i_76_reg_3545_pp0_iter1_reg;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_76_reg_3545_pp0_iter3_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_76_reg_3545_pp0_iter3_reg <= ap_const_lv1_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp_i_76_reg_3545_pp0_iter3_reg <= tmp_i_76_reg_3545_pp0_iter2_reg;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_76_reg_3545_pp0_iter4_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_76_reg_3545_pp0_iter4_reg <= ap_const_lv1_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp_i_76_reg_3545_pp0_iter4_reg <= tmp_i_76_reg_3545_pp0_iter3_reg;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_76_reg_3545_pp0_iter5_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_76_reg_3545_pp0_iter5_reg <= ap_const_lv1_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp_i_76_reg_3545_pp0_iter5_reg <= tmp_i_76_reg_3545_pp0_iter4_reg;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_reg_3531_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_reg_3531 <= ap_const_lv1_0;
            else
                if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp_i_reg_3531 <= tmp_i_fu_1595_p2;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_reg_3531_pp0_iter1_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_reg_3531_pp0_iter1_reg <= ap_const_lv1_0;
            else
                if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp_i_reg_3531_pp0_iter1_reg <= tmp_i_reg_3531;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_reg_3531_pp0_iter2_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_reg_3531_pp0_iter2_reg <= ap_const_lv1_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp_i_reg_3531_pp0_iter2_reg <= tmp_i_reg_3531_pp0_iter1_reg;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_reg_3531_pp0_iter3_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_reg_3531_pp0_iter3_reg <= ap_const_lv1_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp_i_reg_3531_pp0_iter3_reg <= tmp_i_reg_3531_pp0_iter2_reg;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_reg_3531_pp0_iter4_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_reg_3531_pp0_iter4_reg <= ap_const_lv1_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp_i_reg_3531_pp0_iter4_reg <= tmp_i_reg_3531_pp0_iter3_reg;
                end if; 
            end if;
        end if;
    end process;


    tmp_i_reg_3531_pp0_iter5_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_i_reg_3531_pp0_iter5_reg <= ap_const_lv1_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    tmp_i_reg_3531_pp0_iter5_reg <= tmp_i_reg_3531_pp0_iter4_reg;
                end if; 
            end if;
        end if;
    end process;


    tmp_reg_3874_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_reg_3874 <= ap_const_lv9_0;
            else
                if (((tmp_i_76_reg_3545_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_3531_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp_reg_3874 <= tmp_fu_2582_p2;
                end if; 
            end if;
        end if;
    end process;

    membership_index_2_c_reg_3540(31 downto 5) <= "000000000000000000000000000";
    membership_index_2_c_reg_3540_pp0_iter1_reg(31 downto 5) <= "000000000000000000000000000";
    membership_index_2_c_reg_3540_pp0_iter2_reg(31 downto 5) <= "000000000000000000000000000";
    membership_index_2_c_reg_3540_pp0_iter3_reg(31 downto 5) <= "000000000000000000000000000";
    membership_index_2_c_reg_3540_pp0_iter4_reg(31 downto 5) <= "000000000000000000000000000";
    membership_index_2_c_reg_3540_pp0_iter5_reg(31 downto 5) <= "000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_subdone, ap_predicate_tran2to9_state2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, compute_core_id_out_s_11_status, update_cluster_in_V_s1_status)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_ST_fsm_state1 = ap_CS_fsm))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_tran2to9_state2 = ap_const_boolean_1))) and not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_tran2to9_state2 = ap_const_boolean_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((update_cluster_in_V_s1_status = ap_const_logic_0) or (compute_core_id_out_s_11_status = ap_const_logic_0))) and (ap_ST_fsm_state9 = ap_CS_fsm))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ansmap_V_14_cast_i_fu_3269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ansmap_V_14_i_fu_3263_p2),13));
    ansmap_V_14_i_fu_3263_p2 <= std_logic_vector(unsigned(tmp4_fu_3255_p2) + unsigned(tmp7_cast_fu_3260_p1));
    ansmap_V_1_cast_cast_fu_2956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ansmap_V_1_i_reg_3869),10));
    ansmap_V_1_i_fu_2568_p2 <= std_logic_vector(unsigned(tmp_87_cast_cast_i_fu_2560_p1) + unsigned(tmp_87_1_cast_cast_i_fu_2564_p1));
    ansmap_V_30_cast_i_fu_3321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ansmap_V_30_i_fu_3315_p2),14));
    ansmap_V_30_i_fu_3315_p2 <= std_logic_vector(unsigned(tmp11_fu_3307_p2) + unsigned(tmp18_cast_fu_3312_p1));
    ansmap_V_3_cast_cast_fu_2968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ansmap_V_3_i_fu_2962_p2),11));
    ansmap_V_3_i_fu_2962_p2 <= std_logic_vector(unsigned(ansmap_V_1_cast_cast_fu_2956_p1) + unsigned(tmp_cast_fu_2959_p1));
    ansmap_V_62_cast_i_fu_3369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ansmap_V_62_i_fu_3363_p2),16));
    ansmap_V_62_i_fu_3363_p2 <= std_logic_vector(unsigned(tmp26_fu_3355_p2) + unsigned(tmp41_cast_fu_3360_p1));
    ansmap_V_7_cast_cast_fu_3003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ansmap_V_7_i_fu_2997_p2),12));
    ansmap_V_7_i_fu_2997_p2 <= std_logic_vector(unsigned(tmp1_fu_2978_p2) + unsigned(tmp2_cast_fu_2993_p1));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_assign_proc : process(compute_core_id_out_s_11_status, update_cluster_in_V_s1_status)
    begin
                ap_block_state9 <= ((update_cluster_in_V_s1_status = ap_const_logic_0) or (compute_core_id_out_s_11_status = ap_const_logic_0));
    end process;


    ap_condition_1009_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_1009 <= (not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_0)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_14)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_13)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_12)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_11)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_10)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_F)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_E)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_D)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_C)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_B)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_A)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_9)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_8)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_7)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_6)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_5)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_4)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_3)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_2)) and not((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_1)) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_1012_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_1012 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_0) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_556_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_556 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_889_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_889 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_1) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_893_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_893 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_2) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_897_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_897 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_3) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_901_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_901 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_4) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_905_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_905 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_5) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_909_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_909 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_6) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_913_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_913 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_7) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_917_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_917 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_8) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_921_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_921 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_9) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_925_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_925 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_A) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_929_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_929 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_B) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_933_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_933 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_C) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_937_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_937 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_D) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_941_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_941 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_E) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_945_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_945 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_F) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_949_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_949 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_10) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_953_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_953 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_11) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_957_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_957 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_12) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_961_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_961 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_13) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_965_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2, ap_phi_mux_membership_index_phi_fu_1446_p4)
    begin
                ap_condition_965 <= ((ap_phi_mux_membership_index_phi_fu_1446_p4 = ap_const_lv5_14) and (tmp_i_76_fu_1611_p2 = ap_const_lv1_1) and (tmp_i_fu_1595_p2 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(ap_predicate_tran2to9_state2)
    begin
        if ((ap_predicate_tran2to9_state2 = ap_const_boolean_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm, compute_core_id_out_s_11_status, update_cluster_in_V_s1_status)
    begin
        if (((not(((update_cluster_in_V_s1_status = ap_const_logic_0) or (compute_core_id_out_s_11_status = ap_const_logic_0))) and (ap_ST_fsm_state9 = ap_CS_fsm)) or ((ap_ST_fsm_state1 = ap_CS_fsm) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if (((ap_ST_fsm_state1 = ap_CS_fsm) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_membership_index_phi_fu_1446_p4_assign_proc : process(ap_CS_fsm, membership_index_reg_1442, tmp_i_reg_3531, c_reg_3535, tmp_i_76_reg_3545, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_i_76_reg_3545 = ap_const_lv1_1) and (tmp_i_reg_3531 = ap_const_lv1_1) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_membership_index_phi_fu_1446_p4 <= c_reg_3535;
        else 
            ap_phi_mux_membership_index_phi_fu_1446_p4 <= membership_index_reg_1442;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_rhs_V_reg_1454 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_tran2to9_state2_assign_proc : process(tmp_i_fu_1595_p2, tmp_i_76_fu_1611_p2)
    begin
                ap_predicate_tran2to9_state2 <= ((tmp_i_fu_1595_p2 = ap_const_lv1_0) or ((tmp_i_76_fu_1611_p2 = ap_const_lv1_0) and (tmp_i_fu_1595_p2 = ap_const_lv1_1)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm, compute_core_id_out_s_11_status, update_cluster_in_V_s1_status)
    begin
        if ((not(((update_cluster_in_V_s1_status = ap_const_logic_0) or (compute_core_id_out_s_11_status = ap_const_logic_0))) and (ap_ST_fsm_state9 = ap_CS_fsm))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_1601_p2 <= std_logic_vector(unsigned(ap_phi_mux_membership_index_phi_fu_1446_p4) + unsigned(ap_const_lv5_1));

    compute_core_id_out_1_0_blk_n_assign_proc : process(ap_CS_fsm, compute_core_id_out_1_0_full_n)
    begin
        if ((ap_ST_fsm_state9 = ap_CS_fsm)) then 
            compute_core_id_out_1_0_blk_n <= compute_core_id_out_1_0_full_n;
        else 
            compute_core_id_out_1_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    compute_core_id_out_1_0_din <= tmp_core_id_reg_1430;
    compute_core_id_out_1_0_write <= compute_core_id_out_s_11_update;
    compute_core_id_out_s_11_status <= (compute_core_id_out_s_1_full_n and compute_core_id_out_1_0_full_n);

    compute_core_id_out_s_11_update_assign_proc : process(ap_CS_fsm, compute_core_id_out_s_11_status, update_cluster_in_V_s1_status)
    begin
        if ((not(((update_cluster_in_V_s1_status = ap_const_logic_0) or (compute_core_id_out_s_11_status = ap_const_logic_0))) and (ap_ST_fsm_state9 = ap_CS_fsm))) then 
            compute_core_id_out_s_11_update <= ap_const_logic_1;
        else 
            compute_core_id_out_s_11_update <= ap_const_logic_0;
        end if; 
    end process;


    compute_core_id_out_s_1_blk_n_assign_proc : process(ap_CS_fsm, compute_core_id_out_s_1_full_n)
    begin
        if ((ap_ST_fsm_state9 = ap_CS_fsm)) then 
            compute_core_id_out_s_1_blk_n <= compute_core_id_out_s_1_full_n;
        else 
            compute_core_id_out_s_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    compute_core_id_out_s_1_din <= msg_i;
    compute_core_id_out_s_1_write <= compute_core_id_out_s_11_update;
    extLd4240_i_fu_3007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_8_q0),12));
    extLd4243_i_cast_fu_2606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_9_q0),9));
    extLd4246_i_cast_fu_2610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_10_q0),9));
    extLd4249_i_cast_fu_2614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_11_q0),9));
    extLd4252_i_cast_fu_2618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_12_q0),9));
    extLd4255_i_cast_fu_3011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_13_l_reg_3899),10));
    extLd4258_i_cast_fu_2622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_14_q0),9));
    extLd4261_i_cast_fu_2626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_15_q0),9));
    membership_ans_V_1_i_fu_3379_p3 <= 
        ansmap_V_62_cast_i_fu_3369_p1 when (tmp_65_i_fu_3373_p2(0) = '1') else 
        membership_ans_V_i_reg_1418;
    membership_index_1_fu_3387_p3 <= 
        membership_index_2_c_reg_3540_pp0_iter5_reg when (tmp_65_i_fu_3373_p2(0) = '1') else 
        tmp_core_id_reg_1430;
    membership_index_2_c_fu_1607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_membership_index_phi_fu_1446_p4),32));
    merge_weights_V_0_address0 <= tmp_85_i_fu_1625_p1(8 - 1 downto 0);

    merge_weights_V_0_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_0_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_10_address0 <= tmp_85_i_77_fu_1770_p1(8 - 1 downto 0);

    merge_weights_V_10_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_10_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_11_address0 <= tmp_85_10_i_fu_1785_p1(8 - 1 downto 0);

    merge_weights_V_11_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_11_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_12_address0 <= tmp_85_11_i_fu_1800_p1(8 - 1 downto 0);

    merge_weights_V_12_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_12_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_13_address0 <= tmp_85_12_i_fu_1815_p1(8 - 1 downto 0);

    merge_weights_V_13_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_13_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_14_address0 <= tmp_85_13_i_fu_1830_p1(8 - 1 downto 0);

    merge_weights_V_14_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_14_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_15_address0 <= tmp_85_14_i_fu_1845_p1(8 - 1 downto 0);

    merge_weights_V_15_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_15_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_16_address0 <= tmp_85_15_i_fu_3042_p1(8 - 1 downto 0);

    merge_weights_V_16_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            merge_weights_V_16_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_17_address0 <= tmp_85_16_i_fu_1870_p1(8 - 1 downto 0);

    merge_weights_V_17_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_17_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_18_address0 <= tmp_85_17_i_fu_1885_p1(8 - 1 downto 0);

    merge_weights_V_18_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_18_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_19_address0 <= tmp_85_18_i_fu_1900_p1(8 - 1 downto 0);

    merge_weights_V_19_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_19_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_1_address0 <= tmp_85_1_i_fu_1640_p1(8 - 1 downto 0);

    merge_weights_V_1_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_1_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_20_address0 <= tmp_85_19_i_fu_1915_p1(8 - 1 downto 0);

    merge_weights_V_20_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_20_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_21_address0 <= tmp_85_20_i_fu_1930_p1(8 - 1 downto 0);

    merge_weights_V_21_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_21_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_22_address0 <= tmp_85_21_i_fu_1945_p1(8 - 1 downto 0);

    merge_weights_V_22_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_22_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_23_address0 <= tmp_85_22_i_fu_1960_p1(8 - 1 downto 0);

    merge_weights_V_23_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_23_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_24_address0 <= tmp_85_23_i_fu_1975_p1(8 - 1 downto 0);

    merge_weights_V_24_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_24_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_25_address0 <= tmp_85_24_i_fu_1990_p1(8 - 1 downto 0);

    merge_weights_V_25_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_25_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_26_address0 <= tmp_85_25_i_fu_2005_p1(8 - 1 downto 0);

    merge_weights_V_26_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_26_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_27_address0 <= tmp_85_26_i_fu_2020_p1(8 - 1 downto 0);

    merge_weights_V_27_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_27_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_28_address0 <= tmp_85_27_i_fu_2035_p1(8 - 1 downto 0);

    merge_weights_V_28_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_28_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_29_address0 <= tmp_85_28_i_fu_2050_p1(8 - 1 downto 0);

    merge_weights_V_29_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_29_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_2_address0 <= tmp_85_2_i_fu_1655_p1(8 - 1 downto 0);

    merge_weights_V_2_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_2_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_30_address0 <= tmp_85_29_i_fu_2065_p1(8 - 1 downto 0);

    merge_weights_V_30_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_30_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_31_address0 <= tmp_85_30_i_fu_2080_p1(8 - 1 downto 0);

    merge_weights_V_31_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_31_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_32_address0 <= tmp_85_31_i_fu_3109_p1(8 - 1 downto 0);

    merge_weights_V_32_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            merge_weights_V_32_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_33_address0 <= tmp_85_32_i_fu_2105_p1(8 - 1 downto 0);

    merge_weights_V_33_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_33_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_34_address0 <= tmp_85_33_i_fu_2120_p1(8 - 1 downto 0);

    merge_weights_V_34_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_34_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_35_address0 <= tmp_85_34_i_fu_2135_p1(8 - 1 downto 0);

    merge_weights_V_35_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_35_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_36_address0 <= tmp_85_35_i_fu_2150_p1(8 - 1 downto 0);

    merge_weights_V_36_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_36_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_37_address0 <= tmp_85_36_i_fu_2165_p1(8 - 1 downto 0);

    merge_weights_V_37_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_37_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_38_address0 <= tmp_85_37_i_fu_2180_p1(8 - 1 downto 0);

    merge_weights_V_38_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_38_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_39_address0 <= tmp_85_38_i_fu_2195_p1(8 - 1 downto 0);

    merge_weights_V_39_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_39_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_3_address0 <= tmp_85_3_i_fu_1670_p1(8 - 1 downto 0);

    merge_weights_V_3_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_3_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_40_address0 <= tmp_85_39_i_fu_2210_p1(8 - 1 downto 0);

    merge_weights_V_40_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_40_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_41_address0 <= tmp_85_40_i_fu_2225_p1(8 - 1 downto 0);

    merge_weights_V_41_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_41_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_42_address0 <= tmp_85_41_i_fu_2240_p1(8 - 1 downto 0);

    merge_weights_V_42_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_42_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_43_address0 <= tmp_85_42_i_fu_2255_p1(8 - 1 downto 0);

    merge_weights_V_43_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_43_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_44_address0 <= tmp_85_43_i_fu_2270_p1(8 - 1 downto 0);

    merge_weights_V_44_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_44_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_45_address0 <= tmp_85_44_i_fu_2285_p1(8 - 1 downto 0);

    merge_weights_V_45_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_45_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_46_address0 <= tmp_85_45_i_fu_2300_p1(8 - 1 downto 0);

    merge_weights_V_46_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_46_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_47_address0 <= tmp_85_46_i_fu_2315_p1(8 - 1 downto 0);

    merge_weights_V_47_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_47_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_48_address0 <= tmp_85_47_i_fu_2330_p1(8 - 1 downto 0);

    merge_weights_V_48_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_48_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_49_address0 <= tmp_85_48_i_fu_2345_p1(8 - 1 downto 0);

    merge_weights_V_49_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_49_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_4_address0 <= tmp_85_4_i_fu_1685_p1(8 - 1 downto 0);

    merge_weights_V_4_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_4_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_50_address0 <= tmp_85_49_i_fu_2360_p1(8 - 1 downto 0);

    merge_weights_V_50_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_50_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_51_address0 <= tmp_85_50_i_fu_2375_p1(8 - 1 downto 0);

    merge_weights_V_51_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_51_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_52_address0 <= tmp_85_51_i_fu_2390_p1(8 - 1 downto 0);

    merge_weights_V_52_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_52_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_53_address0 <= tmp_85_52_i_fu_2405_p1(8 - 1 downto 0);

    merge_weights_V_53_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_53_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_54_address0 <= tmp_85_53_i_fu_2420_p1(8 - 1 downto 0);

    merge_weights_V_54_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_54_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_55_address0 <= tmp_85_54_i_fu_2435_p1(8 - 1 downto 0);

    merge_weights_V_55_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_55_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_56_address0 <= tmp_85_55_i_fu_2450_p1(8 - 1 downto 0);

    merge_weights_V_56_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_56_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_57_address0 <= tmp_85_56_i_fu_2465_p1(8 - 1 downto 0);

    merge_weights_V_57_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_57_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_58_address0 <= tmp_85_57_i_fu_2480_p1(8 - 1 downto 0);

    merge_weights_V_58_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_58_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_59_address0 <= tmp_85_58_i_fu_2495_p1(8 - 1 downto 0);

    merge_weights_V_59_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_59_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_59_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_5_address0 <= tmp_85_5_i_fu_1700_p1(8 - 1 downto 0);

    merge_weights_V_5_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_5_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_60_address0 <= tmp_85_59_i_fu_2510_p1(8 - 1 downto 0);

    merge_weights_V_60_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_60_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_60_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_61_address0 <= tmp_85_60_i_fu_2525_p1(8 - 1 downto 0);

    merge_weights_V_61_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_61_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_61_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_62_address0 <= tmp_85_61_i_fu_2540_p1(8 - 1 downto 0);

    merge_weights_V_62_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_62_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_62_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_63_address0 <= tmp_85_62_i_fu_2555_p1(8 - 1 downto 0);

    merge_weights_V_63_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_63_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_63_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_6_address0 <= tmp_85_6_i_fu_1715_p1(8 - 1 downto 0);

    merge_weights_V_6_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_6_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_7_address0 <= tmp_85_7_i_fu_1730_p1(8 - 1 downto 0);

    merge_weights_V_7_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_7_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_8_address0 <= tmp_85_8_i_fu_2602_p1(8 - 1 downto 0);

    merge_weights_V_8_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            merge_weights_V_8_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    merge_weights_V_9_address0 <= tmp_85_9_i_fu_1755_p1(8 - 1 downto 0);

    merge_weights_V_9_ce0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            merge_weights_V_9_ce0 <= ap_const_logic_1;
        else 
            merge_weights_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_10_i_fu_1760_p4 <= r_V_fu_1616_p2(87 downto 80);
    p_Result_11_i_fu_1775_p4 <= r_V_fu_1616_p2(95 downto 88);
    p_Result_12_i_fu_1790_p4 <= r_V_fu_1616_p2(103 downto 96);
    p_Result_13_i_fu_1805_p4 <= r_V_fu_1616_p2(111 downto 104);
    p_Result_14_i_fu_1820_p4 <= r_V_fu_1616_p2(119 downto 112);
    p_Result_15_i_fu_1835_p4 <= r_V_fu_1616_p2(127 downto 120);
    p_Result_17_i_fu_1860_p4 <= r_V_fu_1616_p2(143 downto 136);
    p_Result_18_i_fu_1875_p4 <= r_V_fu_1616_p2(151 downto 144);
    p_Result_19_i_fu_1890_p4 <= r_V_fu_1616_p2(159 downto 152);
    p_Result_1_i_fu_1630_p4 <= r_V_fu_1616_p2(15 downto 8);
    p_Result_20_i_fu_1905_p4 <= r_V_fu_1616_p2(167 downto 160);
    p_Result_21_i_fu_1920_p4 <= r_V_fu_1616_p2(175 downto 168);
    p_Result_22_i_fu_1935_p4 <= r_V_fu_1616_p2(183 downto 176);
    p_Result_23_i_fu_1950_p4 <= r_V_fu_1616_p2(191 downto 184);
    p_Result_24_i_fu_1965_p4 <= r_V_fu_1616_p2(199 downto 192);
    p_Result_25_i_fu_1980_p4 <= r_V_fu_1616_p2(207 downto 200);
    p_Result_26_i_fu_1995_p4 <= r_V_fu_1616_p2(215 downto 208);
    p_Result_27_i_fu_2010_p4 <= r_V_fu_1616_p2(223 downto 216);
    p_Result_28_i_fu_2025_p4 <= r_V_fu_1616_p2(231 downto 224);
    p_Result_29_i_fu_2040_p4 <= r_V_fu_1616_p2(239 downto 232);
    p_Result_2_i_fu_1645_p4 <= r_V_fu_1616_p2(23 downto 16);
    p_Result_30_i_fu_2055_p4 <= r_V_fu_1616_p2(247 downto 240);
    p_Result_31_i_fu_2070_p4 <= r_V_fu_1616_p2(255 downto 248);
    p_Result_32_i_fu_2095_p4 <= r_V_fu_1616_p2(271 downto 264);
    p_Result_33_i_fu_2110_p4 <= r_V_fu_1616_p2(279 downto 272);
    p_Result_34_i_fu_2125_p4 <= r_V_fu_1616_p2(287 downto 280);
    p_Result_35_i_fu_2140_p4 <= r_V_fu_1616_p2(295 downto 288);
    p_Result_36_i_fu_2155_p4 <= r_V_fu_1616_p2(303 downto 296);
    p_Result_37_i_fu_2170_p4 <= r_V_fu_1616_p2(311 downto 304);
    p_Result_38_i_fu_2185_p4 <= r_V_fu_1616_p2(319 downto 312);
    p_Result_39_i_fu_2200_p4 <= r_V_fu_1616_p2(327 downto 320);
    p_Result_3_i_fu_1660_p4 <= r_V_fu_1616_p2(31 downto 24);
    p_Result_40_i_fu_2215_p4 <= r_V_fu_1616_p2(335 downto 328);
    p_Result_41_i_fu_2230_p4 <= r_V_fu_1616_p2(343 downto 336);
    p_Result_42_i_fu_2245_p4 <= r_V_fu_1616_p2(351 downto 344);
    p_Result_43_i_fu_2260_p4 <= r_V_fu_1616_p2(359 downto 352);
    p_Result_44_i_fu_2275_p4 <= r_V_fu_1616_p2(367 downto 360);
    p_Result_45_i_fu_2290_p4 <= r_V_fu_1616_p2(375 downto 368);
    p_Result_46_i_fu_2305_p4 <= r_V_fu_1616_p2(383 downto 376);
    p_Result_47_i_fu_2320_p4 <= r_V_fu_1616_p2(391 downto 384);
    p_Result_48_i_fu_2335_p4 <= r_V_fu_1616_p2(399 downto 392);
    p_Result_49_i_fu_2350_p4 <= r_V_fu_1616_p2(407 downto 400);
    p_Result_4_i_fu_1675_p4 <= r_V_fu_1616_p2(39 downto 32);
    p_Result_50_i_fu_2365_p4 <= r_V_fu_1616_p2(415 downto 408);
    p_Result_51_i_fu_2380_p4 <= r_V_fu_1616_p2(423 downto 416);
    p_Result_52_i_fu_2395_p4 <= r_V_fu_1616_p2(431 downto 424);
    p_Result_53_i_fu_2410_p4 <= r_V_fu_1616_p2(439 downto 432);
    p_Result_54_i_fu_2425_p4 <= r_V_fu_1616_p2(447 downto 440);
    p_Result_55_i_fu_2440_p4 <= r_V_fu_1616_p2(455 downto 448);
    p_Result_56_i_fu_2455_p4 <= r_V_fu_1616_p2(463 downto 456);
    p_Result_57_i_fu_2470_p4 <= r_V_fu_1616_p2(471 downto 464);
    p_Result_58_i_fu_2485_p4 <= r_V_fu_1616_p2(479 downto 472);
    p_Result_59_i_fu_2500_p4 <= r_V_fu_1616_p2(487 downto 480);
    p_Result_5_i_fu_1690_p4 <= r_V_fu_1616_p2(47 downto 40);
    p_Result_60_i_fu_2515_p4 <= r_V_fu_1616_p2(495 downto 488);
    p_Result_61_i_fu_2530_p4 <= r_V_fu_1616_p2(503 downto 496);
    p_Result_62_i_fu_2545_p4 <= r_V_fu_1616_p2(511 downto 504);
    p_Result_6_i_fu_1705_p4 <= r_V_fu_1616_p2(55 downto 48);
    p_Result_7_i_fu_1720_p4 <= r_V_fu_1616_p2(63 downto 56);
    p_Result_9_i_fu_1745_p4 <= r_V_fu_1616_p2(79 downto 72);
    r_V_fu_1616_p2 <= (msg_new_features_V and ap_phi_reg_pp0_iter1_rhs_V_reg_1454);
    tmp10_cast_fu_3023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp10_reg_3914),10));
    tmp10_fu_2642_p2 <= std_logic_vector(unsigned(extLd4261_i_cast_fu_2626_p1) + unsigned(extLd4258_i_cast_fu_2622_p1));
    tmp11_fu_3307_p2 <= std_logic_vector(unsigned(tmp12_reg_4089) + unsigned(tmp15_cast_fu_3304_p1));
    tmp12_fu_3286_p2 <= std_logic_vector(unsigned(tmp13_fu_3277_p2) + unsigned(tmp14_cast_fu_3283_p1));
    tmp13_fu_3277_p2 <= std_logic_vector(unsigned(tmp_87_15_cast_i_fu_3273_p1) + unsigned(ansmap_V_14_cast_i_fu_3269_p1));
    tmp14_cast_fu_3283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp14_reg_3924_pp0_iter3_reg),13));
    tmp14_fu_2704_p2 <= std_logic_vector(unsigned(tmp_87_17_cast_i_cas_fu_2652_p1) + unsigned(tmp_87_16_cast_i_cas_fu_2648_p1));
    tmp15_cast_fu_3304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp15_reg_4054_pp0_iter4_reg),13));
    tmp15_fu_3055_p2 <= std_logic_vector(unsigned(tmp16_cast_fu_3049_p1) + unsigned(tmp17_cast_fu_3052_p1));
    tmp16_cast_fu_3049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp16_reg_3929),10));
    tmp16_fu_2710_p2 <= std_logic_vector(unsigned(tmp_87_19_cast_i_cas_fu_2660_p1) + unsigned(tmp_87_18_cast_i_cas_fu_2656_p1));
    tmp17_cast_fu_3052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp17_reg_3934),10));
    tmp17_fu_2716_p2 <= std_logic_vector(unsigned(tmp_87_21_cast_i_cas_fu_2668_p1) + unsigned(tmp_87_20_cast_i_cas_fu_2664_p1));
    tmp18_cast_fu_3312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp18_reg_4059_pp0_iter4_reg),13));
    tmp18_fu_3103_p2 <= std_logic_vector(unsigned(tmp19_cast_fu_3073_p1) + unsigned(tmp22_cast_fu_3099_p1));
    tmp19_cast_fu_3073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp19_fu_3067_p2),12));
    tmp19_fu_3067_p2 <= std_logic_vector(unsigned(tmp20_cast_fu_3061_p1) + unsigned(tmp21_cast_fu_3064_p1));
    tmp1_fu_2978_p2 <= std_logic_vector(unsigned(tmp_87_4_cast_cast_i_fu_2972_p1) + unsigned(ansmap_V_3_cast_cast_fu_2968_p1));
    tmp20_cast_fu_3061_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp20_reg_3939),10));
    tmp20_fu_2722_p2 <= std_logic_vector(unsigned(tmp_87_23_cast_i_cas_fu_2676_p1) + unsigned(tmp_87_22_cast_i_cas_fu_2672_p1));
    tmp21_cast_fu_3064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp21_reg_3944),10));
    tmp21_fu_2728_p2 <= std_logic_vector(unsigned(tmp_87_25_cast_i_cas_fu_2684_p1) + unsigned(tmp_87_24_cast_i_cas_fu_2680_p1));
    tmp22_cast_fu_3099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp22_fu_3093_p2),12));
    tmp22_fu_3093_p2 <= std_logic_vector(unsigned(tmp23_cast_fu_3077_p1) + unsigned(tmp24_cast_fu_3089_p1));
    tmp23_cast_fu_3077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp23_reg_3949),11));
    tmp23_fu_2734_p2 <= std_logic_vector(unsigned(tmp_87_27_cast_i_cas_fu_2692_p1) + unsigned(tmp_87_26_cast_i_cas_fu_2688_p1));
    tmp24_cast_fu_3089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp24_fu_3083_p2),11));
    tmp24_fu_3083_p2 <= std_logic_vector(unsigned(tmp_87_28_cast_i_cas_fu_3046_p1) + unsigned(tmp25_cast_fu_3080_p1));
    tmp25_cast_fu_3080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp25_reg_3954),10));
    tmp25_fu_2740_p2 <= std_logic_vector(unsigned(tmp_87_30_cast_i_cas_fu_2700_p1) + unsigned(tmp_87_29_cast_i_cas_fu_2696_p1));
    tmp26_fu_3355_p2 <= std_logic_vector(unsigned(tmp27_reg_4104) + unsigned(tmp34_cast_fu_3352_p1));
    tmp27_fu_3346_p2 <= std_logic_vector(unsigned(tmp28_fu_3337_p2) + unsigned(tmp31_cast_fu_3343_p1));
    tmp28_fu_3337_p2 <= std_logic_vector(unsigned(tmp29_fu_3328_p2) + unsigned(tmp30_cast_fu_3334_p1));
    tmp29_fu_3328_p2 <= std_logic_vector(unsigned(tmp_87_31_cast_i_fu_3325_p1) + unsigned(ansmap_V_30_cast_i_fu_3321_p1));
    tmp2_cast_fu_2993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_2987_p2),11));
    tmp2_fu_2987_p2 <= std_logic_vector(unsigned(tmp_87_5_cast_cast_i_fu_2975_p1) + unsigned(tmp3_cast_fu_2984_p1));
    tmp30_cast_fu_3334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp30_reg_3964_pp0_iter4_reg),14));
    tmp30_fu_2866_p2 <= std_logic_vector(unsigned(tmp_87_33_cast_i_cas_fu_2750_p1) + unsigned(tmp_87_32_cast_i_cas_fu_2746_p1));
    tmp31_cast_fu_3343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp31_reg_4069_pp0_iter4_reg),14));
    tmp31_fu_3122_p2 <= std_logic_vector(unsigned(tmp32_cast_fu_3116_p1) + unsigned(tmp33_cast_fu_3119_p1));
    tmp32_cast_fu_3116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp32_reg_3969),10));
    tmp32_fu_2872_p2 <= std_logic_vector(unsigned(tmp_87_35_cast_i_cas_fu_2758_p1) + unsigned(tmp_87_34_cast_i_cas_fu_2754_p1));
    tmp33_cast_fu_3119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp33_reg_3974),10));
    tmp33_fu_2878_p2 <= std_logic_vector(unsigned(tmp_87_37_cast_i_cas_fu_2766_p1) + unsigned(tmp_87_36_cast_i_cas_fu_2762_p1));
    tmp34_cast_fu_3352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp34_reg_4074_pp0_iter5_reg),14));
    tmp34_fu_3160_p2 <= std_logic_vector(unsigned(tmp35_cast_fu_3140_p1) + unsigned(tmp38_cast_fu_3156_p1));
    tmp35_cast_fu_3140_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp35_fu_3134_p2),11));
    tmp35_fu_3134_p2 <= std_logic_vector(unsigned(tmp36_cast_fu_3128_p1) + unsigned(tmp37_cast_fu_3131_p1));
    tmp36_cast_fu_3128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp36_reg_3979),10));
    tmp36_fu_2884_p2 <= std_logic_vector(unsigned(tmp_87_39_cast_i_cas_fu_2774_p1) + unsigned(tmp_87_38_cast_i_cas_fu_2770_p1));
    tmp37_cast_fu_3131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp37_reg_3984),10));
    tmp37_fu_2890_p2 <= std_logic_vector(unsigned(tmp_87_41_cast_i_cas_fu_2782_p1) + unsigned(tmp_87_40_cast_i_cas_fu_2778_p1));
    tmp38_cast_fu_3156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp38_fu_3150_p2),11));
    tmp38_fu_3150_p2 <= std_logic_vector(unsigned(tmp39_cast_fu_3144_p1) + unsigned(tmp40_cast_fu_3147_p1));
    tmp39_cast_fu_3144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp39_reg_3989),10));
    tmp39_fu_2896_p2 <= std_logic_vector(unsigned(tmp_87_43_cast_i_cas_fu_2790_p1) + unsigned(tmp_87_42_cast_i_cas_fu_2786_p1));
    tmp3_cast_fu_2984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_reg_3889),10));
    tmp3_fu_2596_p2 <= std_logic_vector(unsigned(tmp_87_7_cast_cast_i_fu_2592_p1) + unsigned(tmp_87_6_cast_cast_i_fu_2588_p1));
    tmp40_cast_fu_3147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp40_reg_3994),10));
    tmp40_fu_2902_p2 <= std_logic_vector(unsigned(tmp_87_45_cast_i_cas_fu_2798_p1) + unsigned(tmp_87_44_cast_i_cas_fu_2794_p1));
    tmp41_cast_fu_3360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp41_reg_4099_pp0_iter5_reg),14));
    tmp41_fu_3298_p2 <= std_logic_vector(unsigned(tmp42_cast_fu_3292_p1) + unsigned(tmp49_cast_fu_3295_p1));
    tmp42_cast_fu_3292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp42_reg_4079),13));
    tmp42_fu_3198_p2 <= std_logic_vector(unsigned(tmp43_cast_fu_3178_p1) + unsigned(tmp46_cast_fu_3194_p1));
    tmp43_cast_fu_3178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp43_fu_3172_p2),11));
    tmp43_fu_3172_p2 <= std_logic_vector(unsigned(tmp44_cast_fu_3166_p1) + unsigned(tmp45_cast_fu_3169_p1));
    tmp44_cast_fu_3166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp44_reg_3999),10));
    tmp44_fu_2908_p2 <= std_logic_vector(unsigned(tmp_87_47_cast_i_cas_fu_2806_p1) + unsigned(tmp_87_46_cast_i_cas_fu_2802_p1));
    tmp45_cast_fu_3169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp45_reg_4004),10));
    tmp45_fu_2914_p2 <= std_logic_vector(unsigned(tmp_87_49_cast_i_cas_fu_2814_p1) + unsigned(tmp_87_48_cast_i_cas_fu_2810_p1));
    tmp46_cast_fu_3194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp46_fu_3188_p2),11));
    tmp46_fu_3188_p2 <= std_logic_vector(unsigned(tmp47_cast_fu_3182_p1) + unsigned(tmp48_cast_fu_3185_p1));
    tmp47_cast_fu_3182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp47_reg_4009),10));
    tmp47_fu_2920_p2 <= std_logic_vector(unsigned(tmp_87_51_cast_i_cas_fu_2822_p1) + unsigned(tmp_87_50_cast_i_cas_fu_2818_p1));
    tmp48_cast_fu_3185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp48_reg_4014),10));
    tmp48_fu_2926_p2 <= std_logic_vector(unsigned(tmp_87_53_cast_i_cas_fu_2830_p1) + unsigned(tmp_87_52_cast_i_cas_fu_2826_p1));
    tmp49_cast_fu_3295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp49_reg_4084),13));
    tmp49_fu_3246_p2 <= std_logic_vector(unsigned(tmp50_cast_fu_3216_p1) + unsigned(tmp53_cast_fu_3242_p1));
    tmp4_fu_3255_p2 <= std_logic_vector(unsigned(tmp5_reg_4039) + unsigned(tmp6_cast_fu_3252_p1));
    tmp50_cast_fu_3216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp50_fu_3210_p2),12));
    tmp50_fu_3210_p2 <= std_logic_vector(unsigned(tmp51_cast_fu_3204_p1) + unsigned(tmp52_cast_fu_3207_p1));
    tmp51_cast_fu_3204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp51_reg_4019),10));
    tmp51_fu_2932_p2 <= std_logic_vector(unsigned(tmp_87_55_cast_i_cas_fu_2838_p1) + unsigned(tmp_87_54_cast_i_cas_fu_2834_p1));
    tmp52_cast_fu_3207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp52_reg_4024),10));
    tmp52_fu_2938_p2 <= std_logic_vector(unsigned(tmp_87_57_cast_i_cas_fu_2846_p1) + unsigned(tmp_87_56_cast_i_cas_fu_2842_p1));
    tmp53_cast_fu_3242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp53_fu_3236_p2),12));
    tmp53_fu_3236_p2 <= std_logic_vector(unsigned(tmp54_cast_fu_3220_p1) + unsigned(tmp55_cast_fu_3232_p1));
    tmp54_cast_fu_3220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp54_reg_4029),11));
    tmp54_fu_2944_p2 <= std_logic_vector(unsigned(tmp_87_59_cast_i_cas_fu_2854_p1) + unsigned(tmp_87_58_cast_i_cas_fu_2850_p1));
    tmp55_cast_fu_3232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp55_fu_3226_p2),11));
    tmp55_fu_3226_p2 <= std_logic_vector(unsigned(tmp_87_60_cast_i_cas_fu_3113_p1) + unsigned(tmp56_cast_fu_3223_p1));
    tmp56_cast_fu_3223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp56_reg_4034),10));
    tmp56_fu_2950_p2 <= std_logic_vector(unsigned(tmp_87_62_cast_i_cas_fu_2862_p1) + unsigned(tmp_87_61_cast_i_cas_fu_2858_p1));
    tmp5_fu_3014_p2 <= std_logic_vector(unsigned(extLd4240_i_fu_3007_p1) + unsigned(ansmap_V_7_cast_cast_fu_3003_p1));
    tmp6_cast_fu_3252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp6_reg_3904_pp0_iter3_reg),12));
    tmp6_fu_2630_p2 <= std_logic_vector(unsigned(extLd4246_i_cast_fu_2610_p1) + unsigned(extLd4243_i_cast_fu_2606_p1));
    tmp7_cast_fu_3260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp7_reg_4044),12));
    tmp7_fu_3036_p2 <= std_logic_vector(unsigned(tmp8_cast_fu_3020_p1) + unsigned(tmp9_cast_fu_3032_p1));
    tmp8_cast_fu_3020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp8_reg_3909),11));
    tmp8_fu_2636_p2 <= std_logic_vector(unsigned(extLd4252_i_cast_fu_2618_p1) + unsigned(extLd4249_i_cast_fu_2614_p1));
    tmp9_cast_fu_3032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp9_fu_3026_p2),11));
    tmp9_fu_3026_p2 <= std_logic_vector(unsigned(extLd4255_i_cast_fu_3011_p1) + unsigned(tmp10_cast_fu_3023_p1));
    tmp_65_i_fu_3373_p2 <= "1" when (unsigned(ansmap_V_62_cast_i_fu_3369_p1) > unsigned(membership_ans_V_i_reg_1418)) else "0";
    tmp_85_10_i_fu_1785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_11_i_fu_1775_p4),64));
    tmp_85_11_i_fu_1800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_12_i_fu_1790_p4),64));
    tmp_85_12_i_fu_1815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_13_i_fu_1805_p4),64));
    tmp_85_13_i_fu_1830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_14_i_fu_1820_p4),64));
    tmp_85_14_i_fu_1845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_15_i_fu_1835_p4),64));
    tmp_85_15_i_fu_3042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_16_i_reg_3629_pp0_iter2_reg),64));
    tmp_85_16_i_fu_1870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_17_i_fu_1860_p4),64));
    tmp_85_17_i_fu_1885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_i_fu_1875_p4),64));
    tmp_85_18_i_fu_1900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_19_i_fu_1890_p4),64));
    tmp_85_19_i_fu_1915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_20_i_fu_1905_p4),64));
    tmp_85_1_i_fu_1640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_i_fu_1630_p4),64));
    tmp_85_20_i_fu_1930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_21_i_fu_1920_p4),64));
    tmp_85_21_i_fu_1945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_22_i_fu_1935_p4),64));
    tmp_85_22_i_fu_1960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_23_i_fu_1950_p4),64));
    tmp_85_23_i_fu_1975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_24_i_fu_1965_p4),64));
    tmp_85_24_i_fu_1990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_25_i_fu_1980_p4),64));
    tmp_85_25_i_fu_2005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_26_i_fu_1995_p4),64));
    tmp_85_26_i_fu_2020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_27_i_fu_2010_p4),64));
    tmp_85_27_i_fu_2035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_28_i_fu_2025_p4),64));
    tmp_85_28_i_fu_2050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_29_i_fu_2040_p4),64));
    tmp_85_29_i_fu_2065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_30_i_fu_2055_p4),64));
    tmp_85_2_i_fu_1655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_i_fu_1645_p4),64));
    tmp_85_30_i_fu_2080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_31_i_fu_2070_p4),64));
    tmp_85_31_i_fu_3109_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_reg_3709_pp0_iter2_reg),64));
    tmp_85_32_i_fu_2105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_32_i_fu_2095_p4),64));
    tmp_85_33_i_fu_2120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_33_i_fu_2110_p4),64));
    tmp_85_34_i_fu_2135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_34_i_fu_2125_p4),64));
    tmp_85_35_i_fu_2150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_35_i_fu_2140_p4),64));
    tmp_85_36_i_fu_2165_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_36_i_fu_2155_p4),64));
    tmp_85_37_i_fu_2180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_37_i_fu_2170_p4),64));
    tmp_85_38_i_fu_2195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_38_i_fu_2185_p4),64));
    tmp_85_39_i_fu_2210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_39_i_fu_2200_p4),64));
    tmp_85_3_i_fu_1670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_3_i_fu_1660_p4),64));
    tmp_85_40_i_fu_2225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_40_i_fu_2215_p4),64));
    tmp_85_41_i_fu_2240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_41_i_fu_2230_p4),64));
    tmp_85_42_i_fu_2255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_42_i_fu_2245_p4),64));
    tmp_85_43_i_fu_2270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_43_i_fu_2260_p4),64));
    tmp_85_44_i_fu_2285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_44_i_fu_2275_p4),64));
    tmp_85_45_i_fu_2300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_45_i_fu_2290_p4),64));
    tmp_85_46_i_fu_2315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_46_i_fu_2305_p4),64));
    tmp_85_47_i_fu_2330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_47_i_fu_2320_p4),64));
    tmp_85_48_i_fu_2345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_48_i_fu_2335_p4),64));
    tmp_85_49_i_fu_2360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_49_i_fu_2350_p4),64));
    tmp_85_4_i_fu_1685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_i_fu_1675_p4),64));
    tmp_85_50_i_fu_2375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_50_i_fu_2365_p4),64));
    tmp_85_51_i_fu_2390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_51_i_fu_2380_p4),64));
    tmp_85_52_i_fu_2405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_52_i_fu_2395_p4),64));
    tmp_85_53_i_fu_2420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_53_i_fu_2410_p4),64));
    tmp_85_54_i_fu_2435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_54_i_fu_2425_p4),64));
    tmp_85_55_i_fu_2450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_55_i_fu_2440_p4),64));
    tmp_85_56_i_fu_2465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_56_i_fu_2455_p4),64));
    tmp_85_57_i_fu_2480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_57_i_fu_2470_p4),64));
    tmp_85_58_i_fu_2495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_58_i_fu_2485_p4),64));
    tmp_85_59_i_fu_2510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_59_i_fu_2500_p4),64));
    tmp_85_5_i_fu_1700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_5_i_fu_1690_p4),64));
    tmp_85_60_i_fu_2525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_i_fu_2515_p4),64));
    tmp_85_61_i_fu_2540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_61_i_fu_2530_p4),64));
    tmp_85_62_i_fu_2555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_62_i_fu_2545_p4),64));
    tmp_85_6_i_fu_1715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_6_i_fu_1705_p4),64));
    tmp_85_7_i_fu_1730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_7_i_fu_1720_p4),64));
    tmp_85_8_i_fu_2602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_8_i_reg_3589),64));
    tmp_85_9_i_fu_1755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_i_fu_1745_p4),64));
    tmp_85_i_77_fu_1770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_10_i_fu_1760_p4),64));
    tmp_85_i_fu_1625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_925_fu_1621_p1),64));
    tmp_87_15_cast_i_fu_3273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_16_q0),13));
    tmp_87_16_cast_i_cas_fu_2648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_17_q0),9));
    tmp_87_17_cast_i_cas_fu_2652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_18_q0),9));
    tmp_87_18_cast_i_cas_fu_2656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_19_q0),9));
    tmp_87_19_cast_i_cas_fu_2660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_20_q0),9));
    tmp_87_1_cast_cast_i_fu_2564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_1_q0),9));
    tmp_87_20_cast_i_cas_fu_2664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_21_q0),9));
    tmp_87_21_cast_i_cas_fu_2668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_22_q0),9));
    tmp_87_22_cast_i_cas_fu_2672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_23_q0),9));
    tmp_87_23_cast_i_cas_fu_2676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_24_q0),9));
    tmp_87_24_cast_i_cas_fu_2680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_25_q0),9));
    tmp_87_25_cast_i_cas_fu_2684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_26_q0),9));
    tmp_87_26_cast_i_cas_fu_2688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_27_q0),9));
    tmp_87_27_cast_i_cas_fu_2692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_28_q0),9));
    tmp_87_28_cast_i_cas_fu_3046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_29_l_reg_3919),10));
    tmp_87_29_cast_i_cas_fu_2696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_30_q0),9));
    tmp_87_2_cast_cast_i_fu_2574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_2_q0),9));
    tmp_87_30_cast_i_cas_fu_2700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_31_q0),9));
    tmp_87_31_cast_i_fu_3325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_32_l_reg_4094),14));
    tmp_87_32_cast_i_cas_fu_2746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_33_q0),9));
    tmp_87_33_cast_i_cas_fu_2750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_34_q0),9));
    tmp_87_34_cast_i_cas_fu_2754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_35_q0),9));
    tmp_87_35_cast_i_cas_fu_2758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_36_q0),9));
    tmp_87_36_cast_i_cas_fu_2762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_37_q0),9));
    tmp_87_37_cast_i_cas_fu_2766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_38_q0),9));
    tmp_87_38_cast_i_cas_fu_2770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_39_q0),9));
    tmp_87_39_cast_i_cas_fu_2774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_40_q0),9));
    tmp_87_3_cast_cast_i_fu_2578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_3_q0),9));
    tmp_87_40_cast_i_cas_fu_2778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_41_q0),9));
    tmp_87_41_cast_i_cas_fu_2782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_42_q0),9));
    tmp_87_42_cast_i_cas_fu_2786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_43_q0),9));
    tmp_87_43_cast_i_cas_fu_2790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_44_q0),9));
    tmp_87_44_cast_i_cas_fu_2794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_45_q0),9));
    tmp_87_45_cast_i_cas_fu_2798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_46_q0),9));
    tmp_87_46_cast_i_cas_fu_2802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_47_q0),9));
    tmp_87_47_cast_i_cas_fu_2806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_48_q0),9));
    tmp_87_48_cast_i_cas_fu_2810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_49_q0),9));
    tmp_87_49_cast_i_cas_fu_2814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_50_q0),9));
    tmp_87_4_cast_cast_i_fu_2972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_4_lo_reg_3879),11));
    tmp_87_50_cast_i_cas_fu_2818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_51_q0),9));
    tmp_87_51_cast_i_cas_fu_2822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_52_q0),9));
    tmp_87_52_cast_i_cas_fu_2826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_53_q0),9));
    tmp_87_53_cast_i_cas_fu_2830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_54_q0),9));
    tmp_87_54_cast_i_cas_fu_2834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_55_q0),9));
    tmp_87_55_cast_i_cas_fu_2838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_56_q0),9));
    tmp_87_56_cast_i_cas_fu_2842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_57_q0),9));
    tmp_87_57_cast_i_cas_fu_2846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_58_q0),9));
    tmp_87_58_cast_i_cas_fu_2850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_59_q0),9));
    tmp_87_59_cast_i_cas_fu_2854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_60_q0),9));
    tmp_87_5_cast_cast_i_fu_2975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_5_lo_reg_3884),10));
    tmp_87_60_cast_i_cas_fu_3113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_61_l_reg_3959),10));
    tmp_87_61_cast_i_cas_fu_2858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_62_q0),9));
    tmp_87_62_cast_i_cas_fu_2862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_63_q0),9));
    tmp_87_6_cast_cast_i_fu_2588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_6_q0),9));
    tmp_87_7_cast_cast_i_fu_2592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_7_q0),9));
    tmp_87_cast_cast_i_fu_2560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(merge_weights_V_0_q0),9));
    tmp_925_fu_1621_p1 <= r_V_fu_1616_p2(8 - 1 downto 0);
    tmp_cast_fu_2959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_3874),10));
    tmp_fu_2582_p2 <= std_logic_vector(unsigned(tmp_87_3_cast_cast_i_fu_2578_p1) + unsigned(tmp_87_2_cast_cast_i_fu_2574_p1));
    tmp_i_76_fu_1611_p2 <= "1" when (signed(membership_index_2_c_fu_1607_p1) < signed(CORE_NUM)) else "0";
    tmp_i_fu_1595_p2 <= "1" when (unsigned(ap_phi_mux_membership_index_phi_fu_1446_p4) < unsigned(ap_const_lv5_16)) else "0";

    update_cluster_in_V_1_blk_n_assign_proc : process(ap_CS_fsm, update_cluster_in_V_1_full_n)
    begin
        if ((ap_ST_fsm_state9 = ap_CS_fsm)) then 
            update_cluster_in_V_1_blk_n <= update_cluster_in_V_1_full_n;
        else 
            update_cluster_in_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    update_cluster_in_V_1_din <= tmp_core_id_reg_1430;
    update_cluster_in_V_1_write <= update_cluster_in_V_s1_update;

    update_cluster_in_V_3_blk_n_assign_proc : process(ap_CS_fsm, update_cluster_in_V_3_full_n)
    begin
        if ((ap_ST_fsm_state9 = ap_CS_fsm)) then 
            update_cluster_in_V_3_blk_n <= update_cluster_in_V_3_full_n;
        else 
            update_cluster_in_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    update_cluster_in_V_3_din <= msg_i;
    update_cluster_in_V_3_write <= update_cluster_in_V_s1_update;

    update_cluster_in_V_4_blk_n_assign_proc : process(ap_CS_fsm, update_cluster_in_V_4_full_n)
    begin
        if ((ap_ST_fsm_state9 = ap_CS_fsm)) then 
            update_cluster_in_V_4_blk_n <= update_cluster_in_V_4_full_n;
        else 
            update_cluster_in_V_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    update_cluster_in_V_4_din <= msg_new_features_V;
    update_cluster_in_V_4_write <= update_cluster_in_V_s1_update;
    update_cluster_in_V_s1_status <= (update_cluster_in_V_s_full_n and update_cluster_in_V_4_full_n and update_cluster_in_V_3_full_n and update_cluster_in_V_1_full_n);

    update_cluster_in_V_s1_update_assign_proc : process(ap_CS_fsm, compute_core_id_out_s_11_status, update_cluster_in_V_s1_status)
    begin
        if ((not(((update_cluster_in_V_s1_status = ap_const_logic_0) or (compute_core_id_out_s_11_status = ap_const_logic_0))) and (ap_ST_fsm_state9 = ap_CS_fsm))) then 
            update_cluster_in_V_s1_update <= ap_const_logic_1;
        else 
            update_cluster_in_V_s1_update <= ap_const_logic_0;
        end if; 
    end process;


    update_cluster_in_V_s_blk_n_assign_proc : process(ap_CS_fsm, update_cluster_in_V_s_full_n)
    begin
        if ((ap_ST_fsm_state9 = ap_CS_fsm)) then 
            update_cluster_in_V_s_blk_n <= update_cluster_in_V_s_full_n;
        else 
            update_cluster_in_V_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    update_cluster_in_V_s_din <= msg_old_features_V;
    update_cluster_in_V_s_write <= update_cluster_in_V_s1_update;
end behav;
