// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module core_id_func (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        msg_i,
        msg_core_id,
        msg_old_features_V,
        msg_new_features_V,
        CORE_NUM,
        bit_clusters_V_21,
        bit_clusters_V_0,
        bit_clusters_V_1,
        bit_clusters_V_2,
        bit_clusters_V_3,
        bit_clusters_V_4,
        bit_clusters_V_5,
        bit_clusters_V_6,
        bit_clusters_V_7,
        bit_clusters_V_8,
        bit_clusters_V_9,
        bit_clusters_V_10,
        bit_clusters_V_11,
        bit_clusters_V_12,
        bit_clusters_V_13,
        bit_clusters_V_14,
        bit_clusters_V_15,
        bit_clusters_V_16,
        bit_clusters_V_17,
        bit_clusters_V_18,
        bit_clusters_V_19,
        bit_clusters_V_20,
        merge_weights_V_0_address0,
        merge_weights_V_0_ce0,
        merge_weights_V_0_q0,
        merge_weights_V_1_address0,
        merge_weights_V_1_ce0,
        merge_weights_V_1_q0,
        merge_weights_V_2_address0,
        merge_weights_V_2_ce0,
        merge_weights_V_2_q0,
        merge_weights_V_3_address0,
        merge_weights_V_3_ce0,
        merge_weights_V_3_q0,
        merge_weights_V_4_address0,
        merge_weights_V_4_ce0,
        merge_weights_V_4_q0,
        merge_weights_V_5_address0,
        merge_weights_V_5_ce0,
        merge_weights_V_5_q0,
        merge_weights_V_6_address0,
        merge_weights_V_6_ce0,
        merge_weights_V_6_q0,
        merge_weights_V_7_address0,
        merge_weights_V_7_ce0,
        merge_weights_V_7_q0,
        merge_weights_V_8_address0,
        merge_weights_V_8_ce0,
        merge_weights_V_8_q0,
        merge_weights_V_9_address0,
        merge_weights_V_9_ce0,
        merge_weights_V_9_q0,
        merge_weights_V_10_address0,
        merge_weights_V_10_ce0,
        merge_weights_V_10_q0,
        merge_weights_V_11_address0,
        merge_weights_V_11_ce0,
        merge_weights_V_11_q0,
        merge_weights_V_12_address0,
        merge_weights_V_12_ce0,
        merge_weights_V_12_q0,
        merge_weights_V_13_address0,
        merge_weights_V_13_ce0,
        merge_weights_V_13_q0,
        merge_weights_V_14_address0,
        merge_weights_V_14_ce0,
        merge_weights_V_14_q0,
        merge_weights_V_15_address0,
        merge_weights_V_15_ce0,
        merge_weights_V_15_q0,
        merge_weights_V_16_address0,
        merge_weights_V_16_ce0,
        merge_weights_V_16_q0,
        merge_weights_V_17_address0,
        merge_weights_V_17_ce0,
        merge_weights_V_17_q0,
        merge_weights_V_18_address0,
        merge_weights_V_18_ce0,
        merge_weights_V_18_q0,
        merge_weights_V_19_address0,
        merge_weights_V_19_ce0,
        merge_weights_V_19_q0,
        merge_weights_V_20_address0,
        merge_weights_V_20_ce0,
        merge_weights_V_20_q0,
        merge_weights_V_21_address0,
        merge_weights_V_21_ce0,
        merge_weights_V_21_q0,
        merge_weights_V_22_address0,
        merge_weights_V_22_ce0,
        merge_weights_V_22_q0,
        merge_weights_V_23_address0,
        merge_weights_V_23_ce0,
        merge_weights_V_23_q0,
        merge_weights_V_24_address0,
        merge_weights_V_24_ce0,
        merge_weights_V_24_q0,
        merge_weights_V_25_address0,
        merge_weights_V_25_ce0,
        merge_weights_V_25_q0,
        merge_weights_V_26_address0,
        merge_weights_V_26_ce0,
        merge_weights_V_26_q0,
        merge_weights_V_27_address0,
        merge_weights_V_27_ce0,
        merge_weights_V_27_q0,
        merge_weights_V_28_address0,
        merge_weights_V_28_ce0,
        merge_weights_V_28_q0,
        merge_weights_V_29_address0,
        merge_weights_V_29_ce0,
        merge_weights_V_29_q0,
        merge_weights_V_30_address0,
        merge_weights_V_30_ce0,
        merge_weights_V_30_q0,
        merge_weights_V_31_address0,
        merge_weights_V_31_ce0,
        merge_weights_V_31_q0,
        merge_weights_V_32_address0,
        merge_weights_V_32_ce0,
        merge_weights_V_32_q0,
        merge_weights_V_33_address0,
        merge_weights_V_33_ce0,
        merge_weights_V_33_q0,
        merge_weights_V_34_address0,
        merge_weights_V_34_ce0,
        merge_weights_V_34_q0,
        merge_weights_V_35_address0,
        merge_weights_V_35_ce0,
        merge_weights_V_35_q0,
        merge_weights_V_36_address0,
        merge_weights_V_36_ce0,
        merge_weights_V_36_q0,
        merge_weights_V_37_address0,
        merge_weights_V_37_ce0,
        merge_weights_V_37_q0,
        merge_weights_V_38_address0,
        merge_weights_V_38_ce0,
        merge_weights_V_38_q0,
        merge_weights_V_39_address0,
        merge_weights_V_39_ce0,
        merge_weights_V_39_q0,
        merge_weights_V_40_address0,
        merge_weights_V_40_ce0,
        merge_weights_V_40_q0,
        merge_weights_V_41_address0,
        merge_weights_V_41_ce0,
        merge_weights_V_41_q0,
        merge_weights_V_42_address0,
        merge_weights_V_42_ce0,
        merge_weights_V_42_q0,
        merge_weights_V_43_address0,
        merge_weights_V_43_ce0,
        merge_weights_V_43_q0,
        merge_weights_V_44_address0,
        merge_weights_V_44_ce0,
        merge_weights_V_44_q0,
        merge_weights_V_45_address0,
        merge_weights_V_45_ce0,
        merge_weights_V_45_q0,
        merge_weights_V_46_address0,
        merge_weights_V_46_ce0,
        merge_weights_V_46_q0,
        merge_weights_V_47_address0,
        merge_weights_V_47_ce0,
        merge_weights_V_47_q0,
        merge_weights_V_48_address0,
        merge_weights_V_48_ce0,
        merge_weights_V_48_q0,
        merge_weights_V_49_address0,
        merge_weights_V_49_ce0,
        merge_weights_V_49_q0,
        merge_weights_V_50_address0,
        merge_weights_V_50_ce0,
        merge_weights_V_50_q0,
        merge_weights_V_51_address0,
        merge_weights_V_51_ce0,
        merge_weights_V_51_q0,
        merge_weights_V_52_address0,
        merge_weights_V_52_ce0,
        merge_weights_V_52_q0,
        merge_weights_V_53_address0,
        merge_weights_V_53_ce0,
        merge_weights_V_53_q0,
        merge_weights_V_54_address0,
        merge_weights_V_54_ce0,
        merge_weights_V_54_q0,
        merge_weights_V_55_address0,
        merge_weights_V_55_ce0,
        merge_weights_V_55_q0,
        merge_weights_V_56_address0,
        merge_weights_V_56_ce0,
        merge_weights_V_56_q0,
        merge_weights_V_57_address0,
        merge_weights_V_57_ce0,
        merge_weights_V_57_q0,
        merge_weights_V_58_address0,
        merge_weights_V_58_ce0,
        merge_weights_V_58_q0,
        merge_weights_V_59_address0,
        merge_weights_V_59_ce0,
        merge_weights_V_59_q0,
        merge_weights_V_60_address0,
        merge_weights_V_60_ce0,
        merge_weights_V_60_q0,
        merge_weights_V_61_address0,
        merge_weights_V_61_ce0,
        merge_weights_V_61_q0,
        merge_weights_V_62_address0,
        merge_weights_V_62_ce0,
        merge_weights_V_62_q0,
        merge_weights_V_63_address0,
        merge_weights_V_63_ce0,
        merge_weights_V_63_q0,
        compute_core_id_out_s_1_din,
        compute_core_id_out_s_1_full_n,
        compute_core_id_out_s_1_write,
        compute_core_id_out_1_0_din,
        compute_core_id_out_1_0_full_n,
        compute_core_id_out_1_0_write,
        update_cluster_in_V_s_din,
        update_cluster_in_V_s_full_n,
        update_cluster_in_V_s_write,
        update_cluster_in_V_4_din,
        update_cluster_in_V_4_full_n,
        update_cluster_in_V_4_write,
        update_cluster_in_V_3_din,
        update_cluster_in_V_3_full_n,
        update_cluster_in_V_3_write,
        update_cluster_in_V_1_din,
        update_cluster_in_V_1_full_n,
        update_cluster_in_V_1_write
);

parameter    ap_ST_fsm_state1 = 2'd0;
parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_state9 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] msg_i;
input  [31:0] msg_core_id;
input  [511:0] msg_old_features_V;
input  [511:0] msg_new_features_V;
input  [31:0] CORE_NUM;
input  [511:0] bit_clusters_V_21;
input  [511:0] bit_clusters_V_0;
input  [511:0] bit_clusters_V_1;
input  [511:0] bit_clusters_V_2;
input  [511:0] bit_clusters_V_3;
input  [511:0] bit_clusters_V_4;
input  [511:0] bit_clusters_V_5;
input  [511:0] bit_clusters_V_6;
input  [511:0] bit_clusters_V_7;
input  [511:0] bit_clusters_V_8;
input  [511:0] bit_clusters_V_9;
input  [511:0] bit_clusters_V_10;
input  [511:0] bit_clusters_V_11;
input  [511:0] bit_clusters_V_12;
input  [511:0] bit_clusters_V_13;
input  [511:0] bit_clusters_V_14;
input  [511:0] bit_clusters_V_15;
input  [511:0] bit_clusters_V_16;
input  [511:0] bit_clusters_V_17;
input  [511:0] bit_clusters_V_18;
input  [511:0] bit_clusters_V_19;
input  [511:0] bit_clusters_V_20;
output  [7:0] merge_weights_V_0_address0;
output   merge_weights_V_0_ce0;
input  [7:0] merge_weights_V_0_q0;
output  [7:0] merge_weights_V_1_address0;
output   merge_weights_V_1_ce0;
input  [7:0] merge_weights_V_1_q0;
output  [7:0] merge_weights_V_2_address0;
output   merge_weights_V_2_ce0;
input  [7:0] merge_weights_V_2_q0;
output  [7:0] merge_weights_V_3_address0;
output   merge_weights_V_3_ce0;
input  [7:0] merge_weights_V_3_q0;
output  [7:0] merge_weights_V_4_address0;
output   merge_weights_V_4_ce0;
input  [7:0] merge_weights_V_4_q0;
output  [7:0] merge_weights_V_5_address0;
output   merge_weights_V_5_ce0;
input  [7:0] merge_weights_V_5_q0;
output  [7:0] merge_weights_V_6_address0;
output   merge_weights_V_6_ce0;
input  [7:0] merge_weights_V_6_q0;
output  [7:0] merge_weights_V_7_address0;
output   merge_weights_V_7_ce0;
input  [7:0] merge_weights_V_7_q0;
output  [7:0] merge_weights_V_8_address0;
output   merge_weights_V_8_ce0;
input  [7:0] merge_weights_V_8_q0;
output  [7:0] merge_weights_V_9_address0;
output   merge_weights_V_9_ce0;
input  [7:0] merge_weights_V_9_q0;
output  [7:0] merge_weights_V_10_address0;
output   merge_weights_V_10_ce0;
input  [7:0] merge_weights_V_10_q0;
output  [7:0] merge_weights_V_11_address0;
output   merge_weights_V_11_ce0;
input  [7:0] merge_weights_V_11_q0;
output  [7:0] merge_weights_V_12_address0;
output   merge_weights_V_12_ce0;
input  [7:0] merge_weights_V_12_q0;
output  [7:0] merge_weights_V_13_address0;
output   merge_weights_V_13_ce0;
input  [7:0] merge_weights_V_13_q0;
output  [7:0] merge_weights_V_14_address0;
output   merge_weights_V_14_ce0;
input  [7:0] merge_weights_V_14_q0;
output  [7:0] merge_weights_V_15_address0;
output   merge_weights_V_15_ce0;
input  [7:0] merge_weights_V_15_q0;
output  [7:0] merge_weights_V_16_address0;
output   merge_weights_V_16_ce0;
input  [7:0] merge_weights_V_16_q0;
output  [7:0] merge_weights_V_17_address0;
output   merge_weights_V_17_ce0;
input  [7:0] merge_weights_V_17_q0;
output  [7:0] merge_weights_V_18_address0;
output   merge_weights_V_18_ce0;
input  [7:0] merge_weights_V_18_q0;
output  [7:0] merge_weights_V_19_address0;
output   merge_weights_V_19_ce0;
input  [7:0] merge_weights_V_19_q0;
output  [7:0] merge_weights_V_20_address0;
output   merge_weights_V_20_ce0;
input  [7:0] merge_weights_V_20_q0;
output  [7:0] merge_weights_V_21_address0;
output   merge_weights_V_21_ce0;
input  [7:0] merge_weights_V_21_q0;
output  [7:0] merge_weights_V_22_address0;
output   merge_weights_V_22_ce0;
input  [7:0] merge_weights_V_22_q0;
output  [7:0] merge_weights_V_23_address0;
output   merge_weights_V_23_ce0;
input  [7:0] merge_weights_V_23_q0;
output  [7:0] merge_weights_V_24_address0;
output   merge_weights_V_24_ce0;
input  [7:0] merge_weights_V_24_q0;
output  [7:0] merge_weights_V_25_address0;
output   merge_weights_V_25_ce0;
input  [7:0] merge_weights_V_25_q0;
output  [7:0] merge_weights_V_26_address0;
output   merge_weights_V_26_ce0;
input  [7:0] merge_weights_V_26_q0;
output  [7:0] merge_weights_V_27_address0;
output   merge_weights_V_27_ce0;
input  [7:0] merge_weights_V_27_q0;
output  [7:0] merge_weights_V_28_address0;
output   merge_weights_V_28_ce0;
input  [7:0] merge_weights_V_28_q0;
output  [7:0] merge_weights_V_29_address0;
output   merge_weights_V_29_ce0;
input  [7:0] merge_weights_V_29_q0;
output  [7:0] merge_weights_V_30_address0;
output   merge_weights_V_30_ce0;
input  [7:0] merge_weights_V_30_q0;
output  [7:0] merge_weights_V_31_address0;
output   merge_weights_V_31_ce0;
input  [7:0] merge_weights_V_31_q0;
output  [7:0] merge_weights_V_32_address0;
output   merge_weights_V_32_ce0;
input  [7:0] merge_weights_V_32_q0;
output  [7:0] merge_weights_V_33_address0;
output   merge_weights_V_33_ce0;
input  [7:0] merge_weights_V_33_q0;
output  [7:0] merge_weights_V_34_address0;
output   merge_weights_V_34_ce0;
input  [7:0] merge_weights_V_34_q0;
output  [7:0] merge_weights_V_35_address0;
output   merge_weights_V_35_ce0;
input  [7:0] merge_weights_V_35_q0;
output  [7:0] merge_weights_V_36_address0;
output   merge_weights_V_36_ce0;
input  [7:0] merge_weights_V_36_q0;
output  [7:0] merge_weights_V_37_address0;
output   merge_weights_V_37_ce0;
input  [7:0] merge_weights_V_37_q0;
output  [7:0] merge_weights_V_38_address0;
output   merge_weights_V_38_ce0;
input  [7:0] merge_weights_V_38_q0;
output  [7:0] merge_weights_V_39_address0;
output   merge_weights_V_39_ce0;
input  [7:0] merge_weights_V_39_q0;
output  [7:0] merge_weights_V_40_address0;
output   merge_weights_V_40_ce0;
input  [7:0] merge_weights_V_40_q0;
output  [7:0] merge_weights_V_41_address0;
output   merge_weights_V_41_ce0;
input  [7:0] merge_weights_V_41_q0;
output  [7:0] merge_weights_V_42_address0;
output   merge_weights_V_42_ce0;
input  [7:0] merge_weights_V_42_q0;
output  [7:0] merge_weights_V_43_address0;
output   merge_weights_V_43_ce0;
input  [7:0] merge_weights_V_43_q0;
output  [7:0] merge_weights_V_44_address0;
output   merge_weights_V_44_ce0;
input  [7:0] merge_weights_V_44_q0;
output  [7:0] merge_weights_V_45_address0;
output   merge_weights_V_45_ce0;
input  [7:0] merge_weights_V_45_q0;
output  [7:0] merge_weights_V_46_address0;
output   merge_weights_V_46_ce0;
input  [7:0] merge_weights_V_46_q0;
output  [7:0] merge_weights_V_47_address0;
output   merge_weights_V_47_ce0;
input  [7:0] merge_weights_V_47_q0;
output  [7:0] merge_weights_V_48_address0;
output   merge_weights_V_48_ce0;
input  [7:0] merge_weights_V_48_q0;
output  [7:0] merge_weights_V_49_address0;
output   merge_weights_V_49_ce0;
input  [7:0] merge_weights_V_49_q0;
output  [7:0] merge_weights_V_50_address0;
output   merge_weights_V_50_ce0;
input  [7:0] merge_weights_V_50_q0;
output  [7:0] merge_weights_V_51_address0;
output   merge_weights_V_51_ce0;
input  [7:0] merge_weights_V_51_q0;
output  [7:0] merge_weights_V_52_address0;
output   merge_weights_V_52_ce0;
input  [7:0] merge_weights_V_52_q0;
output  [7:0] merge_weights_V_53_address0;
output   merge_weights_V_53_ce0;
input  [7:0] merge_weights_V_53_q0;
output  [7:0] merge_weights_V_54_address0;
output   merge_weights_V_54_ce0;
input  [7:0] merge_weights_V_54_q0;
output  [7:0] merge_weights_V_55_address0;
output   merge_weights_V_55_ce0;
input  [7:0] merge_weights_V_55_q0;
output  [7:0] merge_weights_V_56_address0;
output   merge_weights_V_56_ce0;
input  [7:0] merge_weights_V_56_q0;
output  [7:0] merge_weights_V_57_address0;
output   merge_weights_V_57_ce0;
input  [7:0] merge_weights_V_57_q0;
output  [7:0] merge_weights_V_58_address0;
output   merge_weights_V_58_ce0;
input  [7:0] merge_weights_V_58_q0;
output  [7:0] merge_weights_V_59_address0;
output   merge_weights_V_59_ce0;
input  [7:0] merge_weights_V_59_q0;
output  [7:0] merge_weights_V_60_address0;
output   merge_weights_V_60_ce0;
input  [7:0] merge_weights_V_60_q0;
output  [7:0] merge_weights_V_61_address0;
output   merge_weights_V_61_ce0;
input  [7:0] merge_weights_V_61_q0;
output  [7:0] merge_weights_V_62_address0;
output   merge_weights_V_62_ce0;
input  [7:0] merge_weights_V_62_q0;
output  [7:0] merge_weights_V_63_address0;
output   merge_weights_V_63_ce0;
input  [7:0] merge_weights_V_63_q0;
output  [31:0] compute_core_id_out_s_1_din;
input   compute_core_id_out_s_1_full_n;
output   compute_core_id_out_s_1_write;
output  [31:0] compute_core_id_out_1_0_din;
input   compute_core_id_out_1_0_full_n;
output   compute_core_id_out_1_0_write;
output  [511:0] update_cluster_in_V_s_din;
input   update_cluster_in_V_s_full_n;
output   update_cluster_in_V_s_write;
output  [511:0] update_cluster_in_V_4_din;
input   update_cluster_in_V_4_full_n;
output   update_cluster_in_V_4_write;
output  [31:0] update_cluster_in_V_3_din;
input   update_cluster_in_V_3_full_n;
output   update_cluster_in_V_3_write;
output  [31:0] update_cluster_in_V_1_din;
input   update_cluster_in_V_1_full_n;
output   update_cluster_in_V_1_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg merge_weights_V_0_ce0;
reg merge_weights_V_1_ce0;
reg merge_weights_V_2_ce0;
reg merge_weights_V_3_ce0;
reg merge_weights_V_4_ce0;
reg merge_weights_V_5_ce0;
reg merge_weights_V_6_ce0;
reg merge_weights_V_7_ce0;
reg merge_weights_V_8_ce0;
reg merge_weights_V_9_ce0;
reg merge_weights_V_10_ce0;
reg merge_weights_V_11_ce0;
reg merge_weights_V_12_ce0;
reg merge_weights_V_13_ce0;
reg merge_weights_V_14_ce0;
reg merge_weights_V_15_ce0;
reg merge_weights_V_16_ce0;
reg merge_weights_V_17_ce0;
reg merge_weights_V_18_ce0;
reg merge_weights_V_19_ce0;
reg merge_weights_V_20_ce0;
reg merge_weights_V_21_ce0;
reg merge_weights_V_22_ce0;
reg merge_weights_V_23_ce0;
reg merge_weights_V_24_ce0;
reg merge_weights_V_25_ce0;
reg merge_weights_V_26_ce0;
reg merge_weights_V_27_ce0;
reg merge_weights_V_28_ce0;
reg merge_weights_V_29_ce0;
reg merge_weights_V_30_ce0;
reg merge_weights_V_31_ce0;
reg merge_weights_V_32_ce0;
reg merge_weights_V_33_ce0;
reg merge_weights_V_34_ce0;
reg merge_weights_V_35_ce0;
reg merge_weights_V_36_ce0;
reg merge_weights_V_37_ce0;
reg merge_weights_V_38_ce0;
reg merge_weights_V_39_ce0;
reg merge_weights_V_40_ce0;
reg merge_weights_V_41_ce0;
reg merge_weights_V_42_ce0;
reg merge_weights_V_43_ce0;
reg merge_weights_V_44_ce0;
reg merge_weights_V_45_ce0;
reg merge_weights_V_46_ce0;
reg merge_weights_V_47_ce0;
reg merge_weights_V_48_ce0;
reg merge_weights_V_49_ce0;
reg merge_weights_V_50_ce0;
reg merge_weights_V_51_ce0;
reg merge_weights_V_52_ce0;
reg merge_weights_V_53_ce0;
reg merge_weights_V_54_ce0;
reg merge_weights_V_55_ce0;
reg merge_weights_V_56_ce0;
reg merge_weights_V_57_ce0;
reg merge_weights_V_58_ce0;
reg merge_weights_V_59_ce0;
reg merge_weights_V_60_ce0;
reg merge_weights_V_61_ce0;
reg merge_weights_V_62_ce0;
reg merge_weights_V_63_ce0;

reg   [1:0] ap_CS_fsm;
reg    compute_core_id_out_s_1_blk_n;
reg    compute_core_id_out_1_0_blk_n;
reg    update_cluster_in_V_s_blk_n;
reg    update_cluster_in_V_4_blk_n;
reg    update_cluster_in_V_3_blk_n;
reg    update_cluster_in_V_1_blk_n;
reg   [15:0] membership_ans_V_i_reg_1418;
reg   [31:0] tmp_core_id_reg_1430;
reg   [4:0] membership_index_reg_1442;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_i_fu_1595_p2;
reg   [0:0] tmp_i_reg_3531;
reg   [0:0] tmp_i_reg_3531_pp0_iter1_reg;
reg   [0:0] tmp_i_reg_3531_pp0_iter2_reg;
reg   [0:0] tmp_i_reg_3531_pp0_iter3_reg;
reg   [0:0] tmp_i_reg_3531_pp0_iter4_reg;
reg   [0:0] tmp_i_reg_3531_pp0_iter5_reg;
wire   [4:0] c_fu_1601_p2;
reg   [4:0] c_reg_3535;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] membership_index_2_c_fu_1607_p1;
reg   [31:0] membership_index_2_c_reg_3540;
reg   [31:0] membership_index_2_c_reg_3540_pp0_iter1_reg;
reg   [31:0] membership_index_2_c_reg_3540_pp0_iter2_reg;
reg   [31:0] membership_index_2_c_reg_3540_pp0_iter3_reg;
reg   [31:0] membership_index_2_c_reg_3540_pp0_iter4_reg;
reg   [31:0] membership_index_2_c_reg_3540_pp0_iter5_reg;
wire   [0:0] tmp_i_76_fu_1611_p2;
reg   [0:0] tmp_i_76_reg_3545;
reg   [0:0] tmp_i_76_reg_3545_pp0_iter1_reg;
reg   [0:0] tmp_i_76_reg_3545_pp0_iter2_reg;
reg   [0:0] tmp_i_76_reg_3545_pp0_iter3_reg;
reg   [0:0] tmp_i_76_reg_3545_pp0_iter4_reg;
reg   [0:0] tmp_i_76_reg_3545_pp0_iter5_reg;
reg   [7:0] p_Result_8_i_reg_3589;
reg   [7:0] p_Result_16_i_reg_3629;
reg   [7:0] p_Result_16_i_reg_3629_pp0_iter2_reg;
reg   [7:0] p_Result_i_reg_3709;
reg   [7:0] p_Result_i_reg_3709_pp0_iter2_reg;
wire   [8:0] ansmap_V_1_i_fu_2568_p2;
reg   [8:0] ansmap_V_1_i_reg_3869;
wire   [8:0] tmp_fu_2582_p2;
reg   [8:0] tmp_reg_3874;
reg   [7:0] merge_weights_V_4_lo_reg_3879;
reg   [7:0] merge_weights_V_5_lo_reg_3884;
wire   [8:0] tmp3_fu_2596_p2;
reg   [8:0] tmp3_reg_3889;
reg   [7:0] merge_weights_V_13_l_reg_3899;
wire   [8:0] tmp6_fu_2630_p2;
reg   [8:0] tmp6_reg_3904;
reg   [8:0] tmp6_reg_3904_pp0_iter3_reg;
wire   [8:0] tmp8_fu_2636_p2;
reg   [8:0] tmp8_reg_3909;
wire   [8:0] tmp10_fu_2642_p2;
reg   [8:0] tmp10_reg_3914;
reg   [7:0] merge_weights_V_29_l_reg_3919;
wire   [8:0] tmp14_fu_2704_p2;
reg   [8:0] tmp14_reg_3924;
reg   [8:0] tmp14_reg_3924_pp0_iter3_reg;
wire   [8:0] tmp16_fu_2710_p2;
reg   [8:0] tmp16_reg_3929;
wire   [8:0] tmp17_fu_2716_p2;
reg   [8:0] tmp17_reg_3934;
wire   [8:0] tmp20_fu_2722_p2;
reg   [8:0] tmp20_reg_3939;
wire   [8:0] tmp21_fu_2728_p2;
reg   [8:0] tmp21_reg_3944;
wire   [8:0] tmp23_fu_2734_p2;
reg   [8:0] tmp23_reg_3949;
wire   [8:0] tmp25_fu_2740_p2;
reg   [8:0] tmp25_reg_3954;
reg   [7:0] merge_weights_V_61_l_reg_3959;
wire   [8:0] tmp30_fu_2866_p2;
reg   [8:0] tmp30_reg_3964;
reg   [8:0] tmp30_reg_3964_pp0_iter3_reg;
reg   [8:0] tmp30_reg_3964_pp0_iter4_reg;
wire   [8:0] tmp32_fu_2872_p2;
reg   [8:0] tmp32_reg_3969;
wire   [8:0] tmp33_fu_2878_p2;
reg   [8:0] tmp33_reg_3974;
wire   [8:0] tmp36_fu_2884_p2;
reg   [8:0] tmp36_reg_3979;
wire   [8:0] tmp37_fu_2890_p2;
reg   [8:0] tmp37_reg_3984;
wire   [8:0] tmp39_fu_2896_p2;
reg   [8:0] tmp39_reg_3989;
wire   [8:0] tmp40_fu_2902_p2;
reg   [8:0] tmp40_reg_3994;
wire   [8:0] tmp44_fu_2908_p2;
reg   [8:0] tmp44_reg_3999;
wire   [8:0] tmp45_fu_2914_p2;
reg   [8:0] tmp45_reg_4004;
wire   [8:0] tmp47_fu_2920_p2;
reg   [8:0] tmp47_reg_4009;
wire   [8:0] tmp48_fu_2926_p2;
reg   [8:0] tmp48_reg_4014;
wire   [8:0] tmp51_fu_2932_p2;
reg   [8:0] tmp51_reg_4019;
wire   [8:0] tmp52_fu_2938_p2;
reg   [8:0] tmp52_reg_4024;
wire   [8:0] tmp54_fu_2944_p2;
reg   [8:0] tmp54_reg_4029;
wire   [8:0] tmp56_fu_2950_p2;
reg   [8:0] tmp56_reg_4034;
wire   [11:0] tmp5_fu_3014_p2;
reg   [11:0] tmp5_reg_4039;
wire   [10:0] tmp7_fu_3036_p2;
reg   [10:0] tmp7_reg_4044;
wire   [9:0] tmp15_fu_3055_p2;
reg   [9:0] tmp15_reg_4054;
reg   [9:0] tmp15_reg_4054_pp0_iter4_reg;
wire   [11:0] tmp18_fu_3103_p2;
reg   [11:0] tmp18_reg_4059;
reg   [11:0] tmp18_reg_4059_pp0_iter4_reg;
wire   [9:0] tmp31_fu_3122_p2;
reg   [9:0] tmp31_reg_4069;
reg   [9:0] tmp31_reg_4069_pp0_iter4_reg;
wire   [10:0] tmp34_fu_3160_p2;
reg   [10:0] tmp34_reg_4074;
reg   [10:0] tmp34_reg_4074_pp0_iter4_reg;
reg   [10:0] tmp34_reg_4074_pp0_iter5_reg;
wire   [10:0] tmp42_fu_3198_p2;
reg   [10:0] tmp42_reg_4079;
wire   [11:0] tmp49_fu_3246_p2;
reg   [11:0] tmp49_reg_4084;
wire   [12:0] tmp12_fu_3286_p2;
reg   [12:0] tmp12_reg_4089;
reg   [7:0] merge_weights_V_32_l_reg_4094;
wire   [12:0] tmp41_fu_3298_p2;
reg   [12:0] tmp41_reg_4099;
reg   [12:0] tmp41_reg_4099_pp0_iter5_reg;
wire   [13:0] tmp27_fu_3346_p2;
reg   [13:0] tmp27_reg_4104;
wire   [15:0] membership_ans_V_1_i_fu_3379_p3;
reg    ap_enable_reg_pp0_iter6;
wire   [31:0] membership_index_1_fu_3387_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_predicate_tran2to9_state2;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg   [4:0] ap_phi_mux_membership_index_phi_fu_1446_p4;
wire    ap_block_pp0_stage0;
wire   [511:0] ap_phi_reg_pp0_iter0_rhs_V_reg_1454;
reg   [511:0] ap_phi_reg_pp0_iter1_rhs_V_reg_1454;
wire   [63:0] tmp_85_i_fu_1625_p1;
wire   [63:0] tmp_85_1_i_fu_1640_p1;
wire   [63:0] tmp_85_2_i_fu_1655_p1;
wire   [63:0] tmp_85_3_i_fu_1670_p1;
wire   [63:0] tmp_85_4_i_fu_1685_p1;
wire   [63:0] tmp_85_5_i_fu_1700_p1;
wire   [63:0] tmp_85_6_i_fu_1715_p1;
wire   [63:0] tmp_85_7_i_fu_1730_p1;
wire   [63:0] tmp_85_9_i_fu_1755_p1;
wire   [63:0] tmp_85_i_77_fu_1770_p1;
wire   [63:0] tmp_85_10_i_fu_1785_p1;
wire   [63:0] tmp_85_11_i_fu_1800_p1;
wire   [63:0] tmp_85_12_i_fu_1815_p1;
wire   [63:0] tmp_85_13_i_fu_1830_p1;
wire   [63:0] tmp_85_14_i_fu_1845_p1;
wire   [63:0] tmp_85_16_i_fu_1870_p1;
wire   [63:0] tmp_85_17_i_fu_1885_p1;
wire   [63:0] tmp_85_18_i_fu_1900_p1;
wire   [63:0] tmp_85_19_i_fu_1915_p1;
wire   [63:0] tmp_85_20_i_fu_1930_p1;
wire   [63:0] tmp_85_21_i_fu_1945_p1;
wire   [63:0] tmp_85_22_i_fu_1960_p1;
wire   [63:0] tmp_85_23_i_fu_1975_p1;
wire   [63:0] tmp_85_24_i_fu_1990_p1;
wire   [63:0] tmp_85_25_i_fu_2005_p1;
wire   [63:0] tmp_85_26_i_fu_2020_p1;
wire   [63:0] tmp_85_27_i_fu_2035_p1;
wire   [63:0] tmp_85_28_i_fu_2050_p1;
wire   [63:0] tmp_85_29_i_fu_2065_p1;
wire   [63:0] tmp_85_30_i_fu_2080_p1;
wire   [63:0] tmp_85_32_i_fu_2105_p1;
wire   [63:0] tmp_85_33_i_fu_2120_p1;
wire   [63:0] tmp_85_34_i_fu_2135_p1;
wire   [63:0] tmp_85_35_i_fu_2150_p1;
wire   [63:0] tmp_85_36_i_fu_2165_p1;
wire   [63:0] tmp_85_37_i_fu_2180_p1;
wire   [63:0] tmp_85_38_i_fu_2195_p1;
wire   [63:0] tmp_85_39_i_fu_2210_p1;
wire   [63:0] tmp_85_40_i_fu_2225_p1;
wire   [63:0] tmp_85_41_i_fu_2240_p1;
wire   [63:0] tmp_85_42_i_fu_2255_p1;
wire   [63:0] tmp_85_43_i_fu_2270_p1;
wire   [63:0] tmp_85_44_i_fu_2285_p1;
wire   [63:0] tmp_85_45_i_fu_2300_p1;
wire   [63:0] tmp_85_46_i_fu_2315_p1;
wire   [63:0] tmp_85_47_i_fu_2330_p1;
wire   [63:0] tmp_85_48_i_fu_2345_p1;
wire   [63:0] tmp_85_49_i_fu_2360_p1;
wire   [63:0] tmp_85_50_i_fu_2375_p1;
wire   [63:0] tmp_85_51_i_fu_2390_p1;
wire   [63:0] tmp_85_52_i_fu_2405_p1;
wire   [63:0] tmp_85_53_i_fu_2420_p1;
wire   [63:0] tmp_85_54_i_fu_2435_p1;
wire   [63:0] tmp_85_55_i_fu_2450_p1;
wire   [63:0] tmp_85_56_i_fu_2465_p1;
wire   [63:0] tmp_85_57_i_fu_2480_p1;
wire   [63:0] tmp_85_58_i_fu_2495_p1;
wire   [63:0] tmp_85_59_i_fu_2510_p1;
wire   [63:0] tmp_85_60_i_fu_2525_p1;
wire   [63:0] tmp_85_61_i_fu_2540_p1;
wire   [63:0] tmp_85_62_i_fu_2555_p1;
wire   [63:0] tmp_85_8_i_fu_2602_p1;
wire   [63:0] tmp_85_15_i_fu_3042_p1;
wire   [63:0] tmp_85_31_i_fu_3109_p1;
reg    compute_core_id_out_s_11_update;
wire    compute_core_id_out_s_11_status;
wire    update_cluster_in_V_s1_status;
reg    ap_block_state9;
reg    update_cluster_in_V_s1_update;
wire   [511:0] r_V_fu_1616_p2;
wire   [7:0] tmp_925_fu_1621_p1;
wire   [7:0] p_Result_1_i_fu_1630_p4;
wire   [7:0] p_Result_2_i_fu_1645_p4;
wire   [7:0] p_Result_3_i_fu_1660_p4;
wire   [7:0] p_Result_4_i_fu_1675_p4;
wire   [7:0] p_Result_5_i_fu_1690_p4;
wire   [7:0] p_Result_6_i_fu_1705_p4;
wire   [7:0] p_Result_7_i_fu_1720_p4;
wire   [7:0] p_Result_9_i_fu_1745_p4;
wire   [7:0] p_Result_10_i_fu_1760_p4;
wire   [7:0] p_Result_11_i_fu_1775_p4;
wire   [7:0] p_Result_12_i_fu_1790_p4;
wire   [7:0] p_Result_13_i_fu_1805_p4;
wire   [7:0] p_Result_14_i_fu_1820_p4;
wire   [7:0] p_Result_15_i_fu_1835_p4;
wire   [7:0] p_Result_17_i_fu_1860_p4;
wire   [7:0] p_Result_18_i_fu_1875_p4;
wire   [7:0] p_Result_19_i_fu_1890_p4;
wire   [7:0] p_Result_20_i_fu_1905_p4;
wire   [7:0] p_Result_21_i_fu_1920_p4;
wire   [7:0] p_Result_22_i_fu_1935_p4;
wire   [7:0] p_Result_23_i_fu_1950_p4;
wire   [7:0] p_Result_24_i_fu_1965_p4;
wire   [7:0] p_Result_25_i_fu_1980_p4;
wire   [7:0] p_Result_26_i_fu_1995_p4;
wire   [7:0] p_Result_27_i_fu_2010_p4;
wire   [7:0] p_Result_28_i_fu_2025_p4;
wire   [7:0] p_Result_29_i_fu_2040_p4;
wire   [7:0] p_Result_30_i_fu_2055_p4;
wire   [7:0] p_Result_31_i_fu_2070_p4;
wire   [7:0] p_Result_32_i_fu_2095_p4;
wire   [7:0] p_Result_33_i_fu_2110_p4;
wire   [7:0] p_Result_34_i_fu_2125_p4;
wire   [7:0] p_Result_35_i_fu_2140_p4;
wire   [7:0] p_Result_36_i_fu_2155_p4;
wire   [7:0] p_Result_37_i_fu_2170_p4;
wire   [7:0] p_Result_38_i_fu_2185_p4;
wire   [7:0] p_Result_39_i_fu_2200_p4;
wire   [7:0] p_Result_40_i_fu_2215_p4;
wire   [7:0] p_Result_41_i_fu_2230_p4;
wire   [7:0] p_Result_42_i_fu_2245_p4;
wire   [7:0] p_Result_43_i_fu_2260_p4;
wire   [7:0] p_Result_44_i_fu_2275_p4;
wire   [7:0] p_Result_45_i_fu_2290_p4;
wire   [7:0] p_Result_46_i_fu_2305_p4;
wire   [7:0] p_Result_47_i_fu_2320_p4;
wire   [7:0] p_Result_48_i_fu_2335_p4;
wire   [7:0] p_Result_49_i_fu_2350_p4;
wire   [7:0] p_Result_50_i_fu_2365_p4;
wire   [7:0] p_Result_51_i_fu_2380_p4;
wire   [7:0] p_Result_52_i_fu_2395_p4;
wire   [7:0] p_Result_53_i_fu_2410_p4;
wire   [7:0] p_Result_54_i_fu_2425_p4;
wire   [7:0] p_Result_55_i_fu_2440_p4;
wire   [7:0] p_Result_56_i_fu_2455_p4;
wire   [7:0] p_Result_57_i_fu_2470_p4;
wire   [7:0] p_Result_58_i_fu_2485_p4;
wire   [7:0] p_Result_59_i_fu_2500_p4;
wire   [7:0] p_Result_60_i_fu_2515_p4;
wire   [7:0] p_Result_61_i_fu_2530_p4;
wire   [7:0] p_Result_62_i_fu_2545_p4;
wire   [8:0] tmp_87_cast_cast_i_fu_2560_p1;
wire   [8:0] tmp_87_1_cast_cast_i_fu_2564_p1;
wire   [8:0] tmp_87_3_cast_cast_i_fu_2578_p1;
wire   [8:0] tmp_87_2_cast_cast_i_fu_2574_p1;
wire   [8:0] tmp_87_7_cast_cast_i_fu_2592_p1;
wire   [8:0] tmp_87_6_cast_cast_i_fu_2588_p1;
wire   [8:0] extLd4246_i_cast_fu_2610_p1;
wire   [8:0] extLd4243_i_cast_fu_2606_p1;
wire   [8:0] extLd4252_i_cast_fu_2618_p1;
wire   [8:0] extLd4249_i_cast_fu_2614_p1;
wire   [8:0] extLd4261_i_cast_fu_2626_p1;
wire   [8:0] extLd4258_i_cast_fu_2622_p1;
wire   [8:0] tmp_87_17_cast_i_cas_fu_2652_p1;
wire   [8:0] tmp_87_16_cast_i_cas_fu_2648_p1;
wire   [8:0] tmp_87_19_cast_i_cas_fu_2660_p1;
wire   [8:0] tmp_87_18_cast_i_cas_fu_2656_p1;
wire   [8:0] tmp_87_21_cast_i_cas_fu_2668_p1;
wire   [8:0] tmp_87_20_cast_i_cas_fu_2664_p1;
wire   [8:0] tmp_87_23_cast_i_cas_fu_2676_p1;
wire   [8:0] tmp_87_22_cast_i_cas_fu_2672_p1;
wire   [8:0] tmp_87_25_cast_i_cas_fu_2684_p1;
wire   [8:0] tmp_87_24_cast_i_cas_fu_2680_p1;
wire   [8:0] tmp_87_27_cast_i_cas_fu_2692_p1;
wire   [8:0] tmp_87_26_cast_i_cas_fu_2688_p1;
wire   [8:0] tmp_87_30_cast_i_cas_fu_2700_p1;
wire   [8:0] tmp_87_29_cast_i_cas_fu_2696_p1;
wire   [8:0] tmp_87_33_cast_i_cas_fu_2750_p1;
wire   [8:0] tmp_87_32_cast_i_cas_fu_2746_p1;
wire   [8:0] tmp_87_35_cast_i_cas_fu_2758_p1;
wire   [8:0] tmp_87_34_cast_i_cas_fu_2754_p1;
wire   [8:0] tmp_87_37_cast_i_cas_fu_2766_p1;
wire   [8:0] tmp_87_36_cast_i_cas_fu_2762_p1;
wire   [8:0] tmp_87_39_cast_i_cas_fu_2774_p1;
wire   [8:0] tmp_87_38_cast_i_cas_fu_2770_p1;
wire   [8:0] tmp_87_41_cast_i_cas_fu_2782_p1;
wire   [8:0] tmp_87_40_cast_i_cas_fu_2778_p1;
wire   [8:0] tmp_87_43_cast_i_cas_fu_2790_p1;
wire   [8:0] tmp_87_42_cast_i_cas_fu_2786_p1;
wire   [8:0] tmp_87_45_cast_i_cas_fu_2798_p1;
wire   [8:0] tmp_87_44_cast_i_cas_fu_2794_p1;
wire   [8:0] tmp_87_47_cast_i_cas_fu_2806_p1;
wire   [8:0] tmp_87_46_cast_i_cas_fu_2802_p1;
wire   [8:0] tmp_87_49_cast_i_cas_fu_2814_p1;
wire   [8:0] tmp_87_48_cast_i_cas_fu_2810_p1;
wire   [8:0] tmp_87_51_cast_i_cas_fu_2822_p1;
wire   [8:0] tmp_87_50_cast_i_cas_fu_2818_p1;
wire   [8:0] tmp_87_53_cast_i_cas_fu_2830_p1;
wire   [8:0] tmp_87_52_cast_i_cas_fu_2826_p1;
wire   [8:0] tmp_87_55_cast_i_cas_fu_2838_p1;
wire   [8:0] tmp_87_54_cast_i_cas_fu_2834_p1;
wire   [8:0] tmp_87_57_cast_i_cas_fu_2846_p1;
wire   [8:0] tmp_87_56_cast_i_cas_fu_2842_p1;
wire   [8:0] tmp_87_59_cast_i_cas_fu_2854_p1;
wire   [8:0] tmp_87_58_cast_i_cas_fu_2850_p1;
wire   [8:0] tmp_87_62_cast_i_cas_fu_2862_p1;
wire   [8:0] tmp_87_61_cast_i_cas_fu_2858_p1;
wire   [9:0] ansmap_V_1_cast_cast_fu_2956_p1;
wire   [9:0] tmp_cast_fu_2959_p1;
wire   [9:0] ansmap_V_3_i_fu_2962_p2;
wire   [10:0] tmp_87_4_cast_cast_i_fu_2972_p1;
wire   [10:0] ansmap_V_3_cast_cast_fu_2968_p1;
wire   [9:0] tmp_87_5_cast_cast_i_fu_2975_p1;
wire   [9:0] tmp3_cast_fu_2984_p1;
wire   [9:0] tmp2_fu_2987_p2;
wire   [10:0] tmp1_fu_2978_p2;
wire   [10:0] tmp2_cast_fu_2993_p1;
wire   [10:0] ansmap_V_7_i_fu_2997_p2;
wire   [11:0] extLd4240_i_fu_3007_p1;
wire   [11:0] ansmap_V_7_cast_cast_fu_3003_p1;
wire   [9:0] extLd4255_i_cast_fu_3011_p1;
wire   [9:0] tmp10_cast_fu_3023_p1;
wire   [9:0] tmp9_fu_3026_p2;
wire   [10:0] tmp8_cast_fu_3020_p1;
wire   [10:0] tmp9_cast_fu_3032_p1;
wire   [9:0] tmp16_cast_fu_3049_p1;
wire   [9:0] tmp17_cast_fu_3052_p1;
wire   [9:0] tmp20_cast_fu_3061_p1;
wire   [9:0] tmp21_cast_fu_3064_p1;
wire   [9:0] tmp19_fu_3067_p2;
wire   [9:0] tmp_87_28_cast_i_cas_fu_3046_p1;
wire   [9:0] tmp25_cast_fu_3080_p1;
wire   [9:0] tmp24_fu_3083_p2;
wire   [10:0] tmp23_cast_fu_3077_p1;
wire   [10:0] tmp24_cast_fu_3089_p1;
wire   [10:0] tmp22_fu_3093_p2;
wire   [11:0] tmp19_cast_fu_3073_p1;
wire   [11:0] tmp22_cast_fu_3099_p1;
wire   [9:0] tmp32_cast_fu_3116_p1;
wire   [9:0] tmp33_cast_fu_3119_p1;
wire   [9:0] tmp36_cast_fu_3128_p1;
wire   [9:0] tmp37_cast_fu_3131_p1;
wire   [9:0] tmp35_fu_3134_p2;
wire   [9:0] tmp39_cast_fu_3144_p1;
wire   [9:0] tmp40_cast_fu_3147_p1;
wire   [9:0] tmp38_fu_3150_p2;
wire   [10:0] tmp35_cast_fu_3140_p1;
wire   [10:0] tmp38_cast_fu_3156_p1;
wire   [9:0] tmp44_cast_fu_3166_p1;
wire   [9:0] tmp45_cast_fu_3169_p1;
wire   [9:0] tmp43_fu_3172_p2;
wire   [9:0] tmp47_cast_fu_3182_p1;
wire   [9:0] tmp48_cast_fu_3185_p1;
wire   [9:0] tmp46_fu_3188_p2;
wire   [10:0] tmp43_cast_fu_3178_p1;
wire   [10:0] tmp46_cast_fu_3194_p1;
wire   [9:0] tmp51_cast_fu_3204_p1;
wire   [9:0] tmp52_cast_fu_3207_p1;
wire   [9:0] tmp50_fu_3210_p2;
wire   [9:0] tmp_87_60_cast_i_cas_fu_3113_p1;
wire   [9:0] tmp56_cast_fu_3223_p1;
wire   [9:0] tmp55_fu_3226_p2;
wire   [10:0] tmp54_cast_fu_3220_p1;
wire   [10:0] tmp55_cast_fu_3232_p1;
wire   [10:0] tmp53_fu_3236_p2;
wire   [11:0] tmp50_cast_fu_3216_p1;
wire   [11:0] tmp53_cast_fu_3242_p1;
wire   [11:0] tmp6_cast_fu_3252_p1;
wire   [11:0] tmp4_fu_3255_p2;
wire   [11:0] tmp7_cast_fu_3260_p1;
wire   [11:0] ansmap_V_14_i_fu_3263_p2;
wire   [12:0] tmp_87_15_cast_i_fu_3273_p1;
wire   [12:0] ansmap_V_14_cast_i_fu_3269_p1;
wire   [12:0] tmp13_fu_3277_p2;
wire   [12:0] tmp14_cast_fu_3283_p1;
wire   [12:0] tmp42_cast_fu_3292_p1;
wire   [12:0] tmp49_cast_fu_3295_p1;
wire   [12:0] tmp15_cast_fu_3304_p1;
wire   [12:0] tmp11_fu_3307_p2;
wire   [12:0] tmp18_cast_fu_3312_p1;
wire   [12:0] ansmap_V_30_i_fu_3315_p2;
wire   [13:0] tmp_87_31_cast_i_fu_3325_p1;
wire   [13:0] ansmap_V_30_cast_i_fu_3321_p1;
wire   [13:0] tmp29_fu_3328_p2;
wire   [13:0] tmp30_cast_fu_3334_p1;
wire   [13:0] tmp28_fu_3337_p2;
wire   [13:0] tmp31_cast_fu_3343_p1;
wire   [13:0] tmp34_cast_fu_3352_p1;
wire   [13:0] tmp26_fu_3355_p2;
wire   [13:0] tmp41_cast_fu_3360_p1;
wire   [13:0] ansmap_V_62_i_fu_3363_p2;
wire   [15:0] ansmap_V_62_cast_i_fu_3369_p1;
wire   [0:0] tmp_65_i_fu_3373_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_889;
reg    ap_condition_893;
reg    ap_condition_897;
reg    ap_condition_901;
reg    ap_condition_905;
reg    ap_condition_909;
reg    ap_condition_913;
reg    ap_condition_917;
reg    ap_condition_921;
reg    ap_condition_925;
reg    ap_condition_929;
reg    ap_condition_933;
reg    ap_condition_937;
reg    ap_condition_941;
reg    ap_condition_945;
reg    ap_condition_949;
reg    ap_condition_953;
reg    ap_condition_957;
reg    ap_condition_961;
reg    ap_condition_965;
reg    ap_condition_1009;
reg    ap_condition_1012;
reg    ap_condition_556;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd0;
#0 membership_ans_V_i_reg_1418 = 16'd0;
#0 tmp_core_id_reg_1430 = 32'd0;
#0 membership_index_reg_1442 = 5'd0;
#0 tmp_i_reg_3531 = 1'd0;
#0 tmp_i_reg_3531_pp0_iter1_reg = 1'd0;
#0 tmp_i_reg_3531_pp0_iter2_reg = 1'd0;
#0 tmp_i_reg_3531_pp0_iter3_reg = 1'd0;
#0 tmp_i_reg_3531_pp0_iter4_reg = 1'd0;
#0 tmp_i_reg_3531_pp0_iter5_reg = 1'd0;
#0 c_reg_3535 = 5'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 membership_index_2_c_reg_3540 = 32'd0;
#0 membership_index_2_c_reg_3540_pp0_iter1_reg = 32'd0;
#0 membership_index_2_c_reg_3540_pp0_iter2_reg = 32'd0;
#0 membership_index_2_c_reg_3540_pp0_iter3_reg = 32'd0;
#0 membership_index_2_c_reg_3540_pp0_iter4_reg = 32'd0;
#0 membership_index_2_c_reg_3540_pp0_iter5_reg = 32'd0;
#0 tmp_i_76_reg_3545 = 1'd0;
#0 tmp_i_76_reg_3545_pp0_iter1_reg = 1'd0;
#0 tmp_i_76_reg_3545_pp0_iter2_reg = 1'd0;
#0 tmp_i_76_reg_3545_pp0_iter3_reg = 1'd0;
#0 tmp_i_76_reg_3545_pp0_iter4_reg = 1'd0;
#0 tmp_i_76_reg_3545_pp0_iter5_reg = 1'd0;
#0 p_Result_8_i_reg_3589 = 8'd0;
#0 p_Result_16_i_reg_3629 = 8'd0;
#0 p_Result_16_i_reg_3629_pp0_iter2_reg = 8'd0;
#0 p_Result_i_reg_3709 = 8'd0;
#0 p_Result_i_reg_3709_pp0_iter2_reg = 8'd0;
#0 ansmap_V_1_i_reg_3869 = 9'd0;
#0 tmp_reg_3874 = 9'd0;
#0 merge_weights_V_4_lo_reg_3879 = 8'd0;
#0 merge_weights_V_5_lo_reg_3884 = 8'd0;
#0 tmp3_reg_3889 = 9'd0;
#0 merge_weights_V_13_l_reg_3899 = 8'd0;
#0 tmp6_reg_3904 = 9'd0;
#0 tmp6_reg_3904_pp0_iter3_reg = 9'd0;
#0 tmp8_reg_3909 = 9'd0;
#0 tmp10_reg_3914 = 9'd0;
#0 merge_weights_V_29_l_reg_3919 = 8'd0;
#0 tmp14_reg_3924 = 9'd0;
#0 tmp14_reg_3924_pp0_iter3_reg = 9'd0;
#0 tmp16_reg_3929 = 9'd0;
#0 tmp17_reg_3934 = 9'd0;
#0 tmp20_reg_3939 = 9'd0;
#0 tmp21_reg_3944 = 9'd0;
#0 tmp23_reg_3949 = 9'd0;
#0 tmp25_reg_3954 = 9'd0;
#0 merge_weights_V_61_l_reg_3959 = 8'd0;
#0 tmp30_reg_3964 = 9'd0;
#0 tmp30_reg_3964_pp0_iter3_reg = 9'd0;
#0 tmp30_reg_3964_pp0_iter4_reg = 9'd0;
#0 tmp32_reg_3969 = 9'd0;
#0 tmp33_reg_3974 = 9'd0;
#0 tmp36_reg_3979 = 9'd0;
#0 tmp37_reg_3984 = 9'd0;
#0 tmp39_reg_3989 = 9'd0;
#0 tmp40_reg_3994 = 9'd0;
#0 tmp44_reg_3999 = 9'd0;
#0 tmp45_reg_4004 = 9'd0;
#0 tmp47_reg_4009 = 9'd0;
#0 tmp48_reg_4014 = 9'd0;
#0 tmp51_reg_4019 = 9'd0;
#0 tmp52_reg_4024 = 9'd0;
#0 tmp54_reg_4029 = 9'd0;
#0 tmp56_reg_4034 = 9'd0;
#0 tmp5_reg_4039 = 12'd0;
#0 tmp7_reg_4044 = 11'd0;
#0 tmp15_reg_4054 = 10'd0;
#0 tmp15_reg_4054_pp0_iter4_reg = 10'd0;
#0 tmp18_reg_4059 = 12'd0;
#0 tmp18_reg_4059_pp0_iter4_reg = 12'd0;
#0 tmp31_reg_4069 = 10'd0;
#0 tmp31_reg_4069_pp0_iter4_reg = 10'd0;
#0 tmp34_reg_4074 = 11'd0;
#0 tmp34_reg_4074_pp0_iter4_reg = 11'd0;
#0 tmp34_reg_4074_pp0_iter5_reg = 11'd0;
#0 tmp42_reg_4079 = 11'd0;
#0 tmp49_reg_4084 = 12'd0;
#0 tmp12_reg_4089 = 13'd0;
#0 merge_weights_V_32_l_reg_4094 = 8'd0;
#0 tmp41_reg_4099 = 13'd0;
#0 tmp41_reg_4099_pp0_iter5_reg = 13'd0;
#0 tmp27_reg_4104 = 14'd0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_phi_reg_pp0_iter1_rhs_V_reg_1454 = 512'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ansmap_V_1_i_reg_3869 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ansmap_V_1_i_reg_3869 <= ansmap_V_1_i_fu_2568_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (ap_ST_fsm_state1 == ap_CS_fsm))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (ap_ST_fsm_state1 == ap_CS_fsm))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= 512'd0;
    end else begin
        if ((1'b1 == ap_condition_556)) begin
            if ((1'b1 == ap_condition_1012)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_0;
            end else if ((1'b1 == ap_condition_1009)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_21;
            end else if ((1'b1 == ap_condition_965)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_20;
            end else if ((1'b1 == ap_condition_961)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_19;
            end else if ((1'b1 == ap_condition_957)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_18;
            end else if ((1'b1 == ap_condition_953)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_17;
            end else if ((1'b1 == ap_condition_949)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_16;
            end else if ((1'b1 == ap_condition_945)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_15;
            end else if ((1'b1 == ap_condition_941)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_14;
            end else if ((1'b1 == ap_condition_937)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_13;
            end else if ((1'b1 == ap_condition_933)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_12;
            end else if ((1'b1 == ap_condition_929)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_11;
            end else if ((1'b1 == ap_condition_925)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_10;
            end else if ((1'b1 == ap_condition_921)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_9;
            end else if ((1'b1 == ap_condition_917)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_8;
            end else if ((1'b1 == ap_condition_913)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_7;
            end else if ((1'b1 == ap_condition_909)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_6;
            end else if ((1'b1 == ap_condition_905)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_5;
            end else if ((1'b1 == ap_condition_901)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_4;
            end else if ((1'b1 == ap_condition_897)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_3;
            end else if ((1'b1 == ap_condition_893)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_2;
            end else if ((1'b1 == ap_condition_889)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= bit_clusters_V_1;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter1_rhs_V_reg_1454 <= ap_phi_reg_pp0_iter0_rhs_V_reg_1454;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        c_reg_3535 <= 5'd0;
    end else begin
        if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c_reg_3535 <= c_fu_1601_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        membership_ans_V_i_reg_1418 <= 16'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter5_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
            membership_ans_V_i_reg_1418 <= membership_ans_V_1_i_fu_3379_p3;
        end else if (((ap_start == 1'b1) & (ap_ST_fsm_state1 == ap_CS_fsm))) begin
            membership_ans_V_i_reg_1418 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                membership_index_2_c_reg_3540[0] <= 1'b0;
        membership_index_2_c_reg_3540[1] <= 1'b0;
        membership_index_2_c_reg_3540[2] <= 1'b0;
        membership_index_2_c_reg_3540[3] <= 1'b0;
        membership_index_2_c_reg_3540[4] <= 1'b0;
    end else begin
        if (((tmp_i_fu_1595_p2 == 1'd1) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        membership_index_2_c_reg_3540[4 : 0] <= membership_index_2_c_fu_1607_p1[4 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                membership_index_2_c_reg_3540_pp0_iter1_reg[0] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter1_reg[1] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter1_reg[2] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter1_reg[3] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter1_reg[4] <= 1'b0;
    end else begin
        if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        membership_index_2_c_reg_3540_pp0_iter1_reg[4 : 0] <= membership_index_2_c_reg_3540[4 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                membership_index_2_c_reg_3540_pp0_iter2_reg[0] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter2_reg[1] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter2_reg[2] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter2_reg[3] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter2_reg[4] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        membership_index_2_c_reg_3540_pp0_iter2_reg[4 : 0] <= membership_index_2_c_reg_3540_pp0_iter1_reg[4 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                membership_index_2_c_reg_3540_pp0_iter3_reg[0] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter3_reg[1] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter3_reg[2] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter3_reg[3] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter3_reg[4] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        membership_index_2_c_reg_3540_pp0_iter3_reg[4 : 0] <= membership_index_2_c_reg_3540_pp0_iter2_reg[4 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                membership_index_2_c_reg_3540_pp0_iter4_reg[0] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter4_reg[1] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter4_reg[2] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter4_reg[3] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter4_reg[4] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        membership_index_2_c_reg_3540_pp0_iter4_reg[4 : 0] <= membership_index_2_c_reg_3540_pp0_iter3_reg[4 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                membership_index_2_c_reg_3540_pp0_iter5_reg[0] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter5_reg[1] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter5_reg[2] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter5_reg[3] <= 1'b0;
        membership_index_2_c_reg_3540_pp0_iter5_reg[4] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        membership_index_2_c_reg_3540_pp0_iter5_reg[4 : 0] <= membership_index_2_c_reg_3540_pp0_iter4_reg[4 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        membership_index_reg_1442 <= 5'd0;
    end else begin
        if (((tmp_i_76_reg_3545 == 1'd1) & (tmp_i_reg_3531 == 1'd1) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            membership_index_reg_1442 <= c_reg_3535;
        end else if (((ap_start == 1'b1) & (ap_ST_fsm_state1 == ap_CS_fsm))) begin
            membership_index_reg_1442 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        merge_weights_V_13_l_reg_3899 <= 8'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            merge_weights_V_13_l_reg_3899 <= merge_weights_V_13_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        merge_weights_V_29_l_reg_3919 <= 8'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            merge_weights_V_29_l_reg_3919 <= merge_weights_V_29_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        merge_weights_V_32_l_reg_4094 <= 8'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter3_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            merge_weights_V_32_l_reg_4094 <= merge_weights_V_32_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        merge_weights_V_4_lo_reg_3879 <= 8'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            merge_weights_V_4_lo_reg_3879 <= merge_weights_V_4_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        merge_weights_V_5_lo_reg_3884 <= 8'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            merge_weights_V_5_lo_reg_3884 <= merge_weights_V_5_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        merge_weights_V_61_l_reg_3959 <= 8'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            merge_weights_V_61_l_reg_3959 <= merge_weights_V_61_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_16_i_reg_3629 <= 8'd0;
    end else begin
        if (((tmp_i_76_reg_3545 == 1'd1) & (tmp_i_reg_3531 == 1'd1) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            p_Result_16_i_reg_3629 <= {{r_V_fu_1616_p2[135:128]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_16_i_reg_3629_pp0_iter2_reg <= 8'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            p_Result_16_i_reg_3629_pp0_iter2_reg <= p_Result_16_i_reg_3629;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_8_i_reg_3589 <= 8'd0;
    end else begin
        if (((tmp_i_76_reg_3545 == 1'd1) & (tmp_i_reg_3531 == 1'd1) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            p_Result_8_i_reg_3589 <= {{r_V_fu_1616_p2[71:64]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_i_reg_3709 <= 8'd0;
    end else begin
        if (((tmp_i_76_reg_3545 == 1'd1) & (tmp_i_reg_3531 == 1'd1) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            p_Result_i_reg_3709 <= {{r_V_fu_1616_p2[263:256]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_i_reg_3709_pp0_iter2_reg <= 8'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            p_Result_i_reg_3709_pp0_iter2_reg <= p_Result_i_reg_3709;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp10_reg_3914 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp10_reg_3914 <= tmp10_fu_2642_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp12_reg_4089 <= 13'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter3_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp12_reg_4089 <= tmp12_fu_3286_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp14_reg_3924 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp14_reg_3924 <= tmp14_fu_2704_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp14_reg_3924_pp0_iter3_reg <= 9'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp14_reg_3924_pp0_iter3_reg <= tmp14_reg_3924;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp15_reg_4054 <= 10'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter2_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp15_reg_4054 <= tmp15_fu_3055_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp15_reg_4054_pp0_iter4_reg <= 10'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp15_reg_4054_pp0_iter4_reg <= tmp15_reg_4054;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp16_reg_3929 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp16_reg_3929 <= tmp16_fu_2710_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp17_reg_3934 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp17_reg_3934 <= tmp17_fu_2716_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp18_reg_4059 <= 12'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter2_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp18_reg_4059 <= tmp18_fu_3103_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp18_reg_4059_pp0_iter4_reg <= 12'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp18_reg_4059_pp0_iter4_reg <= tmp18_reg_4059;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp20_reg_3939 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp20_reg_3939 <= tmp20_fu_2722_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp21_reg_3944 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp21_reg_3944 <= tmp21_fu_2728_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp23_reg_3949 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp23_reg_3949 <= tmp23_fu_2734_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp25_reg_3954 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp25_reg_3954 <= tmp25_fu_2740_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp27_reg_4104 <= 14'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter4_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp27_reg_4104 <= tmp27_fu_3346_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp30_reg_3964 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp30_reg_3964 <= tmp30_fu_2866_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp30_reg_3964_pp0_iter3_reg <= 9'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp30_reg_3964_pp0_iter3_reg <= tmp30_reg_3964;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp30_reg_3964_pp0_iter4_reg <= 9'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp30_reg_3964_pp0_iter4_reg <= tmp30_reg_3964_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp31_reg_4069 <= 10'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter2_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp31_reg_4069 <= tmp31_fu_3122_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp31_reg_4069_pp0_iter4_reg <= 10'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp31_reg_4069_pp0_iter4_reg <= tmp31_reg_4069;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp32_reg_3969 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp32_reg_3969 <= tmp32_fu_2872_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp33_reg_3974 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp33_reg_3974 <= tmp33_fu_2878_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp34_reg_4074 <= 11'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter2_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp34_reg_4074 <= tmp34_fu_3160_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp34_reg_4074_pp0_iter4_reg <= 11'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp34_reg_4074_pp0_iter4_reg <= tmp34_reg_4074;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp34_reg_4074_pp0_iter5_reg <= 11'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp34_reg_4074_pp0_iter5_reg <= tmp34_reg_4074_pp0_iter4_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp36_reg_3979 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp36_reg_3979 <= tmp36_fu_2884_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp37_reg_3984 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp37_reg_3984 <= tmp37_fu_2890_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp39_reg_3989 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp39_reg_3989 <= tmp39_fu_2896_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp3_reg_3889 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp3_reg_3889 <= tmp3_fu_2596_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp40_reg_3994 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp40_reg_3994 <= tmp40_fu_2902_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp41_reg_4099 <= 13'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter3_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp41_reg_4099 <= tmp41_fu_3298_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp41_reg_4099_pp0_iter5_reg <= 13'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp41_reg_4099_pp0_iter5_reg <= tmp41_reg_4099;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp42_reg_4079 <= 11'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter2_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp42_reg_4079 <= tmp42_fu_3198_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp44_reg_3999 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp44_reg_3999 <= tmp44_fu_2908_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp45_reg_4004 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp45_reg_4004 <= tmp45_fu_2914_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp47_reg_4009 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp47_reg_4009 <= tmp47_fu_2920_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp48_reg_4014 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp48_reg_4014 <= tmp48_fu_2926_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp49_reg_4084 <= 12'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter2_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp49_reg_4084 <= tmp49_fu_3246_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp51_reg_4019 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp51_reg_4019 <= tmp51_fu_2932_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp52_reg_4024 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp52_reg_4024 <= tmp52_fu_2938_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp54_reg_4029 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp54_reg_4029 <= tmp54_fu_2944_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp56_reg_4034 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp56_reg_4034 <= tmp56_fu_2950_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp5_reg_4039 <= 12'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter2_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp5_reg_4039 <= tmp5_fu_3014_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp6_reg_3904 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp6_reg_3904 <= tmp6_fu_2630_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp6_reg_3904_pp0_iter3_reg <= 9'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp6_reg_3904_pp0_iter3_reg <= tmp6_reg_3904;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp7_reg_4044 <= 11'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter2_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp7_reg_4044 <= tmp7_fu_3036_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp8_reg_3909 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp8_reg_3909 <= tmp8_fu_2636_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_core_id_reg_1430 <= 32'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter5_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
            tmp_core_id_reg_1430 <= membership_index_1_fu_3387_p3;
        end else if (((ap_start == 1'b1) & (ap_ST_fsm_state1 == ap_CS_fsm))) begin
            tmp_core_id_reg_1430 <= msg_core_id;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_76_reg_3545 <= 1'd0;
    end else begin
        if (((tmp_i_fu_1595_p2 == 1'd1) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp_i_76_reg_3545 <= tmp_i_76_fu_1611_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_76_reg_3545_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp_i_76_reg_3545_pp0_iter1_reg <= tmp_i_76_reg_3545;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_76_reg_3545_pp0_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_i_76_reg_3545_pp0_iter2_reg <= tmp_i_76_reg_3545_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_76_reg_3545_pp0_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_i_76_reg_3545_pp0_iter3_reg <= tmp_i_76_reg_3545_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_76_reg_3545_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_i_76_reg_3545_pp0_iter4_reg <= tmp_i_76_reg_3545_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_76_reg_3545_pp0_iter5_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_i_76_reg_3545_pp0_iter5_reg <= tmp_i_76_reg_3545_pp0_iter4_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_reg_3531 <= 1'd0;
    end else begin
        if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp_i_reg_3531 <= tmp_i_fu_1595_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_reg_3531_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp_i_reg_3531_pp0_iter1_reg <= tmp_i_reg_3531;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_reg_3531_pp0_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_i_reg_3531_pp0_iter2_reg <= tmp_i_reg_3531_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_reg_3531_pp0_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_i_reg_3531_pp0_iter3_reg <= tmp_i_reg_3531_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_reg_3531_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_i_reg_3531_pp0_iter4_reg <= tmp_i_reg_3531_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_i_reg_3531_pp0_iter5_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_i_reg_3531_pp0_iter5_reg <= tmp_i_reg_3531_pp0_iter4_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_reg_3874 <= 9'd0;
    end else begin
        if (((tmp_i_76_reg_3545_pp0_iter1_reg == 1'd1) & (tmp_i_reg_3531_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp_reg_3874 <= tmp_fu_2582_p2;
        end
    end
end

always @ (*) begin
    if ((ap_predicate_tran2to9_state2 == 1'b1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((~((update_cluster_in_V_s1_status == 1'b0) | (compute_core_id_out_s_11_status == 1'b0)) & (ap_ST_fsm_state9 == ap_CS_fsm)) | ((ap_ST_fsm_state1 == ap_CS_fsm) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_state1 == ap_CS_fsm) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_i_76_reg_3545 == 1'd1) & (tmp_i_reg_3531 == 1'd1) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_membership_index_phi_fu_1446_p4 = c_reg_3535;
    end else begin
        ap_phi_mux_membership_index_phi_fu_1446_p4 = membership_index_reg_1442;
    end
end

always @ (*) begin
    if ((~((update_cluster_in_V_s1_status == 1'b0) | (compute_core_id_out_s_11_status == 1'b0)) & (ap_ST_fsm_state9 == ap_CS_fsm))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state9 == ap_CS_fsm)) begin
        compute_core_id_out_1_0_blk_n = compute_core_id_out_1_0_full_n;
    end else begin
        compute_core_id_out_1_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((update_cluster_in_V_s1_status == 1'b0) | (compute_core_id_out_s_11_status == 1'b0)) & (ap_ST_fsm_state9 == ap_CS_fsm))) begin
        compute_core_id_out_s_11_update = 1'b1;
    end else begin
        compute_core_id_out_s_11_update = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state9 == ap_CS_fsm)) begin
        compute_core_id_out_s_1_blk_n = compute_core_id_out_s_1_full_n;
    end else begin
        compute_core_id_out_s_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_0_ce0 = 1'b1;
    end else begin
        merge_weights_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_10_ce0 = 1'b1;
    end else begin
        merge_weights_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_11_ce0 = 1'b1;
    end else begin
        merge_weights_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_12_ce0 = 1'b1;
    end else begin
        merge_weights_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_13_ce0 = 1'b1;
    end else begin
        merge_weights_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_14_ce0 = 1'b1;
    end else begin
        merge_weights_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_15_ce0 = 1'b1;
    end else begin
        merge_weights_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        merge_weights_V_16_ce0 = 1'b1;
    end else begin
        merge_weights_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_17_ce0 = 1'b1;
    end else begin
        merge_weights_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_18_ce0 = 1'b1;
    end else begin
        merge_weights_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_19_ce0 = 1'b1;
    end else begin
        merge_weights_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_1_ce0 = 1'b1;
    end else begin
        merge_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_20_ce0 = 1'b1;
    end else begin
        merge_weights_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_21_ce0 = 1'b1;
    end else begin
        merge_weights_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_22_ce0 = 1'b1;
    end else begin
        merge_weights_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_23_ce0 = 1'b1;
    end else begin
        merge_weights_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_24_ce0 = 1'b1;
    end else begin
        merge_weights_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_25_ce0 = 1'b1;
    end else begin
        merge_weights_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_26_ce0 = 1'b1;
    end else begin
        merge_weights_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_27_ce0 = 1'b1;
    end else begin
        merge_weights_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_28_ce0 = 1'b1;
    end else begin
        merge_weights_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_29_ce0 = 1'b1;
    end else begin
        merge_weights_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_2_ce0 = 1'b1;
    end else begin
        merge_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_30_ce0 = 1'b1;
    end else begin
        merge_weights_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_31_ce0 = 1'b1;
    end else begin
        merge_weights_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        merge_weights_V_32_ce0 = 1'b1;
    end else begin
        merge_weights_V_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_33_ce0 = 1'b1;
    end else begin
        merge_weights_V_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_34_ce0 = 1'b1;
    end else begin
        merge_weights_V_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_35_ce0 = 1'b1;
    end else begin
        merge_weights_V_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_36_ce0 = 1'b1;
    end else begin
        merge_weights_V_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_37_ce0 = 1'b1;
    end else begin
        merge_weights_V_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_38_ce0 = 1'b1;
    end else begin
        merge_weights_V_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_39_ce0 = 1'b1;
    end else begin
        merge_weights_V_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_3_ce0 = 1'b1;
    end else begin
        merge_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_40_ce0 = 1'b1;
    end else begin
        merge_weights_V_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_41_ce0 = 1'b1;
    end else begin
        merge_weights_V_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_42_ce0 = 1'b1;
    end else begin
        merge_weights_V_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_43_ce0 = 1'b1;
    end else begin
        merge_weights_V_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_44_ce0 = 1'b1;
    end else begin
        merge_weights_V_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_45_ce0 = 1'b1;
    end else begin
        merge_weights_V_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_46_ce0 = 1'b1;
    end else begin
        merge_weights_V_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_47_ce0 = 1'b1;
    end else begin
        merge_weights_V_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_48_ce0 = 1'b1;
    end else begin
        merge_weights_V_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_49_ce0 = 1'b1;
    end else begin
        merge_weights_V_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_4_ce0 = 1'b1;
    end else begin
        merge_weights_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_50_ce0 = 1'b1;
    end else begin
        merge_weights_V_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_51_ce0 = 1'b1;
    end else begin
        merge_weights_V_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_52_ce0 = 1'b1;
    end else begin
        merge_weights_V_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_53_ce0 = 1'b1;
    end else begin
        merge_weights_V_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_54_ce0 = 1'b1;
    end else begin
        merge_weights_V_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_55_ce0 = 1'b1;
    end else begin
        merge_weights_V_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_56_ce0 = 1'b1;
    end else begin
        merge_weights_V_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_57_ce0 = 1'b1;
    end else begin
        merge_weights_V_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_58_ce0 = 1'b1;
    end else begin
        merge_weights_V_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_59_ce0 = 1'b1;
    end else begin
        merge_weights_V_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_5_ce0 = 1'b1;
    end else begin
        merge_weights_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_60_ce0 = 1'b1;
    end else begin
        merge_weights_V_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_61_ce0 = 1'b1;
    end else begin
        merge_weights_V_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_62_ce0 = 1'b1;
    end else begin
        merge_weights_V_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_63_ce0 = 1'b1;
    end else begin
        merge_weights_V_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_6_ce0 = 1'b1;
    end else begin
        merge_weights_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_7_ce0 = 1'b1;
    end else begin
        merge_weights_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        merge_weights_V_8_ce0 = 1'b1;
    end else begin
        merge_weights_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        merge_weights_V_9_ce0 = 1'b1;
    end else begin
        merge_weights_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state9 == ap_CS_fsm)) begin
        update_cluster_in_V_1_blk_n = update_cluster_in_V_1_full_n;
    end else begin
        update_cluster_in_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state9 == ap_CS_fsm)) begin
        update_cluster_in_V_3_blk_n = update_cluster_in_V_3_full_n;
    end else begin
        update_cluster_in_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state9 == ap_CS_fsm)) begin
        update_cluster_in_V_4_blk_n = update_cluster_in_V_4_full_n;
    end else begin
        update_cluster_in_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((update_cluster_in_V_s1_status == 1'b0) | (compute_core_id_out_s_11_status == 1'b0)) & (ap_ST_fsm_state9 == ap_CS_fsm))) begin
        update_cluster_in_V_s1_update = 1'b1;
    end else begin
        update_cluster_in_V_s1_update = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state9 == ap_CS_fsm)) begin
        update_cluster_in_V_s_blk_n = update_cluster_in_V_s_full_n;
    end else begin
        update_cluster_in_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (ap_ST_fsm_state1 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_tran2to9_state2 == 1'b1)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_tran2to9_state2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((update_cluster_in_V_s1_status == 1'b0) | (compute_core_id_out_s_11_status == 1'b0)) & (ap_ST_fsm_state9 == ap_CS_fsm))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ansmap_V_14_cast_i_fu_3269_p1 = ansmap_V_14_i_fu_3263_p2;

assign ansmap_V_14_i_fu_3263_p2 = (tmp4_fu_3255_p2 + tmp7_cast_fu_3260_p1);

assign ansmap_V_1_cast_cast_fu_2956_p1 = ansmap_V_1_i_reg_3869;

assign ansmap_V_1_i_fu_2568_p2 = (tmp_87_cast_cast_i_fu_2560_p1 + tmp_87_1_cast_cast_i_fu_2564_p1);

assign ansmap_V_30_cast_i_fu_3321_p1 = ansmap_V_30_i_fu_3315_p2;

assign ansmap_V_30_i_fu_3315_p2 = (tmp11_fu_3307_p2 + tmp18_cast_fu_3312_p1);

assign ansmap_V_3_cast_cast_fu_2968_p1 = ansmap_V_3_i_fu_2962_p2;

assign ansmap_V_3_i_fu_2962_p2 = (ansmap_V_1_cast_cast_fu_2956_p1 + tmp_cast_fu_2959_p1);

assign ansmap_V_62_cast_i_fu_3369_p1 = ansmap_V_62_i_fu_3363_p2;

assign ansmap_V_62_i_fu_3363_p2 = (tmp26_fu_3355_p2 + tmp41_cast_fu_3360_p1);

assign ansmap_V_7_cast_cast_fu_3003_p1 = ansmap_V_7_i_fu_2997_p2;

assign ansmap_V_7_i_fu_2997_p2 = (tmp1_fu_2978_p2 + tmp2_cast_fu_2993_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9 = ((update_cluster_in_V_s1_status == 1'b0) | (compute_core_id_out_s_11_status == 1'b0));
end

always @ (*) begin
    ap_condition_1009 = (~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd0) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd20) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd19) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd18) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd17) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd16) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd15) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd14) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd13) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd12) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd11) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd10) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd9) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd8) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd7) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd6) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd5) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd4) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd3) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd2) & ~(ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd1) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_1012 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd0) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_556 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_889 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd1) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_893 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd2) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_897 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd3) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_901 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd4) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_905 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd5) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_909 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd6) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_913 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd7) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_917 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd8) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_921 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd9) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_925 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd10) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_929 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd11) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_933 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd12) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_937 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd13) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_941 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd14) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_945 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd15) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_949 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd16) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_953 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd17) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_957 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd18) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_961 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd19) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_965 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 == 5'd20) & (tmp_i_76_fu_1611_p2 == 1'd1) & (tmp_i_fu_1595_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_rhs_V_reg_1454 = 'bx;

always @ (*) begin
    ap_predicate_tran2to9_state2 = ((tmp_i_fu_1595_p2 == 1'd0) | ((tmp_i_76_fu_1611_p2 == 1'd0) & (tmp_i_fu_1595_p2 == 1'd1)));
end

assign c_fu_1601_p2 = (ap_phi_mux_membership_index_phi_fu_1446_p4 + 5'd1);

assign compute_core_id_out_1_0_din = tmp_core_id_reg_1430;

assign compute_core_id_out_1_0_write = compute_core_id_out_s_11_update;

assign compute_core_id_out_s_11_status = (compute_core_id_out_s_1_full_n & compute_core_id_out_1_0_full_n);

assign compute_core_id_out_s_1_din = msg_i;

assign compute_core_id_out_s_1_write = compute_core_id_out_s_11_update;

assign extLd4240_i_fu_3007_p1 = merge_weights_V_8_q0;

assign extLd4243_i_cast_fu_2606_p1 = merge_weights_V_9_q0;

assign extLd4246_i_cast_fu_2610_p1 = merge_weights_V_10_q0;

assign extLd4249_i_cast_fu_2614_p1 = merge_weights_V_11_q0;

assign extLd4252_i_cast_fu_2618_p1 = merge_weights_V_12_q0;

assign extLd4255_i_cast_fu_3011_p1 = merge_weights_V_13_l_reg_3899;

assign extLd4258_i_cast_fu_2622_p1 = merge_weights_V_14_q0;

assign extLd4261_i_cast_fu_2626_p1 = merge_weights_V_15_q0;

assign membership_ans_V_1_i_fu_3379_p3 = ((tmp_65_i_fu_3373_p2[0:0] === 1'b1) ? ansmap_V_62_cast_i_fu_3369_p1 : membership_ans_V_i_reg_1418);

assign membership_index_1_fu_3387_p3 = ((tmp_65_i_fu_3373_p2[0:0] === 1'b1) ? membership_index_2_c_reg_3540_pp0_iter5_reg : tmp_core_id_reg_1430);

assign membership_index_2_c_fu_1607_p1 = ap_phi_mux_membership_index_phi_fu_1446_p4;

assign merge_weights_V_0_address0 = tmp_85_i_fu_1625_p1;

assign merge_weights_V_10_address0 = tmp_85_i_77_fu_1770_p1;

assign merge_weights_V_11_address0 = tmp_85_10_i_fu_1785_p1;

assign merge_weights_V_12_address0 = tmp_85_11_i_fu_1800_p1;

assign merge_weights_V_13_address0 = tmp_85_12_i_fu_1815_p1;

assign merge_weights_V_14_address0 = tmp_85_13_i_fu_1830_p1;

assign merge_weights_V_15_address0 = tmp_85_14_i_fu_1845_p1;

assign merge_weights_V_16_address0 = tmp_85_15_i_fu_3042_p1;

assign merge_weights_V_17_address0 = tmp_85_16_i_fu_1870_p1;

assign merge_weights_V_18_address0 = tmp_85_17_i_fu_1885_p1;

assign merge_weights_V_19_address0 = tmp_85_18_i_fu_1900_p1;

assign merge_weights_V_1_address0 = tmp_85_1_i_fu_1640_p1;

assign merge_weights_V_20_address0 = tmp_85_19_i_fu_1915_p1;

assign merge_weights_V_21_address0 = tmp_85_20_i_fu_1930_p1;

assign merge_weights_V_22_address0 = tmp_85_21_i_fu_1945_p1;

assign merge_weights_V_23_address0 = tmp_85_22_i_fu_1960_p1;

assign merge_weights_V_24_address0 = tmp_85_23_i_fu_1975_p1;

assign merge_weights_V_25_address0 = tmp_85_24_i_fu_1990_p1;

assign merge_weights_V_26_address0 = tmp_85_25_i_fu_2005_p1;

assign merge_weights_V_27_address0 = tmp_85_26_i_fu_2020_p1;

assign merge_weights_V_28_address0 = tmp_85_27_i_fu_2035_p1;

assign merge_weights_V_29_address0 = tmp_85_28_i_fu_2050_p1;

assign merge_weights_V_2_address0 = tmp_85_2_i_fu_1655_p1;

assign merge_weights_V_30_address0 = tmp_85_29_i_fu_2065_p1;

assign merge_weights_V_31_address0 = tmp_85_30_i_fu_2080_p1;

assign merge_weights_V_32_address0 = tmp_85_31_i_fu_3109_p1;

assign merge_weights_V_33_address0 = tmp_85_32_i_fu_2105_p1;

assign merge_weights_V_34_address0 = tmp_85_33_i_fu_2120_p1;

assign merge_weights_V_35_address0 = tmp_85_34_i_fu_2135_p1;

assign merge_weights_V_36_address0 = tmp_85_35_i_fu_2150_p1;

assign merge_weights_V_37_address0 = tmp_85_36_i_fu_2165_p1;

assign merge_weights_V_38_address0 = tmp_85_37_i_fu_2180_p1;

assign merge_weights_V_39_address0 = tmp_85_38_i_fu_2195_p1;

assign merge_weights_V_3_address0 = tmp_85_3_i_fu_1670_p1;

assign merge_weights_V_40_address0 = tmp_85_39_i_fu_2210_p1;

assign merge_weights_V_41_address0 = tmp_85_40_i_fu_2225_p1;

assign merge_weights_V_42_address0 = tmp_85_41_i_fu_2240_p1;

assign merge_weights_V_43_address0 = tmp_85_42_i_fu_2255_p1;

assign merge_weights_V_44_address0 = tmp_85_43_i_fu_2270_p1;

assign merge_weights_V_45_address0 = tmp_85_44_i_fu_2285_p1;

assign merge_weights_V_46_address0 = tmp_85_45_i_fu_2300_p1;

assign merge_weights_V_47_address0 = tmp_85_46_i_fu_2315_p1;

assign merge_weights_V_48_address0 = tmp_85_47_i_fu_2330_p1;

assign merge_weights_V_49_address0 = tmp_85_48_i_fu_2345_p1;

assign merge_weights_V_4_address0 = tmp_85_4_i_fu_1685_p1;

assign merge_weights_V_50_address0 = tmp_85_49_i_fu_2360_p1;

assign merge_weights_V_51_address0 = tmp_85_50_i_fu_2375_p1;

assign merge_weights_V_52_address0 = tmp_85_51_i_fu_2390_p1;

assign merge_weights_V_53_address0 = tmp_85_52_i_fu_2405_p1;

assign merge_weights_V_54_address0 = tmp_85_53_i_fu_2420_p1;

assign merge_weights_V_55_address0 = tmp_85_54_i_fu_2435_p1;

assign merge_weights_V_56_address0 = tmp_85_55_i_fu_2450_p1;

assign merge_weights_V_57_address0 = tmp_85_56_i_fu_2465_p1;

assign merge_weights_V_58_address0 = tmp_85_57_i_fu_2480_p1;

assign merge_weights_V_59_address0 = tmp_85_58_i_fu_2495_p1;

assign merge_weights_V_5_address0 = tmp_85_5_i_fu_1700_p1;

assign merge_weights_V_60_address0 = tmp_85_59_i_fu_2510_p1;

assign merge_weights_V_61_address0 = tmp_85_60_i_fu_2525_p1;

assign merge_weights_V_62_address0 = tmp_85_61_i_fu_2540_p1;

assign merge_weights_V_63_address0 = tmp_85_62_i_fu_2555_p1;

assign merge_weights_V_6_address0 = tmp_85_6_i_fu_1715_p1;

assign merge_weights_V_7_address0 = tmp_85_7_i_fu_1730_p1;

assign merge_weights_V_8_address0 = tmp_85_8_i_fu_2602_p1;

assign merge_weights_V_9_address0 = tmp_85_9_i_fu_1755_p1;

assign p_Result_10_i_fu_1760_p4 = {{r_V_fu_1616_p2[87:80]}};

assign p_Result_11_i_fu_1775_p4 = {{r_V_fu_1616_p2[95:88]}};

assign p_Result_12_i_fu_1790_p4 = {{r_V_fu_1616_p2[103:96]}};

assign p_Result_13_i_fu_1805_p4 = {{r_V_fu_1616_p2[111:104]}};

assign p_Result_14_i_fu_1820_p4 = {{r_V_fu_1616_p2[119:112]}};

assign p_Result_15_i_fu_1835_p4 = {{r_V_fu_1616_p2[127:120]}};

assign p_Result_17_i_fu_1860_p4 = {{r_V_fu_1616_p2[143:136]}};

assign p_Result_18_i_fu_1875_p4 = {{r_V_fu_1616_p2[151:144]}};

assign p_Result_19_i_fu_1890_p4 = {{r_V_fu_1616_p2[159:152]}};

assign p_Result_1_i_fu_1630_p4 = {{r_V_fu_1616_p2[15:8]}};

assign p_Result_20_i_fu_1905_p4 = {{r_V_fu_1616_p2[167:160]}};

assign p_Result_21_i_fu_1920_p4 = {{r_V_fu_1616_p2[175:168]}};

assign p_Result_22_i_fu_1935_p4 = {{r_V_fu_1616_p2[183:176]}};

assign p_Result_23_i_fu_1950_p4 = {{r_V_fu_1616_p2[191:184]}};

assign p_Result_24_i_fu_1965_p4 = {{r_V_fu_1616_p2[199:192]}};

assign p_Result_25_i_fu_1980_p4 = {{r_V_fu_1616_p2[207:200]}};

assign p_Result_26_i_fu_1995_p4 = {{r_V_fu_1616_p2[215:208]}};

assign p_Result_27_i_fu_2010_p4 = {{r_V_fu_1616_p2[223:216]}};

assign p_Result_28_i_fu_2025_p4 = {{r_V_fu_1616_p2[231:224]}};

assign p_Result_29_i_fu_2040_p4 = {{r_V_fu_1616_p2[239:232]}};

assign p_Result_2_i_fu_1645_p4 = {{r_V_fu_1616_p2[23:16]}};

assign p_Result_30_i_fu_2055_p4 = {{r_V_fu_1616_p2[247:240]}};

assign p_Result_31_i_fu_2070_p4 = {{r_V_fu_1616_p2[255:248]}};

assign p_Result_32_i_fu_2095_p4 = {{r_V_fu_1616_p2[271:264]}};

assign p_Result_33_i_fu_2110_p4 = {{r_V_fu_1616_p2[279:272]}};

assign p_Result_34_i_fu_2125_p4 = {{r_V_fu_1616_p2[287:280]}};

assign p_Result_35_i_fu_2140_p4 = {{r_V_fu_1616_p2[295:288]}};

assign p_Result_36_i_fu_2155_p4 = {{r_V_fu_1616_p2[303:296]}};

assign p_Result_37_i_fu_2170_p4 = {{r_V_fu_1616_p2[311:304]}};

assign p_Result_38_i_fu_2185_p4 = {{r_V_fu_1616_p2[319:312]}};

assign p_Result_39_i_fu_2200_p4 = {{r_V_fu_1616_p2[327:320]}};

assign p_Result_3_i_fu_1660_p4 = {{r_V_fu_1616_p2[31:24]}};

assign p_Result_40_i_fu_2215_p4 = {{r_V_fu_1616_p2[335:328]}};

assign p_Result_41_i_fu_2230_p4 = {{r_V_fu_1616_p2[343:336]}};

assign p_Result_42_i_fu_2245_p4 = {{r_V_fu_1616_p2[351:344]}};

assign p_Result_43_i_fu_2260_p4 = {{r_V_fu_1616_p2[359:352]}};

assign p_Result_44_i_fu_2275_p4 = {{r_V_fu_1616_p2[367:360]}};

assign p_Result_45_i_fu_2290_p4 = {{r_V_fu_1616_p2[375:368]}};

assign p_Result_46_i_fu_2305_p4 = {{r_V_fu_1616_p2[383:376]}};

assign p_Result_47_i_fu_2320_p4 = {{r_V_fu_1616_p2[391:384]}};

assign p_Result_48_i_fu_2335_p4 = {{r_V_fu_1616_p2[399:392]}};

assign p_Result_49_i_fu_2350_p4 = {{r_V_fu_1616_p2[407:400]}};

assign p_Result_4_i_fu_1675_p4 = {{r_V_fu_1616_p2[39:32]}};

assign p_Result_50_i_fu_2365_p4 = {{r_V_fu_1616_p2[415:408]}};

assign p_Result_51_i_fu_2380_p4 = {{r_V_fu_1616_p2[423:416]}};

assign p_Result_52_i_fu_2395_p4 = {{r_V_fu_1616_p2[431:424]}};

assign p_Result_53_i_fu_2410_p4 = {{r_V_fu_1616_p2[439:432]}};

assign p_Result_54_i_fu_2425_p4 = {{r_V_fu_1616_p2[447:440]}};

assign p_Result_55_i_fu_2440_p4 = {{r_V_fu_1616_p2[455:448]}};

assign p_Result_56_i_fu_2455_p4 = {{r_V_fu_1616_p2[463:456]}};

assign p_Result_57_i_fu_2470_p4 = {{r_V_fu_1616_p2[471:464]}};

assign p_Result_58_i_fu_2485_p4 = {{r_V_fu_1616_p2[479:472]}};

assign p_Result_59_i_fu_2500_p4 = {{r_V_fu_1616_p2[487:480]}};

assign p_Result_5_i_fu_1690_p4 = {{r_V_fu_1616_p2[47:40]}};

assign p_Result_60_i_fu_2515_p4 = {{r_V_fu_1616_p2[495:488]}};

assign p_Result_61_i_fu_2530_p4 = {{r_V_fu_1616_p2[503:496]}};

assign p_Result_62_i_fu_2545_p4 = {{r_V_fu_1616_p2[511:504]}};

assign p_Result_6_i_fu_1705_p4 = {{r_V_fu_1616_p2[55:48]}};

assign p_Result_7_i_fu_1720_p4 = {{r_V_fu_1616_p2[63:56]}};

assign p_Result_9_i_fu_1745_p4 = {{r_V_fu_1616_p2[79:72]}};

assign r_V_fu_1616_p2 = (msg_new_features_V & ap_phi_reg_pp0_iter1_rhs_V_reg_1454);

assign tmp10_cast_fu_3023_p1 = tmp10_reg_3914;

assign tmp10_fu_2642_p2 = (extLd4261_i_cast_fu_2626_p1 + extLd4258_i_cast_fu_2622_p1);

assign tmp11_fu_3307_p2 = (tmp12_reg_4089 + tmp15_cast_fu_3304_p1);

assign tmp12_fu_3286_p2 = (tmp13_fu_3277_p2 + tmp14_cast_fu_3283_p1);

assign tmp13_fu_3277_p2 = (tmp_87_15_cast_i_fu_3273_p1 + ansmap_V_14_cast_i_fu_3269_p1);

assign tmp14_cast_fu_3283_p1 = tmp14_reg_3924_pp0_iter3_reg;

assign tmp14_fu_2704_p2 = (tmp_87_17_cast_i_cas_fu_2652_p1 + tmp_87_16_cast_i_cas_fu_2648_p1);

assign tmp15_cast_fu_3304_p1 = tmp15_reg_4054_pp0_iter4_reg;

assign tmp15_fu_3055_p2 = (tmp16_cast_fu_3049_p1 + tmp17_cast_fu_3052_p1);

assign tmp16_cast_fu_3049_p1 = tmp16_reg_3929;

assign tmp16_fu_2710_p2 = (tmp_87_19_cast_i_cas_fu_2660_p1 + tmp_87_18_cast_i_cas_fu_2656_p1);

assign tmp17_cast_fu_3052_p1 = tmp17_reg_3934;

assign tmp17_fu_2716_p2 = (tmp_87_21_cast_i_cas_fu_2668_p1 + tmp_87_20_cast_i_cas_fu_2664_p1);

assign tmp18_cast_fu_3312_p1 = tmp18_reg_4059_pp0_iter4_reg;

assign tmp18_fu_3103_p2 = (tmp19_cast_fu_3073_p1 + tmp22_cast_fu_3099_p1);

assign tmp19_cast_fu_3073_p1 = tmp19_fu_3067_p2;

assign tmp19_fu_3067_p2 = (tmp20_cast_fu_3061_p1 + tmp21_cast_fu_3064_p1);

assign tmp1_fu_2978_p2 = (tmp_87_4_cast_cast_i_fu_2972_p1 + ansmap_V_3_cast_cast_fu_2968_p1);

assign tmp20_cast_fu_3061_p1 = tmp20_reg_3939;

assign tmp20_fu_2722_p2 = (tmp_87_23_cast_i_cas_fu_2676_p1 + tmp_87_22_cast_i_cas_fu_2672_p1);

assign tmp21_cast_fu_3064_p1 = tmp21_reg_3944;

assign tmp21_fu_2728_p2 = (tmp_87_25_cast_i_cas_fu_2684_p1 + tmp_87_24_cast_i_cas_fu_2680_p1);

assign tmp22_cast_fu_3099_p1 = tmp22_fu_3093_p2;

assign tmp22_fu_3093_p2 = (tmp23_cast_fu_3077_p1 + tmp24_cast_fu_3089_p1);

assign tmp23_cast_fu_3077_p1 = tmp23_reg_3949;

assign tmp23_fu_2734_p2 = (tmp_87_27_cast_i_cas_fu_2692_p1 + tmp_87_26_cast_i_cas_fu_2688_p1);

assign tmp24_cast_fu_3089_p1 = tmp24_fu_3083_p2;

assign tmp24_fu_3083_p2 = (tmp_87_28_cast_i_cas_fu_3046_p1 + tmp25_cast_fu_3080_p1);

assign tmp25_cast_fu_3080_p1 = tmp25_reg_3954;

assign tmp25_fu_2740_p2 = (tmp_87_30_cast_i_cas_fu_2700_p1 + tmp_87_29_cast_i_cas_fu_2696_p1);

assign tmp26_fu_3355_p2 = (tmp27_reg_4104 + tmp34_cast_fu_3352_p1);

assign tmp27_fu_3346_p2 = (tmp28_fu_3337_p2 + tmp31_cast_fu_3343_p1);

assign tmp28_fu_3337_p2 = (tmp29_fu_3328_p2 + tmp30_cast_fu_3334_p1);

assign tmp29_fu_3328_p2 = (tmp_87_31_cast_i_fu_3325_p1 + ansmap_V_30_cast_i_fu_3321_p1);

assign tmp2_cast_fu_2993_p1 = tmp2_fu_2987_p2;

assign tmp2_fu_2987_p2 = (tmp_87_5_cast_cast_i_fu_2975_p1 + tmp3_cast_fu_2984_p1);

assign tmp30_cast_fu_3334_p1 = tmp30_reg_3964_pp0_iter4_reg;

assign tmp30_fu_2866_p2 = (tmp_87_33_cast_i_cas_fu_2750_p1 + tmp_87_32_cast_i_cas_fu_2746_p1);

assign tmp31_cast_fu_3343_p1 = tmp31_reg_4069_pp0_iter4_reg;

assign tmp31_fu_3122_p2 = (tmp32_cast_fu_3116_p1 + tmp33_cast_fu_3119_p1);

assign tmp32_cast_fu_3116_p1 = tmp32_reg_3969;

assign tmp32_fu_2872_p2 = (tmp_87_35_cast_i_cas_fu_2758_p1 + tmp_87_34_cast_i_cas_fu_2754_p1);

assign tmp33_cast_fu_3119_p1 = tmp33_reg_3974;

assign tmp33_fu_2878_p2 = (tmp_87_37_cast_i_cas_fu_2766_p1 + tmp_87_36_cast_i_cas_fu_2762_p1);

assign tmp34_cast_fu_3352_p1 = tmp34_reg_4074_pp0_iter5_reg;

assign tmp34_fu_3160_p2 = (tmp35_cast_fu_3140_p1 + tmp38_cast_fu_3156_p1);

assign tmp35_cast_fu_3140_p1 = tmp35_fu_3134_p2;

assign tmp35_fu_3134_p2 = (tmp36_cast_fu_3128_p1 + tmp37_cast_fu_3131_p1);

assign tmp36_cast_fu_3128_p1 = tmp36_reg_3979;

assign tmp36_fu_2884_p2 = (tmp_87_39_cast_i_cas_fu_2774_p1 + tmp_87_38_cast_i_cas_fu_2770_p1);

assign tmp37_cast_fu_3131_p1 = tmp37_reg_3984;

assign tmp37_fu_2890_p2 = (tmp_87_41_cast_i_cas_fu_2782_p1 + tmp_87_40_cast_i_cas_fu_2778_p1);

assign tmp38_cast_fu_3156_p1 = tmp38_fu_3150_p2;

assign tmp38_fu_3150_p2 = (tmp39_cast_fu_3144_p1 + tmp40_cast_fu_3147_p1);

assign tmp39_cast_fu_3144_p1 = tmp39_reg_3989;

assign tmp39_fu_2896_p2 = (tmp_87_43_cast_i_cas_fu_2790_p1 + tmp_87_42_cast_i_cas_fu_2786_p1);

assign tmp3_cast_fu_2984_p1 = tmp3_reg_3889;

assign tmp3_fu_2596_p2 = (tmp_87_7_cast_cast_i_fu_2592_p1 + tmp_87_6_cast_cast_i_fu_2588_p1);

assign tmp40_cast_fu_3147_p1 = tmp40_reg_3994;

assign tmp40_fu_2902_p2 = (tmp_87_45_cast_i_cas_fu_2798_p1 + tmp_87_44_cast_i_cas_fu_2794_p1);

assign tmp41_cast_fu_3360_p1 = tmp41_reg_4099_pp0_iter5_reg;

assign tmp41_fu_3298_p2 = (tmp42_cast_fu_3292_p1 + tmp49_cast_fu_3295_p1);

assign tmp42_cast_fu_3292_p1 = tmp42_reg_4079;

assign tmp42_fu_3198_p2 = (tmp43_cast_fu_3178_p1 + tmp46_cast_fu_3194_p1);

assign tmp43_cast_fu_3178_p1 = tmp43_fu_3172_p2;

assign tmp43_fu_3172_p2 = (tmp44_cast_fu_3166_p1 + tmp45_cast_fu_3169_p1);

assign tmp44_cast_fu_3166_p1 = tmp44_reg_3999;

assign tmp44_fu_2908_p2 = (tmp_87_47_cast_i_cas_fu_2806_p1 + tmp_87_46_cast_i_cas_fu_2802_p1);

assign tmp45_cast_fu_3169_p1 = tmp45_reg_4004;

assign tmp45_fu_2914_p2 = (tmp_87_49_cast_i_cas_fu_2814_p1 + tmp_87_48_cast_i_cas_fu_2810_p1);

assign tmp46_cast_fu_3194_p1 = tmp46_fu_3188_p2;

assign tmp46_fu_3188_p2 = (tmp47_cast_fu_3182_p1 + tmp48_cast_fu_3185_p1);

assign tmp47_cast_fu_3182_p1 = tmp47_reg_4009;

assign tmp47_fu_2920_p2 = (tmp_87_51_cast_i_cas_fu_2822_p1 + tmp_87_50_cast_i_cas_fu_2818_p1);

assign tmp48_cast_fu_3185_p1 = tmp48_reg_4014;

assign tmp48_fu_2926_p2 = (tmp_87_53_cast_i_cas_fu_2830_p1 + tmp_87_52_cast_i_cas_fu_2826_p1);

assign tmp49_cast_fu_3295_p1 = tmp49_reg_4084;

assign tmp49_fu_3246_p2 = (tmp50_cast_fu_3216_p1 + tmp53_cast_fu_3242_p1);

assign tmp4_fu_3255_p2 = (tmp5_reg_4039 + tmp6_cast_fu_3252_p1);

assign tmp50_cast_fu_3216_p1 = tmp50_fu_3210_p2;

assign tmp50_fu_3210_p2 = (tmp51_cast_fu_3204_p1 + tmp52_cast_fu_3207_p1);

assign tmp51_cast_fu_3204_p1 = tmp51_reg_4019;

assign tmp51_fu_2932_p2 = (tmp_87_55_cast_i_cas_fu_2838_p1 + tmp_87_54_cast_i_cas_fu_2834_p1);

assign tmp52_cast_fu_3207_p1 = tmp52_reg_4024;

assign tmp52_fu_2938_p2 = (tmp_87_57_cast_i_cas_fu_2846_p1 + tmp_87_56_cast_i_cas_fu_2842_p1);

assign tmp53_cast_fu_3242_p1 = tmp53_fu_3236_p2;

assign tmp53_fu_3236_p2 = (tmp54_cast_fu_3220_p1 + tmp55_cast_fu_3232_p1);

assign tmp54_cast_fu_3220_p1 = tmp54_reg_4029;

assign tmp54_fu_2944_p2 = (tmp_87_59_cast_i_cas_fu_2854_p1 + tmp_87_58_cast_i_cas_fu_2850_p1);

assign tmp55_cast_fu_3232_p1 = tmp55_fu_3226_p2;

assign tmp55_fu_3226_p2 = (tmp_87_60_cast_i_cas_fu_3113_p1 + tmp56_cast_fu_3223_p1);

assign tmp56_cast_fu_3223_p1 = tmp56_reg_4034;

assign tmp56_fu_2950_p2 = (tmp_87_62_cast_i_cas_fu_2862_p1 + tmp_87_61_cast_i_cas_fu_2858_p1);

assign tmp5_fu_3014_p2 = (extLd4240_i_fu_3007_p1 + ansmap_V_7_cast_cast_fu_3003_p1);

assign tmp6_cast_fu_3252_p1 = tmp6_reg_3904_pp0_iter3_reg;

assign tmp6_fu_2630_p2 = (extLd4246_i_cast_fu_2610_p1 + extLd4243_i_cast_fu_2606_p1);

assign tmp7_cast_fu_3260_p1 = tmp7_reg_4044;

assign tmp7_fu_3036_p2 = (tmp8_cast_fu_3020_p1 + tmp9_cast_fu_3032_p1);

assign tmp8_cast_fu_3020_p1 = tmp8_reg_3909;

assign tmp8_fu_2636_p2 = (extLd4252_i_cast_fu_2618_p1 + extLd4249_i_cast_fu_2614_p1);

assign tmp9_cast_fu_3032_p1 = tmp9_fu_3026_p2;

assign tmp9_fu_3026_p2 = (extLd4255_i_cast_fu_3011_p1 + tmp10_cast_fu_3023_p1);

assign tmp_65_i_fu_3373_p2 = ((ansmap_V_62_cast_i_fu_3369_p1 > membership_ans_V_i_reg_1418) ? 1'b1 : 1'b0);

assign tmp_85_10_i_fu_1785_p1 = p_Result_11_i_fu_1775_p4;

assign tmp_85_11_i_fu_1800_p1 = p_Result_12_i_fu_1790_p4;

assign tmp_85_12_i_fu_1815_p1 = p_Result_13_i_fu_1805_p4;

assign tmp_85_13_i_fu_1830_p1 = p_Result_14_i_fu_1820_p4;

assign tmp_85_14_i_fu_1845_p1 = p_Result_15_i_fu_1835_p4;

assign tmp_85_15_i_fu_3042_p1 = p_Result_16_i_reg_3629_pp0_iter2_reg;

assign tmp_85_16_i_fu_1870_p1 = p_Result_17_i_fu_1860_p4;

assign tmp_85_17_i_fu_1885_p1 = p_Result_18_i_fu_1875_p4;

assign tmp_85_18_i_fu_1900_p1 = p_Result_19_i_fu_1890_p4;

assign tmp_85_19_i_fu_1915_p1 = p_Result_20_i_fu_1905_p4;

assign tmp_85_1_i_fu_1640_p1 = p_Result_1_i_fu_1630_p4;

assign tmp_85_20_i_fu_1930_p1 = p_Result_21_i_fu_1920_p4;

assign tmp_85_21_i_fu_1945_p1 = p_Result_22_i_fu_1935_p4;

assign tmp_85_22_i_fu_1960_p1 = p_Result_23_i_fu_1950_p4;

assign tmp_85_23_i_fu_1975_p1 = p_Result_24_i_fu_1965_p4;

assign tmp_85_24_i_fu_1990_p1 = p_Result_25_i_fu_1980_p4;

assign tmp_85_25_i_fu_2005_p1 = p_Result_26_i_fu_1995_p4;

assign tmp_85_26_i_fu_2020_p1 = p_Result_27_i_fu_2010_p4;

assign tmp_85_27_i_fu_2035_p1 = p_Result_28_i_fu_2025_p4;

assign tmp_85_28_i_fu_2050_p1 = p_Result_29_i_fu_2040_p4;

assign tmp_85_29_i_fu_2065_p1 = p_Result_30_i_fu_2055_p4;

assign tmp_85_2_i_fu_1655_p1 = p_Result_2_i_fu_1645_p4;

assign tmp_85_30_i_fu_2080_p1 = p_Result_31_i_fu_2070_p4;

assign tmp_85_31_i_fu_3109_p1 = p_Result_i_reg_3709_pp0_iter2_reg;

assign tmp_85_32_i_fu_2105_p1 = p_Result_32_i_fu_2095_p4;

assign tmp_85_33_i_fu_2120_p1 = p_Result_33_i_fu_2110_p4;

assign tmp_85_34_i_fu_2135_p1 = p_Result_34_i_fu_2125_p4;

assign tmp_85_35_i_fu_2150_p1 = p_Result_35_i_fu_2140_p4;

assign tmp_85_36_i_fu_2165_p1 = p_Result_36_i_fu_2155_p4;

assign tmp_85_37_i_fu_2180_p1 = p_Result_37_i_fu_2170_p4;

assign tmp_85_38_i_fu_2195_p1 = p_Result_38_i_fu_2185_p4;

assign tmp_85_39_i_fu_2210_p1 = p_Result_39_i_fu_2200_p4;

assign tmp_85_3_i_fu_1670_p1 = p_Result_3_i_fu_1660_p4;

assign tmp_85_40_i_fu_2225_p1 = p_Result_40_i_fu_2215_p4;

assign tmp_85_41_i_fu_2240_p1 = p_Result_41_i_fu_2230_p4;

assign tmp_85_42_i_fu_2255_p1 = p_Result_42_i_fu_2245_p4;

assign tmp_85_43_i_fu_2270_p1 = p_Result_43_i_fu_2260_p4;

assign tmp_85_44_i_fu_2285_p1 = p_Result_44_i_fu_2275_p4;

assign tmp_85_45_i_fu_2300_p1 = p_Result_45_i_fu_2290_p4;

assign tmp_85_46_i_fu_2315_p1 = p_Result_46_i_fu_2305_p4;

assign tmp_85_47_i_fu_2330_p1 = p_Result_47_i_fu_2320_p4;

assign tmp_85_48_i_fu_2345_p1 = p_Result_48_i_fu_2335_p4;

assign tmp_85_49_i_fu_2360_p1 = p_Result_49_i_fu_2350_p4;

assign tmp_85_4_i_fu_1685_p1 = p_Result_4_i_fu_1675_p4;

assign tmp_85_50_i_fu_2375_p1 = p_Result_50_i_fu_2365_p4;

assign tmp_85_51_i_fu_2390_p1 = p_Result_51_i_fu_2380_p4;

assign tmp_85_52_i_fu_2405_p1 = p_Result_52_i_fu_2395_p4;

assign tmp_85_53_i_fu_2420_p1 = p_Result_53_i_fu_2410_p4;

assign tmp_85_54_i_fu_2435_p1 = p_Result_54_i_fu_2425_p4;

assign tmp_85_55_i_fu_2450_p1 = p_Result_55_i_fu_2440_p4;

assign tmp_85_56_i_fu_2465_p1 = p_Result_56_i_fu_2455_p4;

assign tmp_85_57_i_fu_2480_p1 = p_Result_57_i_fu_2470_p4;

assign tmp_85_58_i_fu_2495_p1 = p_Result_58_i_fu_2485_p4;

assign tmp_85_59_i_fu_2510_p1 = p_Result_59_i_fu_2500_p4;

assign tmp_85_5_i_fu_1700_p1 = p_Result_5_i_fu_1690_p4;

assign tmp_85_60_i_fu_2525_p1 = p_Result_60_i_fu_2515_p4;

assign tmp_85_61_i_fu_2540_p1 = p_Result_61_i_fu_2530_p4;

assign tmp_85_62_i_fu_2555_p1 = p_Result_62_i_fu_2545_p4;

assign tmp_85_6_i_fu_1715_p1 = p_Result_6_i_fu_1705_p4;

assign tmp_85_7_i_fu_1730_p1 = p_Result_7_i_fu_1720_p4;

assign tmp_85_8_i_fu_2602_p1 = p_Result_8_i_reg_3589;

assign tmp_85_9_i_fu_1755_p1 = p_Result_9_i_fu_1745_p4;

assign tmp_85_i_77_fu_1770_p1 = p_Result_10_i_fu_1760_p4;

assign tmp_85_i_fu_1625_p1 = tmp_925_fu_1621_p1;

assign tmp_87_15_cast_i_fu_3273_p1 = merge_weights_V_16_q0;

assign tmp_87_16_cast_i_cas_fu_2648_p1 = merge_weights_V_17_q0;

assign tmp_87_17_cast_i_cas_fu_2652_p1 = merge_weights_V_18_q0;

assign tmp_87_18_cast_i_cas_fu_2656_p1 = merge_weights_V_19_q0;

assign tmp_87_19_cast_i_cas_fu_2660_p1 = merge_weights_V_20_q0;

assign tmp_87_1_cast_cast_i_fu_2564_p1 = merge_weights_V_1_q0;

assign tmp_87_20_cast_i_cas_fu_2664_p1 = merge_weights_V_21_q0;

assign tmp_87_21_cast_i_cas_fu_2668_p1 = merge_weights_V_22_q0;

assign tmp_87_22_cast_i_cas_fu_2672_p1 = merge_weights_V_23_q0;

assign tmp_87_23_cast_i_cas_fu_2676_p1 = merge_weights_V_24_q0;

assign tmp_87_24_cast_i_cas_fu_2680_p1 = merge_weights_V_25_q0;

assign tmp_87_25_cast_i_cas_fu_2684_p1 = merge_weights_V_26_q0;

assign tmp_87_26_cast_i_cas_fu_2688_p1 = merge_weights_V_27_q0;

assign tmp_87_27_cast_i_cas_fu_2692_p1 = merge_weights_V_28_q0;

assign tmp_87_28_cast_i_cas_fu_3046_p1 = merge_weights_V_29_l_reg_3919;

assign tmp_87_29_cast_i_cas_fu_2696_p1 = merge_weights_V_30_q0;

assign tmp_87_2_cast_cast_i_fu_2574_p1 = merge_weights_V_2_q0;

assign tmp_87_30_cast_i_cas_fu_2700_p1 = merge_weights_V_31_q0;

assign tmp_87_31_cast_i_fu_3325_p1 = merge_weights_V_32_l_reg_4094;

assign tmp_87_32_cast_i_cas_fu_2746_p1 = merge_weights_V_33_q0;

assign tmp_87_33_cast_i_cas_fu_2750_p1 = merge_weights_V_34_q0;

assign tmp_87_34_cast_i_cas_fu_2754_p1 = merge_weights_V_35_q0;

assign tmp_87_35_cast_i_cas_fu_2758_p1 = merge_weights_V_36_q0;

assign tmp_87_36_cast_i_cas_fu_2762_p1 = merge_weights_V_37_q0;

assign tmp_87_37_cast_i_cas_fu_2766_p1 = merge_weights_V_38_q0;

assign tmp_87_38_cast_i_cas_fu_2770_p1 = merge_weights_V_39_q0;

assign tmp_87_39_cast_i_cas_fu_2774_p1 = merge_weights_V_40_q0;

assign tmp_87_3_cast_cast_i_fu_2578_p1 = merge_weights_V_3_q0;

assign tmp_87_40_cast_i_cas_fu_2778_p1 = merge_weights_V_41_q0;

assign tmp_87_41_cast_i_cas_fu_2782_p1 = merge_weights_V_42_q0;

assign tmp_87_42_cast_i_cas_fu_2786_p1 = merge_weights_V_43_q0;

assign tmp_87_43_cast_i_cas_fu_2790_p1 = merge_weights_V_44_q0;

assign tmp_87_44_cast_i_cas_fu_2794_p1 = merge_weights_V_45_q0;

assign tmp_87_45_cast_i_cas_fu_2798_p1 = merge_weights_V_46_q0;

assign tmp_87_46_cast_i_cas_fu_2802_p1 = merge_weights_V_47_q0;

assign tmp_87_47_cast_i_cas_fu_2806_p1 = merge_weights_V_48_q0;

assign tmp_87_48_cast_i_cas_fu_2810_p1 = merge_weights_V_49_q0;

assign tmp_87_49_cast_i_cas_fu_2814_p1 = merge_weights_V_50_q0;

assign tmp_87_4_cast_cast_i_fu_2972_p1 = merge_weights_V_4_lo_reg_3879;

assign tmp_87_50_cast_i_cas_fu_2818_p1 = merge_weights_V_51_q0;

assign tmp_87_51_cast_i_cas_fu_2822_p1 = merge_weights_V_52_q0;

assign tmp_87_52_cast_i_cas_fu_2826_p1 = merge_weights_V_53_q0;

assign tmp_87_53_cast_i_cas_fu_2830_p1 = merge_weights_V_54_q0;

assign tmp_87_54_cast_i_cas_fu_2834_p1 = merge_weights_V_55_q0;

assign tmp_87_55_cast_i_cas_fu_2838_p1 = merge_weights_V_56_q0;

assign tmp_87_56_cast_i_cas_fu_2842_p1 = merge_weights_V_57_q0;

assign tmp_87_57_cast_i_cas_fu_2846_p1 = merge_weights_V_58_q0;

assign tmp_87_58_cast_i_cas_fu_2850_p1 = merge_weights_V_59_q0;

assign tmp_87_59_cast_i_cas_fu_2854_p1 = merge_weights_V_60_q0;

assign tmp_87_5_cast_cast_i_fu_2975_p1 = merge_weights_V_5_lo_reg_3884;

assign tmp_87_60_cast_i_cas_fu_3113_p1 = merge_weights_V_61_l_reg_3959;

assign tmp_87_61_cast_i_cas_fu_2858_p1 = merge_weights_V_62_q0;

assign tmp_87_62_cast_i_cas_fu_2862_p1 = merge_weights_V_63_q0;

assign tmp_87_6_cast_cast_i_fu_2588_p1 = merge_weights_V_6_q0;

assign tmp_87_7_cast_cast_i_fu_2592_p1 = merge_weights_V_7_q0;

assign tmp_87_cast_cast_i_fu_2560_p1 = merge_weights_V_0_q0;

assign tmp_925_fu_1621_p1 = r_V_fu_1616_p2[7:0];

assign tmp_cast_fu_2959_p1 = tmp_reg_3874;

assign tmp_fu_2582_p2 = (tmp_87_3_cast_cast_i_fu_2578_p1 + tmp_87_2_cast_cast_i_fu_2574_p1);

assign tmp_i_76_fu_1611_p2 = (($signed(membership_index_2_c_fu_1607_p1) < $signed(CORE_NUM)) ? 1'b1 : 1'b0);

assign tmp_i_fu_1595_p2 = ((ap_phi_mux_membership_index_phi_fu_1446_p4 < 5'd22) ? 1'b1 : 1'b0);

assign update_cluster_in_V_1_din = tmp_core_id_reg_1430;

assign update_cluster_in_V_1_write = update_cluster_in_V_s1_update;

assign update_cluster_in_V_3_din = msg_i;

assign update_cluster_in_V_3_write = update_cluster_in_V_s1_update;

assign update_cluster_in_V_4_din = msg_new_features_V;

assign update_cluster_in_V_4_write = update_cluster_in_V_s1_update;

assign update_cluster_in_V_s1_status = (update_cluster_in_V_s_full_n & update_cluster_in_V_4_full_n & update_cluster_in_V_3_full_n & update_cluster_in_V_1_full_n);

assign update_cluster_in_V_s_din = msg_old_features_V;

assign update_cluster_in_V_s_write = update_cluster_in_V_s1_update;

always @ (posedge ap_clk) begin
    membership_index_2_c_reg_3540[31:5] <= 27'b000000000000000000000000000;
    membership_index_2_c_reg_3540_pp0_iter1_reg[31:5] <= 27'b000000000000000000000000000;
    membership_index_2_c_reg_3540_pp0_iter2_reg[31:5] <= 27'b000000000000000000000000000;
    membership_index_2_c_reg_3540_pp0_iter3_reg[31:5] <= 27'b000000000000000000000000000;
    membership_index_2_c_reg_3540_pp0_iter4_reg[31:5] <= 27'b000000000000000000000000000;
    membership_index_2_c_reg_3540_pp0_iter5_reg[31:5] <= 27'b000000000000000000000000000;
end

endmodule //core_id_func
